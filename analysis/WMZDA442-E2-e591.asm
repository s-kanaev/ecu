; Input SHA256 : 7F5E7B859D5A58D22C873EBBFE2C063401490FBABE63097AA7E4B81ADB8BDABA
; Input MD5    : 3F181C3C4B148D967845BB4113666A0D
; Input CRC32  : 5CF810FF

; File Name   : C:\chiptuning\firmwares\e0000591\WMZDA442-E2-e591.bin
; Format      : Binary file
; Base Address: 0000h Range: 0000h - 10000h Loaded length: 10000h

; Processor       : C509 [RAM=3200 ROM=0 EPROM=0 EEPROM=0]
; Target assembler: 8051 Cross-Assembler by MetaLink Corporation
; Byte sex        : Big endian

; ===========================================================================

; Segment type: Pure code
                ;.segment code
                CSEG

; =============== S U B R O U T I N E =======================================

; RESET
; Attributes: thunk

                ; public RESET
RESET:
                ljmp    power_on__ignition_key_turned_ ; RESET
; End of function RESET


; =============== S U B R O U T I N E =======================================

; External Interrupt 0
; Attributes: thunk

                ; public IE0
IE0:
                ljmp    IE0_0           ; extint0
; End of function IE0

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
code_9:         db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Timer 0 Overflow
; Attributes: thunk

                ; public TF0
TF0:
                ljmp    TF0_0           ; timint0
; End of function TF0

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 1

                ; public IE1
IE1:
                reti                    ; extint1
; End of function IE1

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Timer 1 Overflow

                ; public TF1
TF1:
                reti                    ; timint1
; End of function TF1

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Serial Channel 0
; Attributes: thunk

                ; public RI0_TI0
RI0_TI0:
                ljmp    RI0_TI0_0       ; serint
; End of function RI0_TI0

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Timer 2 Overflow / Ext. Reload

                ; public TF2_EXF2
TF2_EXF2:
                reti                    ; timint2
; End of function TF2_EXF2

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
code_3F:        db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; A/D Converter

                ; public IADC
IADC:
                reti                    ; A/D Converter
; End of function IADC

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 2
; Attributes: thunk

                ; public IEX2
IEX2:
                ljmp    IEX2_0          ; External Interrupt 2
; End of function IEX2

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 3
; Attributes: thunk

                ; public IEX3
IEX3:
                ljmp    IEX3_0          ; External Interrupt 3
; End of function IEX3

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 4
; Attributes: thunk

                ; public IEX4
IEX4:
                ljmp    IEX4_0          ; External Interrupt 4
; End of function IEX4

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 5

                ; public IEX5
IEX5:
                reti                    ; External Interrupt 5
; End of function IEX5

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; External Interrupt 6
; Attributes: thunk

                ; public IEX6
IEX6:
                ljmp    IEX6_0          ; External Interrupt 6
; End of function IEX6

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Serial Channel 1

                ; public RI1_TI1
RI1_TI1:
                reti                    ; Serial Channel 1
; End of function RI1_TI1

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Compare Match Interupt of Compare Registers assigned to Timer 2 CM0-CM7

                ; public ICMP0_ICMP7
ICMP0_ICMP7:
                reti                    ; Compare Match Interupt of Compare Registers assigned to Timer 2 CM0-CM7
; End of function ICMP0_ICMP7

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Compare Timer Overflow

                ; public CTF
CTF:
                reti                    ; Compare Timer Overflow
; End of function CTF

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Compare Match Interupt of Compare Register COMSET

                ; public ICS
ICS:
                reti                    ; Compare Match Interupt of Compare Register COMSET
; End of function ICS

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Compare Match Interupt of Compare Register COMCLR
; Attributes: thunk

                ; public ICR
ICR:
                ljmp    ICR_0           ; Compare Match Interupt of Compare Register COMCLR
; End of function ICR

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db    2
                db 0F0h
                db    0
                db 0FFh
                db    2
                db    0
                db 0C0h
                db 0FFh
                db    2
                db    0
                db 0CDh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  75h ; u
                db  86h
                db  80h
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  53h ; S
                db 0FAh
                db 0EFh
                db    2
                db  23h ; #
                db  89h
                db  43h ; C
                db 0FAh
                db  10h
                db    2
                db  23h ; #
                db  92h

; =============== S U B R O U T I N E =======================================

; Compare / Capture Event interrupt

                ; public ICC10_ICC17
ICC10_ICC17:
                reti                    ; Compare / Capture Event interrupt
; End of function ICC10_ICC17

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================

; Compare Timer 1 Overflow

                ; public CT1F
CT1F:
                reti                    ; abf1_last
; End of function CT1F

; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    1
                db  3Fh ; ?
                db  87h
                db    1
                db  40h ; @
                db  87h
                db    1
                db  41h ; A
                db  87h
                db    1
                db  42h ; B
                db  87h
                db    1
                db  43h ; C
                db  87h
                db    1
                db  44h ; D
                db  87h
                db    1
                db  2Ah ; *
                db    0
                db    1
                db  2Bh ; +
                db    0
                db    1
                db  2Ch ; ,
                db    0
                db    1
                db  71h ; q
                db    0
                db    1
                db  72h ; r
                db    0
                db    1
                db  73h ; s
                db    0
                db    1
                db  74h ; t
                db    0
                db    1
                db  75h ; u
                db    0
                db    1
                db 0A7h
                db 0F7h
                db    1
                db 0C7h
                db 0F7h
                db    1
                db  79h ; y
                db 0F6h
                db    1
                db 0BDh
                db 0F6h
                db    1
                db 0BFh
                db 0F6h
                db    1
                db  75h ; u
                db 0F6h
                db    1
                db  76h ; v
                db 0F6h
                db    1
                db 0C1h
                db 0F6h
                db    1
                db 0C5h
                db 0F6h
                db    1
                db  59h ; Y
                db    0
                db    1
                db  83h
                db 0F6h
                db    1
                db  3Ah ; :
                db    0
                db    1
                db  3Dh ; =
                db    0
                db    1
                db  3Bh ; ;
                db    0
                db    1
                db  3Eh ; >
                db    0
                db    1
                db  3Ch ; <
                db    0
                db    1
                db  3Fh ; ?
                db    0
                db    1
                db  40h ; @
                db    0
                db    2
                db  7Dh ; }
                db 0F6h
                db    1
                db  76h ; v
                db    0
                db    2
                db  8Dh
                db    7
                db    1
                db  8Dh
                db    7
                db    1
                db  8Dh
                db    7
                db    1
                db  5Ah ; Z
                db    0
                db    1
                db  5Bh ; [
                db    0
                db    1
                db  70h ; p
                db 0F7h
                db    1
                db  49h ; I
                db    0
                db    1
                db  4Ch ; L
                db    0
                db    1
                db  4Bh ; K
                db    0
                db    1
                db  48h ; H
                db    0
                db    1
                db  80h
                db 0F7h
                db    1
                db  7Dh ; }
                db 0F7h
                db    1
                db  7Eh ; ~
                db 0F7h
                db    1
                db  83h
                db 0F7h
                db    2
                db 0C8h
                db 0F6h
                db    2
                db 0CCh
                db 0F6h
                db    2
                db 0D2h
                db 0F6h
                db    2
                db 0D0h
                db 0F6h
                db    1
                db    0
                db 0F6h
                db    1
                db  52h ; R
                db    0
                db    1
                db  51h ; Q
                db    0
                db    1
                db  53h ; S
                db    0
                db    1
                db  58h ; X
                db    0
                db    1
                db 0FEh
                db 0F6h
                db    2
                db 0FFh
                db 0F6h
                db    2
                db  68h ; h
                db 0F7h
                db    2
                db    3
                db 0F7h
                db    2
                db  43h ; C
                db 0F7h
                db    2
                db  6Ch ; l
                db 0F7h
                db    2
                db  9Eh
                db 0F7h
                db    1
                db  81h
                db 0F6h
                db    1
                db  82h
                db 0F6h
                db    2
                db  52h ; R
                db 0F7h
                db    1
                db  54h ; T
                db 0F7h
                db    1
                db  67h ; g
                db    0
                db    1
                db  8Dh
                db    7
                db    1
                db  66h ; f
                db    0
                db    1
                db  8Dh
                db    7
                db    0
                db    0
                db 0F5h
                db    0
                db    0
                db 0F5h
                db    0
                db    0
                db 0F4h
                db    0
                db    0
                db 0F4h
                db    1
                db  8Bh
                db 0F6h
                db    1
                db  8Ch
                db 0F6h
                db    1
                db  92h
                db 0F7h
                db    1
                db  8Dh
                db    7
                db    1
                db 0A9h
                db 0F7h
                db    1
                db 0AAh
                db 0F7h
                db    1
                db 0ABh
                db 0F7h
                db    1
                db 0ACh
                db 0F7h
                db    1
                db 0ADh
                db 0F7h
                db    1
                db 0AEh
                db 0F7h
                db    1
                db 0AFh
                db 0F7h
                db    1
                db 0B0h
                db 0F7h
                db    1
                db  63h ; c
                db    0
                db    1
                db  7Ah ; z
                db 0F7h
                db    1
                db  5Dh ; ]
                db    0
                db    1
                db  5Eh ; ^
                db    0
                db    1
                db    2
                db 0F6h
                db    1
                db 0A3h
                db 0F7h
                db    1
                db 0A5h
                db 0F7h
                db    1
                db 0A1h
                db 0F7h
                db    1
                db  86h
                db 0F6h
                db    1
                db  87h
                db 0F6h
                db    1
                db  88h
                db 0F6h
                db    1
                db  85h
                db 0F6h
                db    1
                db  89h
                db 0F6h
                db    1
                db  8Ah
                db 0F6h
                db    1
                db  84h
                db 0F6h
                db    1
                db 0B3h
                db 0F7h
                db    1
                db 0B4h
                db 0F7h
                db    1
                db  6Eh ; n
                db 0F6h
                db    1
                db  6Fh ; o
                db 0F6h
                db    1
                db  70h ; p
                db 0F6h
                db    1
                db  71h ; q
                db 0F6h
                db    1
                db  72h ; r
                db 0F6h
                db    1
                db  73h ; s
                db 0F6h
                db    1
                db  74h ; t
                db 0F6h
                db  20h
                db  4Dh ; M
                db 0F9h
                db    1
                db 0C0h
                db 0F7h
                db    1
                db  72h ; r
                db 0F9h
                db  10h
                db    0
                db 0FFh
                db  10h
                db  10h
                db 0FFh
                db  10h
                db  20h
                db 0FFh
                db  10h
                db  30h ; 0
                db 0FFh
                db    1
                db  73h ; s
                db 0F9h
                db  10h
                db  42h ; B
                db 0FFh
                db  10h
                db  52h ; R
                db 0FFh
                db  10h
                db  62h ; b
                db 0FFh
                db    1
                db  74h ; t
                db 0F9h
                db  0Ah
                db  74h ; t
                db 0FFh
                db  0Ah
                db  8Dh
                db    7
                db  32h ; 2
                db  8Dh
                db    7
                db    1
                db  6Dh ; m
                db    0
                db    2
                db 0BBh
                db 0F6h
                db    2
                db 0ADh
                db 0F6h
                db    1
                db 0D4h
                db 0F6h
                db    1
                db 0D5h
                db 0F6h
                db    2
                db 0D6h
                db 0F6h
                db    2
                db 0E0h
                db 0F6h
                db    2
                db 0D8h
                db 0F6h
                db    2
                db 0DAh
                db 0F6h
                db    2
                db 0CAh
                db 0F6h
                db    2
                db 0EFh
                db 0F6h
                db    2
                db  8Dh
                db    7
                db    1
                db  79h ; y
                db 0F7h
                db    1
                db  45h ; E
                db 0F7h
                db    2
                db  37h ; 7
                db 0F7h
                db    2
                db  0Fh
                db 0F7h
                db    2
                db    5
                db 0F7h
                db    2
                db  35h ; 5
                db 0F7h
                db    1
                db 0B1h
                db 0F7h
                db    1
                db 0B5h
                db 0F7h
                db    1
                db 0B2h
                db 0F7h
                db    1
                db 0B6h
                db 0F7h
                db    1
                db 0B7h
                db 0F7h
                db 0F8h
                db 0D5h
                db 0F7h
                db  80h
                db 0CDh
                db 0F8h
                db    1
                db  8Dh
                db    7
                db    1
                db  8Dh
                db    7
                db    1
                db  8Dh
                db    7
                db    1
                db  8Dh
                db    7
                db    1
                db    4
                db 0F6h
                db    1
                db 0BCh
                db 0F7h
                db    1
                db  8Dh
                db 0F6h
                db    2
                db  8Eh
                db 0F6h
                db    1
                db  90h
                db 0F6h
                db    2
                db  96h
                db 0F6h
                db    2
                db  98h
                db 0F6h
                db    1
                db  66h ; f
                db 0F6h
                db    1
                db  67h ; g
                db 0F6h
                db    1
                db  68h ; h
                db 0F6h
                db    1
                db  69h ; i
                db 0F6h
                db    1
                db  6Ah ; j
                db 0F6h
                db    1
                db  6Bh ; k
                db 0F6h
                db    1
                db  6Ch ; l
                db 0F6h
                db    1
                db  6Dh ; m
                db 0F6h
                db    2
                db  66h ; f
                db 0F6h
                db    2
                db  68h ; h
                db 0F6h
                db    2
                db  6Ah ; j
                db 0F6h
                db    2
                db  6Ch ; l
                db 0F6h
                db    2
                db  80h
                db 0FFh
                db    1
                db  71h ; q
                db 0F9h
                db    2
                db  8Dh
                db    7
                db    2
                db  94h
                db 0F6h
                db    2
                db  3Dh ; =
                db 0F7h
                db    2
                db  4Ch ; L
                db 0F7h
                db    2
                db  3Bh ; ;
                db 0F7h
                db    2
                db  4Ah ; J
                db 0F7h
                db    2
                db  61h ; a
                db 0F7h
                db    1
                db  63h ; c
                db 0F7h
                db    2
                db  5Bh ; [
                db 0F7h
                db    2
                db  59h ; Y
                db 0F7h
                db    1
                db    7
                db 0F7h
                db    1
                db    8
                db 0F7h
                db    1
                db    9
                db 0F7h
                db    1
                db  0Ah
                db 0F7h
                db    1
                db  0Bh
                db 0F7h
                db    1
                db  0Ch
                db 0F7h
                db    1
                db  0Dh
                db 0F7h
                db    1
                db  0Eh
                db 0F7h
                db 0FFh
                db 0FFh
                db    5
                db    1
                db    2
                db    3
                db  74h ; t
                db  2Eh ; .
                db  80h
                db    2
                db    3
                db  65h ; e
                db    3
                db  95h
                db    2
                db    3
                db  65h ; e
                db    2
                db  97h
                db    2
                db    3
                db  6Fh ; o
                db    1
                db 0F0h
                db    1
                db 0FDh
                db    0
                db    0
                db    2
                db  7Fh ; 
                db 0C0h
                db    8
                db    6
                db    2
                db  80h
                db  30h ; 0
                db    8
                db    6
                db    2
                db  80h
                db  40h ; @
                db  10h
                db    6
                db    2
                db  87h
                db  3Fh ; ?
                db    1
                db    0
                db    2
                db  87h
                db  40h ; @
                db    1
                db    0
                db    2
                db  87h
                db  41h ; A
                db    1
                db    0
                db    2
                db  87h
                db  42h ; B
                db    1
                db    0
                db    2
                db  87h
                db  43h ; C
                db    1
                db    0
                db    2
                db  87h
                db  44h ; D
                db    1
                db    0
                db    0
                db    0
                db  2Ah ; *
                db    1
                db    0
                db    0
                db    0
                db  2Bh ; +
                db    1
                db    0
                db    1
                db 0F7h
                db 0A7h
                db    1
                db    0
                db    1
                db 0F6h
                db  79h ; y
                db    1
                db    0
                db    1
                db 0F6h
                db 0BFh
                db    1
                db    0
                db    1
                db 0F6h
                db 0C1h
                db    1
                db    0
                db    0
                db    0
                db  59h ; Y
                db    1
                db    0
                db    1
                db 0F6h
                db 0C5h
                db    1
                db    0
                db    1
                db 0F6h
                db  83h
                db    1
                db    0
                db    0
                db    0
                db  3Ah ; :
                db    1
                db    0
                db    0
                db    0
                db  3Bh ; ;
                db    1
                db    0
                db    0
                db    0
                db  3Ch ; <
                db    1
                db    0
                db    1
                db 0F6h
                db  7Dh ; }
                db    2
                db    0
                db    2
                db    7
                db  8Dh
                db    2
                db    0
                db    0
                db    0
                db  5Ah ; Z
                db    1
                db    0
                db    0
                db    0
                db  5Bh ; [
                db    1
                db    0
                db    1
                db 0F7h
                db  80h
                db    1
                db    0
                db    1
                db 0F6h
                db 0D0h
                db    2
                db    0
                db    1
                db 0F6h
                db    0
                db    1
                db    0
                db    1
                db 0F7h
                db    3
                db    2
                db    0
                db    1
                db 0F7h
                db  6Ch ; l
                db    2
                db    0
                db    1
                db 0F7h
                db  9Eh
                db    2
                db    0
                db    1
                db 0F6h
                db  8Bh
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    1
                db    0
                db    1
                db 0F7h
                db  7Ah ; z
                db    1
                db    0
                db    1
                db 0F6h
                db    2
                db    1
                db    0
                db    1
                db 0F7h
                db 0A1h
                db    1
                db    0
                db    1
                db 0F6h
                db  86h
                db    1
                db    0
                db    1
                db 0F6h
                db  87h
                db    1
                db    0
                db    1
                db 0F6h
                db  88h
                db    1
                db    0
                db    1
                db 0F6h
                db  85h
                db    1
                db    0
                db    1
                db 0F6h
                db  89h
                db    1
                db    0
                db    1
                db 0F6h
                db  8Ah
                db    1
                db    0
                db    1
                db 0F6h
                db  84h
                db    1
                db    0
                db    1
                db 0F7h
                db 0B3h
                db    1
                db    0
                db    1
                db 0F7h
                db 0B4h
                db    1
                db    0
                db    1
                db 0F7h
                db 0C0h
                db    1
                db    0
                db    1
                db 0F6h
                db 0BBh
                db    2
                db    0
                db    1
                db 0F6h
                db 0ADh
                db    2
                db    0
                db    1
                db 0F7h
                db  79h ; y
                db    1
                db    0
                db  21h ; !
                db    0
                db    0
                db  2Ch ; ,
                db    1
                db    1
                db    0
                db    0
                db  71h ; q
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  2Ch ; ,
                db    1
                db    2
                db    0
                db    0
                db  71h ; q
                db    1
                db    2
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  2Ch ; ,
                db    1
                db    4
                db    0
                db    0
                db  71h ; q
                db    1
                db    4
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  2Ch ; ,
                db    1
                db    8
                db    0
                db    0
                db  71h ; q
                db    1
                db    8
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  2Ch ; ,
                db    1
                db  10h
                db    0
                db    0
                db  71h ; q
                db    1
                db  10h
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db    1
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db    2
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db    4
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db    8
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db  10h
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db  20h
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db  40h ; @
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  74h ; t
                db    1
                db  80h
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  75h ; u
                db    1
                db    8
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  75h ; u
                db    1
                db  10h
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db  75h ; u
                db    1
                db  20h
                db    0
                db    0
                db  75h ; u
                db    1
                db    1
                db    0
                db    0
                db    0
                db  63h ; c
                db    1
                db 0F7h
                db  70h ; p
                db    1
                db 0FFh
                db    0
                db    0
                db  72h ; r
                db    1
                db    8
                db    6
                db  34h ; 4
                db    1
                db 0A3h
                db    1
                db 0F7h
                db  7Dh ; }
                db    1
                db 0FFh
                db    0
                db    0
                db  72h ; r
                db    1
                db  40h ; @
                db    0
                db    0
                db    0
                db 0A3h
                db    0
                db    0
                db  58h ; X
                db    1
                db 0FFh
                db    0
                db    0
                db  72h ; r
                db    1
                db    1
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F6h
                db  81h
                db    1
                db 0FFh
                db    0
                db    0
                db  73h ; s
                db    1
                db    8
                db    6
                db  29h ; )
                db    1
                db 0A3h
                db    1
                db 0F6h
                db  82h
                db    1
                db 0FFh
                db    0
                db    0
                db  73h ; s
                db    1
                db  10h
                db    6
                db  30h ; 0
                db    1
                db 0A3h
                db    0
                db    0
                db  67h ; g
                db    1
                db 0FFh
                db    0
                db    0
                db  72h ; r
                db    1
                db  10h
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0A9h
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db    1
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0AAh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db    2
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0ABh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db    4
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0ACh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db    8
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0ADh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db  10h
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0AEh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db  20h
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0AFh
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db  40h ; @
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0B0h
                db    1
                db 0FFh
                db    0
                db    0
                db  76h ; v
                db    1
                db  80h
                db    0
                db    0
                db    0
                db 0A3h
                db    0
                db    0
                db  5Dh ; ]
                db    1
                db 0FFh
                db    0
                db    0
                db  72h ; r
                db    1
                db  20h
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0A3h
                db    1
                db 0FFh
                db    0
                db    0
                db  73h ; s
                db    1
                db    4
                db    0
                db    0
                db    0
                db 0A3h
                db    1
                db 0F7h
                db 0A5h
                db    1
                db 0FFh
                db    0
                db    0
                db  73h ; s
                db    1
                db    2
                db    0
                db    0
                db    0
                db 0A3h
                db  74h ; t
                db    1
                db  90h
                db 0F9h
                db  74h ; t
                db 0F0h
                db  22h ; "
                db  74h ; t
                db    2
                db  80h
                db 0F7h
                db  74h ; t
                db    3
                db  80h
                db 0F3h
                db  0Ch
                db    3
                db  35h ; 5
                db    8
                db  35h ; 5
                db    3
                db  35h ; 5
                db    8
                db  1Bh
                db    3
                db  35h ; 5
                db    8
                db  1Ch
                db    3
                db  35h ; 5
                db    8
                db  1Dh
                db    6
                db    8
                db    8
                db  33h ; 3
                db    6
                db    9
                db    8
                db  34h ; 4
                db  16h
                db  10h
                db    4
                db  3Dh ; =
                db    6
                db    4
                db    8
                db  3Eh ; >
                db  16h
                db  13h
                db    8
                db  40h ; @
                db  16h
                db  14h
                db    8
                db  41h ; A
                db    1
                db  71h ; q
                db    1
                db  49h ; I
                db    1
                db  72h ; r
                db    2
                db  4Ah ; J
                db    3
                db  25h ; %
                db    8
                db  29h ; )
                db    3
                db  30h ; 0
                db    8
                db  2Ah ; *
                db  17h
                db  11h
                db    1
                db  51h ; Q
                db    6
                db    5
                db    8
                db  3Fh ; ?
                db    3
                db  40h ; @
                db    8
                db  36h ; 6
                db    5
                db    1
                db    8
                db  37h ; 7
                db  17h
                db    2
                db    8
                db  4Fh ; O
                db    5
                db  62h ; b
                db    2
                db  19h
                db    5
                db  63h ; c
                db    1
                db  1Ah
                db    1
                db  31h ; 1
                db    2
                db  23h ; #
                db    1
                db  32h ; 2
                db    1
                db  24h ; $
                db    1
                db  37h ; 7
                db    2
                db  25h ; %
                db    1
                db  38h ; 8
                db    1
                db  26h ; &
                db    1
                db  17h
                db    2
                db  15h
                db    1
                db  18h
                db    1
                db  16h
                db  11h
                db  31h ; 1
                db    2
                db  1Fh
                db  11h
                db  32h ; 2
                db    1
                db  20h
                db    1
                db    2
                db    2
                db  0Dh
                db    1
                db    3
                db    1
                db  0Eh
                db    1
                db  22h ; "
                db    2
                db  17h
                db    1
                db  23h ; #
                db    1
                db  18h
                db    1
                db    7
                db    2
                db  0Fh
                db    1
                db    8
                db    1
                db  10h
                db    1
                db  12h
                db    2
                db  11h
                db    1
                db  13h
                db    1
                db  12h
                db  17h
                db  75h ; u
                db    2
                db 0BBh
                db  17h
                db  76h ; v
                db    1
                db 0BCh
                db  17h
                db  81h
                db    2
                db 0C2h
                db  17h
                db  82h
                db    1
                db 0C3h
                db  17h
                db  66h ; f
                db    2
                db 0B1h
                db  17h
                db  67h ; g
                db    1
                db 0B2h
                db    2
                db  53h ; S
                db    8
                db 0A7h
                db    2
                db  54h ; T
                db    8
                db 0A8h
                db  17h
                db  72h ; r
                db    2
                db 0B8h
                db  17h
                db  73h ; s
                db    1
                db 0B9h
                db  17h
                db  78h ; x
                db    2
                db 0BFh
                db  17h
                db  79h ; y
                db    1
                db 0C0h
                db  17h
                db  69h ; i
                db    2
                db 0B5h
                db  17h
                db  70h ; p
                db    1
                db 0B6h
                db    2
                db  67h ; g
                db    2
                db  89h
                db    2
                db  68h ; h
                db    1
                db  8Ah
                db    2
                db  69h ; i
                db    8
                db  8Bh
                db    2
                db  61h ; a
                db    2
                db  83h
                db    2
                db  62h ; b
                db    1
                db  84h
                db    2
                db  63h ; c
                db    8
                db  85h
                db    2
                db  64h ; d
                db    2
                db  86h
                db    2
                db  65h ; e
                db    1
                db  87h
                db    2
                db  66h ; f
                db    8
                db  88h
                db    2
                db  70h ; p
                db    2
                db  8Dh
                db    2
                db  71h ; q
                db    1
                db  8Eh
                db    2
                db  72h ; r
                db    8
                db  8Fh
                db  17h
                db  53h ; S
                db    2
                db 0A4h
                db  17h
                db  54h ; T
                db    1
                db 0A5h
                db  17h
                db  55h ; U
                db    2
                db 0A6h
                db  17h
                db  63h ; c
                db    2
                db 0AEh
                db  17h
                db  64h ; d
                db    1
                db 0AFh
                db  17h
                db  65h ; e
                db    2
                db 0B0h
                db  17h
                db  50h ; P
                db    2
                db 0A1h
                db  17h
                db  51h ; Q
                db    1
                db 0A2h
                db  17h
                db  52h ; R
                db    2
                db 0A3h
                db  17h
                db  60h ; `
                db    2
                db 0ABh
                db  17h
                db  61h ; a
                db    1
                db 0ACh
                db  17h
                db  62h ; b
                db    2
                db 0ADh
                db  13h
                db  24h ; $
                db    2
                db  5Ch ; \
                db  13h
                db    2
                db    1
                db 0E8h
                db  13h
                db  25h ; %
                db    2
                db  5Dh ; ]
                db  13h
                db    3
                db    1
                db 0E9h
                db  13h
                db  23h ; #
                db    2
                db  5Bh ; [
                db  13h
                db    1
                db    1
                db 0E7h
                db  13h
                db  26h ; &
                db    2
                db  5Eh ; ^
                db  13h
                db    4
                db    1
                db 0EAh
                db    1
                db    3
                db    4
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  53h ; S
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR IEX6_0

code_791:                               ; CODE XREF: IEX6_0-8↓j
                mov     A, R4
                clr     C
                rlc     A
                mov     RAM_31, A
                mov     A, R5
                rlc     A
                jnc     code_79D
                ljmp    code_820
; ---------------------------------------------------------------------------

code_79D:                               ; CODE XREF: IEX6_0-140↑j
                mov     RAM_32, A
                mov     A, R0
                clr     C
                subb    A, RAM_31
                mov     RAM_31, A
                mov     A, R1
                subb    A, RAM_32
                mov     RAM_32, A
                setb    PSW.5           ; Program Status Word
                jnc     code_7BE
                clr     PSW.5           ; Program Status Word
                mov     A, RAM_31
                cpl     A
                add     A, #1
                mov     RAM_31, A
                mov     A, RAM_32
                cpl     A
                addc    A, #0
                mov     RAM_32, A

code_7BE:                               ; CODE XREF: IEX6_0-12C↑j
                mov     A, RAM_31
                clr     C
                subb    A, R4
                mov     RAM_31, A
                mov     A, RAM_32
                subb    A, R5
                mov     RAM_32, A
                jnc     code_7EA
                mov     A, R5
                jz      code_7DE
                clr     C
                rrc     A
                mov     B, A            ; B-Register
                mov     A, R4
                rrc     A
                add     A, RAM_31
                mov     A, B            ; B-Register
                addc    A, RAM_32
                jnc     code_820
                sjmp    code_806
; ---------------------------------------------------------------------------

code_7DE:                               ; CODE XREF: IEX6_0-10C↑j
                mov     A, R4
                clr     C
                rrc     A
                add     A, RAM_31
                clr     A
                addc    A, RAM_32
                jnc     code_820
                sjmp    code_806
; ---------------------------------------------------------------------------

code_7EA:                               ; CODE XREF: IEX6_0-10F↑j
                mov     A, R5
                jz      code_7FB
                mov     B, A            ; B-Register
                mov     A, R4
                clr     C
                subb    A, RAM_31
                mov     A, B            ; B-Register
                subb    A, RAM_32
                jc      code_820
                sjmp    code_806
; ---------------------------------------------------------------------------

code_7FB:                               ; CODE XREF: IEX6_0-ED↑j
                mov     A, R4
                clr     C
                rrc     A
                clr     C
                subb    A, RAM_31
                clr     A
                subb    A, RAM_32
                jc      code_820

code_806:                               ; CODE XREF: IEX6_0-FC↑j
                                        ; IEX6_0-F0↑j ...
                jb      PSW.5, code_80E ; Program Status Word
                mov     RAM_30, #3
                sjmp    code_823
; ---------------------------------------------------------------------------

code_80E:                               ; CODE XREF: IEX6_0:code_806↑j
                mov     A, RAM_30
                cjne    A, #3, code_820
                mov     R2, CCL3        ; Compare/Capture Register 3, Low Byte
                mov     R3, CCH3        ; Compare/Capture Register 3, High Byte
                inc     RAM_30
                clr     RAM_26.1
                clr     RAM_26.0
                ljmp    code_955
; ---------------------------------------------------------------------------

code_820:                               ; CODE XREF: IEX6_0-13E↑j
                                        ; IEX6_0-FE↑j ...
                mov     RAM_30, #2

code_823:                               ; CODE XREF: IEX6_0-CC↑j
                                        ; IEX6_0-3↓j
                mov     R4, RAM_18
                mov     R5, RAM_19
                mov     R2, CCL3        ; Compare/Capture Register 3, Low Byte
                mov     R3, CCH3        ; Compare/Capture Register 3, High Byte
                ljmp    code_C03
; ---------------------------------------------------------------------------

code_82E:                               ; CODE XREF: IEX6_0+27↓j
                mov     A, R0
                clr     C
                subb    A, R4
                mov     RAM_31, A
                mov     A, R1
                subb    A, R5
                mov     RAM_32, A
                jnc     code_856
                mov     A, R5
                clr     C
                rrc     A
                mov     B, A            ; B-Register
                mov     A, R4
                rrc     A
                add     A, RAM_31
                mov     A, B            ; B-Register
                addc    A, RAM_32
                jnc     code_84B
                ljmp    code_912
; ---------------------------------------------------------------------------

code_84B:                               ; CODE XREF: IEX6_0-92↑j
                                        ; IEX6_0+31↓j
                jb      RAM_26.1, code_86A
                jb      RAM_26.0, code_866
                setb    RAM_26.1
                ljmp    code_C05
; ---------------------------------------------------------------------------

code_856:                               ; CODE XREF: IEX6_0-A1↑j
                mov     A, R5
                mov     B, A            ; B-Register
                mov     A, R4
                clr     C
                subb    A, RAM_31
                mov     A, B            ; B-Register
                subb    A, RAM_32
                jc      code_86E
                ljmp    code_912
; ---------------------------------------------------------------------------

code_866:                               ; CODE XREF: IEX6_0-8A↑j
                setb    RAM_20.2
                sjmp    code_870
; ---------------------------------------------------------------------------

code_86A:                               ; CODE XREF: IEX6_0:code_84B↑j
                setb    RAM_20.1
                sjmp    code_870
; ---------------------------------------------------------------------------

code_86E:                               ; CODE XREF: IEX6_0-77↑j
                                        ; IEX6_0+37↓j
                setb    RAM_20.0

code_870:                               ; CODE XREF: IEX6_0-70↑j
                                        ; IEX6_0-6C↑j ...
                mov     SETMSK, #0      ; Compare Set Mask Register
                mov     CLRMSK, #0      ; Compare Clear Mask Register
                setb    P5.1            ; Port 5 (PDIR=0)
                setb    P5.0            ; Port 5 (PDIR=0)
                anl     IEN2, #0DFh     ; Interrupt Enable Register 2

code_87D:                               ; CODE XREF: IEX6_0-10↓j
                mov     RAM_30, #0
                clr     RAM_25.2
                clr     RAM_25.3
                mov     RAM_44, #0
                mov     RAM_45, #0
                ljmp    code_C05
; ---------------------------------------------------------------------------

code_88D:                               ; CODE XREF: IEX6_0-38↓j
                clr     RAM_26.2
                anl     CCEN, #3Fh      ; Compare/Capture Enable Register
                orl     CCEN, #40h      ; Compare/Capture Enable Register
                sjmp    code_8C6
; ---------------------------------------------------------------------------

code_897:                               ; CODE XREF: IEX6_0↓j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                mov     PSW, #18h       ; Program Status Word
                jnb     RAM_25.1, code_88D
                mov     R2, CCL3        ; Compare/Capture Register 3, Low Byte
                mov     R3, CCH3        ; Compare/Capture Register 3, High Byte
                cjne    R6, #39h, code_8B9 ; '9'
                mov     A, R2
                add     A, R4
                mov     CCL3, A         ; Compare/Capture Register 3, Low Byte
                mov     A, R3
                addc    A, R5
                mov     CCH3, A         ; Compare/Capture Register 3, High Byte
                clr     IRCON0.5        ; Interrupt Request Control Register 0
                inc     R6
                inc     R7
                ljmp    code_9B7
; ---------------------------------------------------------------------------

code_8B9:                               ; CODE XREF: IEX6_0-31↑j
                clr     RAM_26.2
                anl     CCEN, #3Fh      ; Compare/Capture Enable Register
                orl     CCEN, #40h      ; Compare/Capture Enable Register
                inc     R6
                inc     R7
                ljmp    code_9B7
; ---------------------------------------------------------------------------

code_8C6:                               ; CODE XREF: IEX6_0-43↑j
                                        ; IEX6_0+12↓j
                setb    RAM_25.5
                ljmp    code_87D
; ---------------------------------------------------------------------------

code_8CB:                               ; CODE XREF: IEX6_0+20↓j
                clr     C
                subb    A, #2
                jc      code_8D3
                ljmp    code_791
; ---------------------------------------------------------------------------

code_8D3:                               ; CODE XREF: IEX6_0-A↑j
                inc     RAM_30
                ljmp    code_823
; END OF FUNCTION CHUNK FOR IEX6_0

; =============== S U B R O U T I N E =======================================


IEX6_0:                                 ; CODE XREF: IEX6↑j

; FUNCTION CHUNK AT 0791 SIZE 00000147 BYTES

                jb      RAM_26.2, code_897
                jb      P1.3, code_8E1  ; Port 1 (PDIR=0)
                ljmp    code_C0B
; ---------------------------------------------------------------------------

code_8E1:                               ; CODE XREF: IEX6_0+3↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                mov     PSW, #18h       ; Program Status Word
                jnb     RAM_25.1, code_8C6
                mov     A, CCL3         ; Compare/Capture Register 3, Low Byte
                clr     C
                subb    A, R2
                mov     R0, A
                mov     A, CCH3         ; Compare/Capture Register 3, High Byte
                subb    A, R3
                mov     R1, A
                mov     A, RAM_30
                cjne    A, #4, code_8CB
                mov     A, R1
                orl     A, R5
                jz      code_902
                ljmp    code_82E
; ---------------------------------------------------------------------------

code_902:                               ; CODE XREF: IEX6_0+25↑j
                mov     A, R4
                clr     C
                rrc     A
                clr     C
                subb    A, R0
                jc      code_90C
                ljmp    code_84B
; ---------------------------------------------------------------------------

code_90C:                               ; CODE XREF: IEX6_0+2F↑j
                add     A, R4
                jc      code_912
                ljmp    code_86E
; ---------------------------------------------------------------------------

code_912:                               ; CODE XREF: IEX6_0-90↑j
                                        ; IEX6_0-75↑j ...
                mov     R2, CCL3        ; Compare/Capture Register 3, Low Byte
                mov     R3, CCH3        ; Compare/Capture Register 3, High Byte
                mov     C, RAM_26.1
                mov     RAM_26.0, C
                clr     RAM_26.1
                cjne    R6, #38h, code_93C ; '8'
                mov     R4, RAM_18
                mov     R5, RAM_19
                setb    RAM_26.2
                anl     CCEN, #3Fh      ; Compare/Capture Enable Register
                orl     CCEN, #80h      ; Compare/Capture Enable Register
                setb    P1.3            ; Port 1 (PDIR=0)
                mov     A, R2
                add     A, R4
                mov     CCL3, A         ; Compare/Capture Register 3, Low Byte
                mov     A, R3
                addc    A, R5
                mov     CCH3, A         ; Compare/Capture Register 3, High Byte
                clr     IRCON0.5        ; Interrupt Request Control Register 0
                inc     R6
                inc     R7
                ljmp    code_9B7
; ---------------------------------------------------------------------------

code_93C:                               ; CODE XREF: IEX6_0+44↑j
                jnc     code_952
                mov     R4, RAM_18
                mov     R5, RAM_19
                inc     R6
                inc     R7
                cjne    R7, #1Eh, code_9B7
                mov     R7, #0
                inc     RAM_33
                sjmp    code_9B7
; ---------------------------------------------------------------------------

code_94D:                               ; CODE XREF: IEX6_0:code_952↓j
                setb    RAM_20.3
                ljmp    code_870
; ---------------------------------------------------------------------------

code_952:                               ; CODE XREF: IEX6_0:code_93C↑j
                cjne    R6, #3Bh, code_94D ; ';'

code_955:                               ; CODE XREF: IEX6_0-BB↑j
                mov     R6, #0
                mov     R7, #0
                jnb     RAM_25.2, code_967
                clr     C
                mov     A, R2
                subb    A, RAM_46
                mov     RAM_44, A
                mov     A, R3
                subb    A, RAM_47
                mov     RAM_45, A

code_967:                               ; CODE XREF: IEX6_0+81↑j
                mov     RAM_46, R2
                mov     RAM_47, R3
                setb    RAM_25.2
                jb      RAM_2D.7, code_974
                clr     RAM_2D.4
                sjmp    code_98F
; ---------------------------------------------------------------------------

code_974:                               ; CODE XREF: IEX6_0+95↑j
                jnb     RAM_2E.0, code_97B
                mov     C, P1.2         ; Port 1 (PDIR=0)
                sjmp    code_980
; ---------------------------------------------------------------------------

code_97B:                               ; CODE XREF: IEX6_0:code_974↑j
                mov     C, IRCON0.4     ; Interrupt Request Control Register 0
                clr     IRCON0.4        ; Interrupt Request Control Register 0
                cpl     C

code_980:                               ; CODE XREF: IEX6_0+A1↑j
                jbc     RAM_29.6, code_9A1
                jc      code_98A
                jnb     RAM_25.0, code_98D
                sjmp    code_9A7
; ---------------------------------------------------------------------------

code_98A:                               ; CODE XREF: IEX6_0+AB↑j
                jnb     RAM_25.0, code_9A7

code_98D:                               ; CODE XREF: IEX6_0+AD↑j
                setb    RAM_2D.4

code_98F:                               ; CODE XREF: IEX6_0+9A↑j
                mov     A, RAM_33
                inc     A
                cjne    A, #4, code_996
                clr     A

code_996:                               ; CODE XREF: IEX6_0+BA↑j
                jz      code_9B2
                cjne    A, #2, code_99D
                sjmp    code_9AD
; ---------------------------------------------------------------------------

code_99D:                               ; CODE XREF: IEX6_0+C0↑j
                jc      code_9AD
                sjmp    code_9B2
; ---------------------------------------------------------------------------

code_9A1:                               ; CODE XREF: IEX6_0:code_980↑j
                mov     RAM_25.0, C
                clr     RAM_2D.4
                sjmp    code_9AB
; ---------------------------------------------------------------------------

code_9A7:                               ; CODE XREF: IEX6_0+B0↑j
                                        ; IEX6_0:code_98A↑j
                clr     RAM_2D.4
                cpl     RAM_25.0

code_9AB:                               ; CODE XREF: IEX6_0+CD↑j
                jnc     code_9B2

code_9AD:                               ; CODE XREF: IEX6_0+C3↑j
                                        ; IEX6_0:code_99D↑j
                mov     RAM_33, #2
                sjmp    code_9B7
; ---------------------------------------------------------------------------

code_9B2:                               ; CODE XREF: IEX6_0:code_996↑j
                                        ; IEX6_0+C7↑j ...
                mov     RAM_33, #0
                setb    RAM_25.6

code_9B7:                               ; CODE XREF: IEX6_0-22↑j
                                        ; IEX6_0-15↑j ...
                mov     A, R5
                cjne    A, #4, code_9BB

code_9BB:                               ; CODE XREF: IEX6_0+E0↑j
                jc      code_9C5
                clr     RAM_25.2
                mov     RAM_44, #0
                mov     RAM_45, #0

code_9C5:                               ; CODE XREF: IEX6_0:code_9BB↑j
                mov     A, R7
                jbc     RAM_25.4, code_9E3
                cjne    A, RAM_36, code_9E3
                mov     A, RAM_33
                clr     C
                subb    A, RAM_37
                jnc     code_9D5
                add     A, #4

code_9D5:                               ; CODE XREF: IEX6_0+F9↑j
                mov     RAM_34, A
                setb    RAM_27.0
                setb    TCON.1          ; Timer Control Register
                mov     RAM_36, RAM_38
                mov     RAM_37, RAM_39
                setb    RAM_25.4

code_9E3:                               ; CODE XREF: IEX6_0+EE↑j
                                        ; IEX6_0+F1↑j
                mov     A, R6
                cjne    A, RAM_10, code_9E9
                sjmp    code_9EC
; ---------------------------------------------------------------------------

code_9E9:                               ; CODE XREF: IEX6_0+10C↑j
                ljmp    code_AC5
; ---------------------------------------------------------------------------

code_9EC:                               ; CODE XREF: IEX6_0+10F↑j
                setb    P5.4            ; Port 5 (PDIR=0)
                mov     B, RAM_11       ; B-Register
                clr     C
                mov     A, R4
                rlc     A
                mov     R0, A
                mov     A, R5
                rlc     A
                jz      code_A0B
                mul     AB
                xch     A, R0
                mov     R1, B           ; B-Register
                mov     B, RAM_11       ; B-Register
                mul     AB
                mov     A, R0
                add     A, B            ; B-Register
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                sjmp    code_A11
; ---------------------------------------------------------------------------

code_A0B:                               ; CODE XREF: IEX6_0+11F↑j
                mov     A, R0
                mul     AB
                mov     R0, B           ; B-Register
                mov     R1, #0

code_A11:                               ; CODE XREF: IEX6_0+131↑j
                mov     A, R2
                add     A, R0
                mov     R0, A
                mov     A, R3
                addc    A, R1
                mov     R1, A
                mov     A, RAM_15
                clr     C
                subb    A, #2
                jnc     code_A20
                add     A, #2

code_A20:                               ; CODE XREF: IEX6_0+144↑j
                mov     RAM_5C, A
                cjne    A, #0, code_A73
                mov     B, A            ; B-Register
                mov     ADCON1, #5      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_A30:                               ; CODE XREF: IEX6_0:code_A30↓j
                jb      ADCON0.4, code_A30 ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #83h, code_A38

code_A38:                               ; CODE XREF: IEX6_0+15D↑j
                jc      code_A49
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #4
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A
                setb    C
                sjmp    code_A5B
; ---------------------------------------------------------------------------

code_A49:                               ; CODE XREF: IEX6_0:code_A38↑j
                cjne    A, #14h, code_A4C

code_A4C:                               ; CODE XREF: IEX6_0:code_A49↑j
                jnc     code_A5B
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #8
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A
                clr     C

code_A5B:                               ; CODE XREF: IEX6_0+16F↑j
                                        ; IEX6_0:code_A4C↑j
                mov     A, B            ; B-Register
                jc      code_A73
                mov     COMCLRH, R1     ; Compare Clear Register, High Byte
                mov     COMCLRL, R0     ; Compare Clear Register, Low Byte
                orl     CLRMSK, #2      ; Compare Clear Mask Register
                anl     SETMSK, #0FDh   ; Compare Set Mask Register
                anl     CTCON, #0DFh    ; Compare Timer Control Register
                orl     IEN2, #20h      ; Interrupt Enable Register 2
                clr     RAM_2E.6
                clr     RAM_2E.7

code_A73:                               ; CODE XREF: IEX6_0+14A↑j
                                        ; IEX6_0+185↑j
                cjne    A, #1, code_AC4
                mov     B, A            ; B-Register
                mov     ADCON1, #4      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_A81:                               ; CODE XREF: IEX6_0:code_A81↓j
                jb      ADCON0.4, code_A81 ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #83h, code_A89

code_A89:                               ; CODE XREF: IEX6_0+1AE↑j
                jc      code_A9A
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #1
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A
                setb    C
                sjmp    code_AAC
; ---------------------------------------------------------------------------

code_A9A:                               ; CODE XREF: IEX6_0:code_A89↑j
                cjne    A, #14h, code_A9D

code_A9D:                               ; CODE XREF: IEX6_0:code_A9A↑j
                jnc     code_AAC
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #2
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A
                clr     C

code_AAC:                               ; CODE XREF: IEX6_0+1C0↑j
                                        ; IEX6_0:code_A9D↑j
                mov     A, B            ; B-Register
                jc      code_AC4
                mov     COMCLRH, R1     ; Compare Clear Register, High Byte
                mov     COMCLRL, R0     ; Compare Clear Register, Low Byte
                orl     CLRMSK, #1      ; Compare Clear Mask Register
                anl     SETMSK, #0FEh   ; Compare Set Mask Register
                anl     CTCON, #0DFh    ; Compare Timer Control Register
                orl     IEN2, #20h      ; Interrupt Enable Register 2
                clr     RAM_2E.6
                clr     RAM_2E.7

code_AC4:                               ; CODE XREF: IEX6_0:code_A73↑j
                                        ; IEX6_0+1D6↑j
                mov     A, R6

code_AC5:                               ; CODE XREF: IEX6_0:code_9E9↑j
                cjne    A, RAM_12, code_ACA
                sjmp    code_ACD
; ---------------------------------------------------------------------------

code_ACA:                               ; CODE XREF: IEX6_0:code_AC5↑j
                ljmp    code_B58
; ---------------------------------------------------------------------------

code_ACD:                               ; CODE XREF: IEX6_0+1F0↑j
                clr     P5.4            ; Port 5 (PDIR=0)
                mov     B, RAM_13       ; B-Register
                clr     C
                mov     A, R4
                rlc     A
                mov     R0, A
                mov     A, R5
                rlc     A
                jz      code_AEC
                mul     AB
                xch     A, R0
                mov     R1, B           ; B-Register
                mov     B, RAM_13       ; B-Register
                mul     AB
                mov     A, R0
                add     A, B            ; B-Register
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                sjmp    code_AF2
; ---------------------------------------------------------------------------

code_AEC:                               ; CODE XREF: IEX6_0+200↑j
                mov     A, R0
                mul     AB
                mov     R0, B           ; B-Register
                mov     R1, #0

code_AF2:                               ; CODE XREF: IEX6_0+212↑j
                mov     A, R2
                add     A, R0
                mov     R0, A
                mov     A, R3
                addc    A, R1
                mov     R1, A
                mov     A, RAM_15
                clr     C
                subb    A, #2
                jnc     code_B01
                add     A, #2

code_B01:                               ; CODE XREF: IEX6_0+225↑j
                cjne    A, #0, code_B0B
                mov     COMSETH, R1     ; Compare Set Register, High Byte
                mov     COMSETL, R0     ; Compare Set Register, Low Byte
                orl     SETMSK, #2      ; Compare Set Mask Register

code_B0B:                               ; CODE XREF: IEX6_0:code_B01↑j
                cjne    A, #1, code_B15
                mov     COMSETH, R1     ; Compare Set Register, High Byte
                mov     COMSETL, R0     ; Compare Set Register, Low Byte
                orl     SETMSK, #1      ; Compare Set Mask Register

code_B15:                               ; CODE XREF: IEX6_0:code_B0B↑j
                mov     RAM_16, RAM_15
                inc     RAM_15
                mov     A, RAM_15
                cjne    A, #4, code_B22
                mov     RAM_15, #0

code_B22:                               ; CODE XREF: IEX6_0+244↑j
                jnb     RAM_2D.7, code_B3E
                jb      RAM_2D.4, code_B3E
                jb      RAM_26.5, code_B30
                jnb     RAM_25.0, code_B3E
                sjmp    code_B33
; ---------------------------------------------------------------------------

code_B30:                               ; CODE XREF: IEX6_0+250↑j
                jb      RAM_25.0, code_B3E

code_B33:                               ; CODE XREF: IEX6_0+256↑j
                mov     A, RAM_15
                clr     C
                subb    A, #2
                jnc     code_B3C
                add     A, #4

code_B3C:                               ; CODE XREF: IEX6_0+260↑j
                mov     RAM_15, A

code_B3E:                               ; CODE XREF: IEX6_0:code_B22↑j
                                        ; IEX6_0+24D↑j ...
                mov     A, RAM_15
                rl      A
                rl      A
                add     A, #99h
                mov     R0, A
                mov     RAM_10, @R0
                inc     R0
                mov     RAM_11, @R0
                inc     R0
                mov     A, @R0
                mov     C, ACC.7        ; Accumulator
                mov     RAM_26.5, C
                anl     A, #7Fh
                mov     RAM_12, A
                inc     R0
                mov     RAM_13, @R0
                mov     A, R6

code_B58:                               ; CODE XREF: IEX6_0:code_ACA↑j
                cjne    A, RAM_F, code_B5D
                sjmp    code_B60
; ---------------------------------------------------------------------------

code_B5D:                               ; CODE XREF: IEX6_0:code_B58↑j
                ljmp    code_BE4
; ---------------------------------------------------------------------------

code_B60:                               ; CODE XREF: IEX6_0+283↑j
                jnb     RAM_2E.1, code_B9A
                mov     B, RAM_14       ; B-Register
                clr     C
                mov     A, R4
                rlc     A
                mov     R0, A
                mov     A, R5
                rlc     A
                jz      code_B80
                mul     AB
                xch     A, R0
                mov     R1, B           ; B-Register
                mov     B, RAM_14       ; B-Register
                mul     AB
                mov     A, R0
                add     A, B            ; B-Register
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                sjmp    code_B86
; ---------------------------------------------------------------------------

code_B80:                               ; CODE XREF: IEX6_0+294↑j
                mov     A, R0
                mul     AB
                mov     R0, B           ; B-Register
                mov     R1, #0

code_B86:                               ; CODE XREF: IEX6_0+2A6↑j
                mov     A, R2
                add     A, R0
                mov     R0, A
                mov     A, R3
                addc    A, R1
                mov     R1, A
                mov     CCL4, R0        ; Compare/Capture Register 4, Low Byte
                mov     CCH4, R1        ; Compare/Capture Register 4, High Byte
                clr     IRCON0.1        ; Interrupt Request Control Register 0
                setb    IEN1.1          ; Interrupt Enable Register 1
                setb    P1.4            ; Port 1 (PDIR=0)
                setb    RAM_25.7
                sjmp    code_BAF
; ---------------------------------------------------------------------------

code_B9A:                               ; CODE XREF: IEX6_0:code_B60↑j
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                mov     DPTR, #785h
                mov     A, RAM_16
                movc    A, @A+DPTR
                dec     A
                mov     RAM_6D, A
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                setb    RAM_27.1
                setb    TCON.1          ; Timer Control Register

code_BAF:                               ; CODE XREF: IEX6_0+2C0↑j
                mov     A, RAM_16
                inc     A
                cjne    A, #4, code_BB8
                clr     A
                sjmp    code_BBF
; ---------------------------------------------------------------------------

code_BB8:                               ; CODE XREF: IEX6_0+2DA↑j
                clr     C
                subb    A, #2
                jnc     code_BBF
                add     A, #2

code_BBF:                               ; CODE XREF: IEX6_0+2DE↑j
                                        ; IEX6_0+2E3↑j
                rl      A
                add     A, #0A9h
                mov     R0, A
                mov     A, @R0
                clr     C
                subb    A, RAM_10
                jnc     code_BCB
                add     A, #3Ch ; '<'

code_BCB:                               ; CODE XREF: IEX6_0+2EF↑j
                cjne    A, #3, code_BCE

code_BCE:                               ; CODE XREF: IEX6_0:code_BCB↑j
                jc      code_BD4
                mov     RAM_F, @R0
                sjmp    code_BE1
; ---------------------------------------------------------------------------

code_BD4:                               ; CODE XREF: IEX6_0:code_BCE↑j
                mov     A, RAM_10
                add     A, #3
                cjne    A, #3Ch, code_BDB ; '<'

code_BDB:                               ; CODE XREF: IEX6_0+300↑j
                jc      code_BDF
                subb    A, #3Ch ; '<'

code_BDF:                               ; CODE XREF: IEX6_0:code_BDB↑j
                mov     RAM_F, A

code_BE1:                               ; CODE XREF: IEX6_0+2FA↑j
                inc     R0
                mov     RAM_14, @R0

code_BE4:                               ; CODE XREF: IEX6_0:code_B5D↑j
                mov     A, R7
                jb      ACC.0, code_C03 ; Accumulator
                rr      A
                mov     B, A            ; B-Register
                cjne    R7, #1Eh, code_BEE

code_BEE:                               ; CODE XREF: IEX6_0+313↑j
                jnc     code_C03
                mov     ADCON1, #0Bh    ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte
                mov     A, B            ; B-Register
                add     A, #8Ah
                mov     R0, A

code_BFE:                               ; CODE XREF: IEX6_0:code_BFE↓j
                jb      ADCON0.4, code_BFE ; A/D Converter Control Register 0
                mov     @R0, ADDATH     ; A/D Converter Data Register, High Byte

code_C03:                               ; CODE XREF: IEX6_0-AD↑j
                                        ; IEX6_0+30D↑j ...
                setb    RAM_25.5

code_C05:                               ; CODE XREF: IEX6_0-85↑j
                                        ; IEX6_0-4E↑j
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word

code_C0B:                               ; CODE XREF: IEX6_0+6↑j
                reti
; End of function IEX6_0


; =============== S U B R O U T I N E =======================================


ICR_0:                                  ; CODE XREF: ICR↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                jb      RAM_2E.6, code_C34
                mov     A, COMCLRL      ; Compare Clear Register, Low Byte
                add     A, #10h
                mov     B, A            ; B-Register
                mov     A, COMCLRH      ; Compare Clear Register, High Byte
                addc    A, #0
                mov     COMCLRH, A      ; Compare Clear Register, High Byte
                mov     COMCLRL, B      ; Compare Clear Register, Low Byte
                mov     CLRMSK, #0      ; Compare Clear Mask Register
                anl     CTCON, #0DFh    ; Compare Timer Control Register
                setb    RAM_2E.6
                setb    RAM_29.1
                mov     RAM_4D, RAM_5C
                ljmp    code_D2D
; ---------------------------------------------------------------------------

code_C34:                               ; CODE XREF: ICR_0+6↑j
                clr     PSW.5           ; Program Status Word
                jb      RAM_2E.7, code_CA8
                mov     A, RAM_5C
                cjne    A, #0, code_C6F
                mov     B, A            ; B-Register
                jb      P5.1, code_C6D  ; Port 5 (PDIR=0)
                mov     ADCON1, #5      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_C4C:                               ; CODE XREF: ICR_0:code_C4C↓j
                jb      ADCON0.4, code_C4C ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #9, code_C54

code_C54:                               ; CODE XREF: ICR_0+45↑j
                jc      code_C6B
                jb      RAM_2A.1, code_C65
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #4
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A

code_C65:                               ; CODE XREF: ICR_0+4A↑j
                setb    P5.1            ; Port 5 (PDIR=0)
                clr     RAM_29.1
                sjmp    code_C6D
; ---------------------------------------------------------------------------

code_C6B:                               ; CODE XREF: ICR_0:code_C54↑j
                setb    PSW.5           ; Program Status Word

code_C6D:                               ; CODE XREF: ICR_0+34↑j
                                        ; ICR_0+5D↑j
                mov     A, B            ; B-Register

code_C6F:                               ; CODE XREF: ICR_0+2F↑j
                cjne    A, #1, code_CA3
                mov     B, A            ; B-Register
                jb      P5.0, code_CA1  ; Port 5 (PDIR=0)
                mov     ADCON1, #4      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_C80:                               ; CODE XREF: ICR_0:code_C80↓j
                jb      ADCON0.4, code_C80 ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #9, code_C88

code_C88:                               ; CODE XREF: ICR_0+79↑j
                jc      code_C9F
                jb      RAM_2A.1, code_C99
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #1
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A

code_C99:                               ; CODE XREF: ICR_0+7E↑j
                setb    P5.0            ; Port 5 (PDIR=0)
                clr     RAM_29.1
                sjmp    code_CA1
; ---------------------------------------------------------------------------

code_C9F:                               ; CODE XREF: ICR_0:code_C88↑j
                setb    PSW.5           ; Program Status Word

code_CA1:                               ; CODE XREF: ICR_0+68↑j
                                        ; ICR_0+91↑j
                mov     A, B            ; B-Register

code_CA3:                               ; CODE XREF: ICR_0:code_C6F↑j
                setb    RAM_2E.7
                ljmp    code_D12
; ---------------------------------------------------------------------------

code_CA8:                               ; CODE XREF: ICR_0+2A↑j
                mov     A, RAM_5C
                cjne    A, #0, code_CDE
                mov     B, A            ; B-Register
                jb      P5.1, code_CDC  ; Port 5 (PDIR=0)
                mov     ADCON1, #5      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_CBB:                               ; CODE XREF: ICR_0:code_CBB↓j
                jb      ADCON0.4, code_CBB ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #0Ch, code_CC3

code_CC3:                               ; CODE XREF: ICR_0+B4↑j
                jc      code_CDA
                jb      RAM_2A.1, code_CD4
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #4
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A

code_CD4:                               ; CODE XREF: ICR_0+B9↑j
                setb    P5.1            ; Port 5 (PDIR=0)
                clr     RAM_29.1
                sjmp    code_CDC
; ---------------------------------------------------------------------------

code_CDA:                               ; CODE XREF: ICR_0:code_CC3↑j
                setb    PSW.5           ; Program Status Word

code_CDC:                               ; CODE XREF: ICR_0+A3↑j
                                        ; ICR_0+CC↑j
                mov     A, B            ; B-Register

code_CDE:                               ; CODE XREF: ICR_0+9E↑j
                cjne    A, #1, code_D12
                mov     B, A            ; B-Register
                jb      P5.0, code_D10  ; Port 5 (PDIR=0)
                mov     ADCON1, #4      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_CEF:                               ; CODE XREF: ICR_0:code_CEF↓j
                jb      ADCON0.4, code_CEF ; A/D Converter Control Register 0
                mov     A, ADDATH       ; A/D Converter Data Register, High Byte
                cjne    A, #0Ch, code_CF7

code_CF7:                               ; CODE XREF: ICR_0+E8↑j
                jc      code_D0E
                jb      RAM_2A.1, code_D08
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #89h
                mov     A, #1
                orl     A, @R0
                mov     @R0, A
                pop     ACC             ; Accumulator
                mov     R0, A

code_D08:                               ; CODE XREF: ICR_0+ED↑j
                setb    P5.0            ; Port 5 (PDIR=0)
                clr     RAM_29.1
                sjmp    code_D10
; ---------------------------------------------------------------------------

code_D0E:                               ; CODE XREF: ICR_0:code_CF7↑j
                setb    PSW.5           ; Program Status Word

code_D10:                               ; CODE XREF: ICR_0+D7↑j
                                        ; ICR_0+100↑j
                mov     A, B            ; B-Register

code_D12:                               ; CODE XREF: ICR_0+99↑j
                                        ; ICR_0:code_CDE↑j
                jnb     PSW.5, code_D2A ; Program Status Word
                mov     A, COMCLRL      ; Compare Clear Register, Low Byte
                add     A, #32h ; '2'
                mov     B, A            ; B-Register
                mov     A, COMCLRH      ; Compare Clear Register, High Byte
                addc    A, #0
                mov     COMCLRH, A      ; Compare Clear Register, High Byte
                mov     COMCLRL, B      ; Compare Clear Register, Low Byte
                anl     CTCON, #0DFh    ; Compare Timer Control Register
                ljmp    code_D2D
; ---------------------------------------------------------------------------

code_D2A:                               ; CODE XREF: ICR_0:code_D12↑j
                anl     IEN2, #0DFh     ; Interrupt Enable Register 2

code_D2D:                               ; CODE XREF: ICR_0+25↑j
                                        ; ICR_0+11B↑j
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; End of function ICR_0

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR IEX2_0

code_D34:                               ; CODE XREF: IEX2_0+6↓j
                mov     RAM_6C, RAM_16
                clr     IEN1.1          ; Interrupt Enable Register 1
                mov     A, CCL4         ; Compare/Capture Register 4, Low Byte
                add     A, RAM_6F
                mov     CCL4, A         ; Compare/Capture Register 4, Low Byte
                mov     A, CCH4         ; Compare/Capture Register 4, High Byte
                addc    A, RAM_70
                mov     CCH4, A         ; Compare/Capture Register 4, High Byte
                clr     IRCON0.1        ; Interrupt Request Control Register 0
                setb    IEN1.1          ; Interrupt Enable Register 1
                clr     P1.4            ; Port 1 (PDIR=0)
                ljmp    code_DAF
; END OF FUNCTION CHUNK FOR IEX2_0

; =============== S U B R O U T I N E =======================================


IEX2_0:                                 ; CODE XREF: IEX2↑j

; FUNCTION CHUNK AT 0D34 SIZE 0000001A BYTES

                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                jbc     RAM_25.7, code_D34

code_D57:                               ; CODE XREF: IEX2_0+1C↓j
                mov     ADCON1, #0      ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_D60:                               ; CODE XREF: IEX2_0:code_D60↓j
                jb      ADCON0.4, code_D60 ; A/D Converter Control Register 0
                mov     B, ADDATH       ; A/D Converter Data Register, High Byte
                mov     A, ADCON1       ; A/D Converter Control Register 1
                anl     A, #0Fh
                cjne    A, #0, code_D57
                mov     RAM_D, B        ; B-Register
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                mov     DPTR, #0AE01h
                mov     A, RAM_4C
                movc    A, @A+DPTR
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                anl     A, #1Fh
                orl     A, #0C0h
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_D88:                               ; CODE XREF: IEX2_0+43↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_D88     ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                mov     DPTR, #785h
                mov     A, RAM_6C
                movc    A, @A+DPTR
                dec     A
                mov     RAM_6D, A
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                setb    RAM_27.1
                setb    TCON.1          ; Timer Control Register
                clr     IEN1.1          ; Interrupt Enable Register 1

code_DAF:                               ; CODE XREF: IEX2_0-3↑j
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; End of function IEX2_0


; =============== S U B R O U T I N E =======================================


TF0_0:                                  ; CODE XREF: TF0↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                clr     TCON.4          ; Timer Control Register
                mov     A, TL0          ; Timer 0, Low Byte
                add     A, #0D0h
                mov     TL0, A          ; Timer 0, Low Byte
                mov     A, TH0          ; Timer 0, High Byte
                addc    A, #0FAh
                mov     TH0, A          ; Timer 0, High Byte
                jnc     code_DD6
                mov     TL0, #0CBh      ; Timer 0, Low Byte
                mov     TH0, #0FAh      ; Timer 0, High Byte

code_DD6:                               ; CODE XREF: TF0_0+18↑j
                setb    TCON.4          ; Timer Control Register
                djnz    RAM_35, code_DE0
                mov     RAM_35, #14h
                setb    RAM_28.0

code_DE0:                               ; CODE XREF: TF0_0+22↑j
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                jnz     code_DF8
                inc     DPTR
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                jnz     code_DF8
                mov     A, #0FFh
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0FFh
                movx    @DPTR, A

code_DF8:                               ; CODE XREF: TF0_0+30↑j
                                        ; TF0_0+36↑j
                mov     A, RAM_77
                cjne    A, #0FFh, code_E34
                jb      RAM_2F.1, code_E0D
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_E0D:                               ; CODE XREF: TF0_0+47↑j
                mov     DPTR, #0F994h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_E1A  ; B-Register

code_E1A:                               ; CODE XREF: TF0_0+61↑j
                jnc     code_E1F
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_E1F:                               ; CODE XREF: TF0_0:code_E1A↑j
                mov     DPTR, #0F993h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_E2C  ; B-Register

code_E2C:                               ; CODE XREF: TF0_0+73↑j
                jnc     code_E31
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_E31:                               ; CODE XREF: TF0_0:code_E2C↑j
                ljmp    code_F1C
; ---------------------------------------------------------------------------

code_E34:                               ; CODE XREF: TF0_0+44↑j
                cjne    A, #0FEh, code_E39
                sjmp    code_E3C
; ---------------------------------------------------------------------------

code_E39:                               ; CODE XREF: TF0_0:code_E34↑j
                ljmp    code_EC2
; ---------------------------------------------------------------------------

code_E3C:                               ; CODE XREF: TF0_0+81↑j
                mov     A, S0CON        ; Serial Channel 0 Control Register
                jb      ACC.0, code_EAC ; Accumulator
                jb      P3.0, code_E6A  ; Port 3 (PDIR=0)
                mov     DPTR, #0F984h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_E51  ; B-Register

code_E51:                               ; CODE XREF: TF0_0+98↑j
                jnc     code_E56
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_E56:                               ; CODE XREF: TF0_0:code_E51↑j
                mov     DPTR, #0F983h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_E63  ; B-Register

code_E63:                               ; CODE XREF: TF0_0+AA↑j
                jnc     code_E68
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_E68:                               ; CODE XREF: TF0_0:code_E63↑j
                sjmp    code_EAF
; ---------------------------------------------------------------------------

code_E6A:                               ; CODE XREF: TF0_0+8B↑j
                mov     DPTR, #0F982h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_E77  ; B-Register

code_E77:                               ; CODE XREF: TF0_0+BE↑j
                jnc     code_E7C
                ljmp    code_EAF
; ---------------------------------------------------------------------------

code_E7C:                               ; CODE XREF: TF0_0:code_E77↑j
                mov     DPTR, #0F981h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_E89  ; B-Register

code_E89:                               ; CODE XREF: TF0_0+D0↑j
                jnc     code_E8E
                ljmp    code_EAF
; ---------------------------------------------------------------------------

code_E8E:                               ; CODE XREF: TF0_0:code_E89↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jnb     RAM_2F.1, code_E9E
                ljmp    code_11E7
; ---------------------------------------------------------------------------

code_E9E:                               ; CODE XREF: TF0_0+E2↑j
                setb    RAM_2F.0
                lcall   init_xram_for_serial0
                mov     S0RELH, #0FFh   ; Serial Channel 0 Reload Reg., High Byte
                mov     S0RELL, #0D0h   ; Serial Channel 0 Reload Reg., Low Byte
                ljmp    code_11E7
; ---------------------------------------------------------------------------

code_EAC:                               ; CODE XREF: TF0_0+88↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register

code_EAF:                               ; CODE XREF: TF0_0:code_E68↑j
                                        ; TF0_0+C3↑j ...
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #0FFh
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_EC2:                               ; CODE XREF: TF0_0:code_E39↑j
                cjne    A, #5, code_EF2
                mov     DPTR, #0F992h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_ED2  ; B-Register

code_ED2:                               ; CODE XREF: TF0_0+119↑j
                jnc     code_ED7
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_ED7:                               ; CODE XREF: TF0_0:code_ED2↑j
                mov     DPTR, #0F991h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_EE4  ; B-Register

code_EE4:                               ; CODE XREF: TF0_0+12B↑j
                jnc     code_EE9
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_EE9:                               ; CODE XREF: TF0_0:code_EE4↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                orl     S0CON, #10h     ; Serial Channel 0 Control Register
                ljmp    code_11E7
; ---------------------------------------------------------------------------

code_EF2:                               ; CODE XREF: TF0_0:code_EC2↑j
                cjne    A, #6, code_F5D
                mov     DPTR, #0F994h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_F02  ; B-Register

code_F02:                               ; CODE XREF: TF0_0+149↑j
                jnc     code_F07
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F07:                               ; CODE XREF: TF0_0:code_F02↑j
                mov     DPTR, #0F993h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_F14  ; B-Register

code_F14:                               ; CODE XREF: TF0_0+15B↑j
                jnc     code_F19
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F19:                               ; CODE XREF: TF0_0:code_F14↑j
                jnb     RAM_2F.1, code_F39

code_F1C:                               ; CODE XREF: TF0_0:code_E31↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0

code_F1F:                               ; CODE XREF: TF0_0+2D1↓j
                                        ; TF0_0+440↓j
                mov     A, #0
                mov     DPTR, #0F9A0h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A

code_F29:                               ; CODE XREF: TF0_0+19C↓j
                                        ; TF0_0+19F↓j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     RAM_77, #4
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F39:                               ; CODE XREF: TF0_0:code_F19↑j
                jb      RAM_2F.0, code_F4F
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #0FFh
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F4F:                               ; CODE XREF: TF0_0:code_F39↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                jb      RAM_2F.4, code_F29
                jb      RAM_2F.5, code_F29
                clr     RAM_2F.2
                ljmp    code_1192
; ---------------------------------------------------------------------------

code_F5D:                               ; CODE XREF: TF0_0:code_EF2↑j
                cjne    A, #7, code_F93
                mov     DPTR, #0F996h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_F6D  ; B-Register

code_F6D:                               ; CODE XREF: TF0_0+1B4↑j
                jnc     code_F72
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F72:                               ; CODE XREF: TF0_0:code_F6D↑j
                mov     DPTR, #0F995h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_F7F  ; B-Register

code_F7F:                               ; CODE XREF: TF0_0+1C6↑j
                jnc     code_F84
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F84:                               ; CODE XREF: TF0_0:code_F7F↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                orl     S0CON, #10h     ; Serial Channel 0 Control Register
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #8
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_F93:                               ; CODE XREF: TF0_0:code_F5D↑j
                cjne    A, #8, code_FC6
                mov     DPTR, #0F998h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_FA3  ; B-Register

code_FA3:                               ; CODE XREF: TF0_0+1EA↑j
                jnc     code_FA8
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_FA8:                               ; CODE XREF: TF0_0:code_FA3↑j
                mov     DPTR, #0F997h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_FB5  ; B-Register

code_FB5:                               ; CODE XREF: TF0_0+1FC↑j
                jnc     code_FBA
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_FBA:                               ; CODE XREF: TF0_0:code_FB5↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                jnb     RAM_2F.2, code_FC3
                ljmp    code_11B3
; ---------------------------------------------------------------------------

code_FC3:                               ; CODE XREF: TF0_0+207↑j
                ljmp    code_1192
; ---------------------------------------------------------------------------

code_FC6:                               ; CODE XREF: TF0_0:code_F93↑j
                cjne    A, #4, code_FCB
                sjmp    code_FCE
; ---------------------------------------------------------------------------

code_FCB:                               ; CODE XREF: TF0_0:code_FC6↑j
                ljmp    code_1028
; ---------------------------------------------------------------------------

code_FCE:                               ; CODE XREF: TF0_0+213↑j
                mov     A, S0CON        ; Serial Channel 0 Control Register
                jnb     ACC.0, code_FE3 ; Accumulator
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_FE3:                               ; CODE XREF: TF0_0+21A↑j
                mov     DPTR, #0F990h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_FF0  ; B-Register

code_FF0:                               ; CODE XREF: TF0_0+237↑j
                jnc     code_FF5
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_FF5:                               ; CODE XREF: TF0_0:code_FF0↑j
                mov     DPTR, #0F98Fh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_1002 ; B-Register

code_1002:                              ; CODE XREF: TF0_0+249↑j
                jnc     code_1007
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1007:                              ; CODE XREF: TF0_0:code_1002↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jnb     RAM_2F.1, code_101F
                clr     RAM_2F.2
                jb      RAM_2F.0, code_101C
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_101C:                              ; CODE XREF: TF0_0+260↑j
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_101F:                              ; CODE XREF: TF0_0+25B↑j
                jb      RAM_2F.0, code_1025
                ljmp    code_11B3
; ---------------------------------------------------------------------------

code_1025:                              ; CODE XREF: TF0_0:code_101F↑j
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1028:                              ; CODE XREF: TF0_0:code_FCB↑j
                cjne    A, #0FDh, code_1097
                jnb     P3.1, code_1040 ; Port 3 (PDIR=0)
                anl     S0CON, #0EFh    ; Serial Channel 0 Control Register
                clr     P3.1            ; Port 3 (PDIR=0)
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1040:                              ; CODE XREF: TF0_0+275↑j
                jb      P3.0, code_107C ; Port 3 (PDIR=0)
                mov     DPTR, #0F986h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_1050 ; B-Register

code_1050:                              ; CODE XREF: TF0_0+297↑j
                jnc     code_1055
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1055:                              ; CODE XREF: TF0_0:code_1050↑j
                mov     DPTR, #0F985h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_1062 ; B-Register

code_1062:                              ; CODE XREF: TF0_0+2A9↑j
                jnc     code_1067
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1067:                              ; CODE XREF: TF0_0:code_1062↑j
                setb    P3.1            ; Port 3 (PDIR=0)
                orl     S0CON, #10h     ; Serial Channel 0 Control Register
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A

code_1076:                              ; CODE XREF: TF0_0+371↓j
                mov     RAM_77, #0FCh
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_107C:                              ; CODE XREF: TF0_0:code_1040↑j
                jb      RAM_2F.1, code_1082
                ljmp    code_108A
; ---------------------------------------------------------------------------

code_1082:                              ; CODE XREF: TF0_0:code_107C↑j
                setb    P3.1            ; Port 3 (PDIR=0)
                orl     S0CON, #10h     ; Serial Channel 0 Control Register
                ljmp    code_F1F
; ---------------------------------------------------------------------------

code_108A:                              ; CODE XREF: TF0_0+2C9↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1097:                              ; CODE XREF: TF0_0:code_1028↑j
                cjne    A, #0FCh, code_10DC
                mov     DPTR, #0F988h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_10A7 ; B-Register

code_10A7:                              ; CODE XREF: TF0_0+2EE↑j
                jnc     code_10AC
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_10AC:                              ; CODE XREF: TF0_0:code_10A7↑j
                mov     DPTR, #0F987h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_10B9 ; B-Register

code_10B9:                              ; CODE XREF: TF0_0+300↑j
                jnc     code_10BE
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_10BE:                              ; CODE XREF: TF0_0:code_10B9↑j
                mov     DPTR, #0F9A2h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F99Eh
                movx    @DPTR, A
                inc     DPTR
                xch     A, B            ; B-Register
                movx    @DPTR, A
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h
                mov     DPSEL, #0       ; Data Pointer Select Register
                ljmp    code_124A
; ---------------------------------------------------------------------------

code_10DC:                              ; CODE XREF: TF0_0:code_1097↑j
                cjne    A, #3, code_1130
                mov     A, S0CON        ; Serial Channel 0 Control Register
                jnb     ACC.0, code_10E7 ; Accumulator
                ljmp    code_11F0
; ---------------------------------------------------------------------------

code_10E7:                              ; CODE XREF: TF0_0+32B↑j
                mov     DPTR, #0F98Eh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_10F4 ; B-Register

code_10F4:                              ; CODE XREF: TF0_0+33B↑j
                jnc     code_10F9
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_10F9:                              ; CODE XREF: TF0_0:code_10F4↑j
                mov     DPTR, #0F98Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_1106 ; B-Register

code_1106:                              ; CODE XREF: TF0_0+34D↑j
                jnc     code_110B
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_110B:                              ; CODE XREF: TF0_0:code_1106↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F987h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jnz     code_1124
                ljmp    code_124A
; ---------------------------------------------------------------------------

code_1124:                              ; CODE XREF: TF0_0+369↑j
                jb      RAM_2F.1, code_112A
                ljmp    code_1076
; ---------------------------------------------------------------------------

code_112A:                              ; CODE XREF: TF0_0:code_1124↑j
                mov     RAM_77, #0FDh
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1130:                              ; CODE XREF: TF0_0:code_10DC↑j
                cjne    A, #2, code_115D
                mov     DPTR, #0F98Ch
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_1140 ; B-Register

code_1140:                              ; CODE XREF: TF0_0+387↑j
                jnc     code_1145
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1145:                              ; CODE XREF: TF0_0:code_1140↑j
                mov     DPTR, #0F98Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_1152 ; B-Register

code_1152:                              ; CODE XREF: TF0_0+399↑j
                jnc     code_1157
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1157:                              ; CODE XREF: TF0_0:code_1152↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                ljmp    code_11F3
; ---------------------------------------------------------------------------

code_115D:                              ; CODE XREF: TF0_0:code_1130↑j
                cjne    A, #1, code_118F
                mov     A, S0CON        ; Serial Channel 0 Control Register
                jnb     ACC.0, code_1168 ; Accumulator
                ljmp    code_11F0
; ---------------------------------------------------------------------------

code_1168:                              ; CODE XREF: TF0_0+3AC↑j
                mov     DPTR, #0F98Ah
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_1175 ; B-Register

code_1175:                              ; CODE XREF: TF0_0+3BC↑j
                jnc     code_117A
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_117A:                              ; CODE XREF: TF0_0:code_1175↑j
                mov     DPTR, #0F989h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_1187 ; B-Register

code_1187:                              ; CODE XREF: TF0_0+3CE↑j
                jnc     code_118C
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_118C:                              ; CODE XREF: TF0_0:code_1187↑j
                ljmp    code_124A
; ---------------------------------------------------------------------------

code_118F:                              ; CODE XREF: TF0_0:code_115D↑j
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1192:                              ; CODE XREF: TF0_0+1A4↑j
                                        ; TF0_0:code_FC3↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #0FFh
                clr     RAM_2F.0
                lcall   init_xram_for_serial0
                mov     S0RELH, #0FFh   ; Serial Channel 0 Reload Reg., High Byte
                mov     S0RELL, #0CCh   ; Serial Channel 0 Reload Reg., Low Byte
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_11B3:                              ; CODE XREF: TF0_0+20A↑j
                                        ; TF0_0+26C↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F991h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_11D2
                anl     S0CON, #0EFh    ; Serial Channel 0 Control Register
                mov     RAM_77, #5
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_11D2:                              ; CODE XREF: TF0_0+411↑j
                jnb     RAM_2F.1, code_11E7
                mov     DPTR, #0F983h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_11E7
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #0FFh

code_11E7:                              ; CODE XREF: TF0_0+E5↑j
                                        ; TF0_0+F3↑j ...
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #6
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_11F0:                              ; CODE XREF: TF0_0+32E↑j
                                        ; TF0_0+3AF↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register

code_11F3:                              ; CODE XREF: TF0_0+3A4↑j
                jnb     RAM_2F.1, code_11F9
                ljmp    code_F1F
; ---------------------------------------------------------------------------

code_11F9:                              ; CODE XREF: TF0_0:code_11F3↑j
                jb      RAM_2F.2, code_1213
                clr     RAM_2F.4
                clr     RAM_2F.5
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #0FFh
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1213:                              ; CODE XREF: TF0_0:code_11F9↑j
                mov     DPTR, #0F9A2h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F99Eh
                movx    @DPTR, A
                inc     DPTR
                xch     A, B            ; B-Register
                movx    @DPTR, A
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F98Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_124A
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     RAM_77, #3
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_124A:                              ; CODE XREF: TF0_0+323↑j
                                        ; TF0_0+36B↑j ...
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                anl     S0CON, #0F7h    ; Serial Channel 0 Control Register
                orl     S0CON, #2       ; Serial Channel 0 Control Register
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #2
                ljmp    code_1263
; ---------------------------------------------------------------------------

code_1263:                              ; CODE XREF: TF0_0+54↑j
                                        ; TF0_0+66↑j ...
                jb      RAM_29.1, code_1269
                ljmp    code_1299
; ---------------------------------------------------------------------------

code_1269:                              ; CODE XREF: TF0_0:code_1263↑j
                jb      RAM_2B.7, code_126F
                ljmp    code_12FD
; ---------------------------------------------------------------------------

code_126F:                              ; CODE XREF: TF0_0:code_1269↑j
                mov     A, RAM_4D
                cjne    A, #0, code_127F
                jnb     P5.1, code_1290 ; Port 5 (PDIR=0)
                anl     CLRMSK, #0FDh   ; Compare Clear Mask Register
                anl     SETMSK, #0FDh   ; Compare Set Mask Register
                sjmp    code_1293
; ---------------------------------------------------------------------------

code_127F:                              ; CODE XREF: TF0_0+4BB↑j
                cjne    A, #1, code_128D
                jnb     P5.0, code_1290 ; Port 5 (PDIR=0)
                anl     CLRMSK, #0FEh   ; Compare Clear Mask Register
                anl     SETMSK, #0FEh   ; Compare Set Mask Register
                sjmp    code_1293
; ---------------------------------------------------------------------------

code_128D:                              ; CODE XREF: TF0_0:code_127F↑j
                ljmp    code_12FD
; ---------------------------------------------------------------------------

code_1290:                              ; CODE XREF: TF0_0+4BE↑j
                                        ; TF0_0+4CC↑j
                ljmp    code_12FF
; ---------------------------------------------------------------------------

code_1293:                              ; CODE XREF: TF0_0+4C7↑j
                                        ; TF0_0+4D5↑j
                ljmp    code_12EA
; ---------------------------------------------------------------------------

code_1296:                              ; CODE XREF: TF0_0:code_12A0↓j
                ljmp    code_12FF
; ---------------------------------------------------------------------------

code_1299:                              ; CODE XREF: TF0_0+4B0↑j
                mov     A, RAM_4F
                jnz     code_12A0
                ljmp    code_12FF
; ---------------------------------------------------------------------------

code_12A0:                              ; CODE XREF: TF0_0+4E5↑j
                djnz    RAM_4E, code_1296
                mov     A, RAM_4D
                cjne    A, #0, code_12B4
                jnb     P5.1, code_12AF ; Port 5 (PDIR=0)
                clr     P5.1            ; Port 5 (PDIR=0)
                sjmp    code_12C6
; ---------------------------------------------------------------------------

code_12AF:                              ; CODE XREF: TF0_0+4F2↑j
                setb    P5.1            ; Port 5 (PDIR=0)
                ljmp    code_12C9
; ---------------------------------------------------------------------------

code_12B4:                              ; CODE XREF: TF0_0+4EF↑j
                cjne    A, #1, code_12C3
                jnb     P5.0, code_12BE ; Port 5 (PDIR=0)
                clr     P5.0            ; Port 5 (PDIR=0)
                sjmp    code_12C6
; ---------------------------------------------------------------------------

code_12BE:                              ; CODE XREF: TF0_0+501↑j
                setb    P5.0            ; Port 5 (PDIR=0)
                ljmp    code_12C9
; ---------------------------------------------------------------------------

code_12C3:                              ; CODE XREF: TF0_0:code_12B4↑j
                ljmp    code_12FD
; ---------------------------------------------------------------------------

code_12C6:                              ; CODE XREF: TF0_0+4F7↑j
                                        ; TF0_0+506↑j
                ljmp    code_12DA
; ---------------------------------------------------------------------------

code_12C9:                              ; CODE XREF: TF0_0+4FB↑j
                                        ; TF0_0+50A↑j
                djnz    RAM_4F, code_12F3
                mov     A, RAM_4D
                cjne    A, #0, code_12D3
                sjmp    code_12D8
; ---------------------------------------------------------------------------

code_12D3:                              ; CODE XREF: TF0_0+518↑j
                cjne    A, #1, code_12D8
                sjmp    code_12D8
; ---------------------------------------------------------------------------

code_12D8:                              ; CODE XREF: TF0_0+51B↑j
                                        ; TF0_0:code_12D3↑j ...
                sjmp    code_12FF
; ---------------------------------------------------------------------------

code_12DA:                              ; CODE XREF: TF0_0:code_12C6↑j
                mov     DPTR, #8A5Bh
                mov     A, RAM_3F
                movc    A, @A+DPTR
                swap    A
                anl     A, #0Fh
                jnz     code_12E6
                inc     A

code_12E6:                              ; CODE XREF: TF0_0+52D↑j
                mov     RAM_4E, A
                sjmp    code_12FF
; ---------------------------------------------------------------------------

code_12EA:                              ; CODE XREF: TF0_0:code_1293↑j
                mov     DPTR, #8752h
                clr     A
                movc    A, @A+DPTR
                mov     RAM_4F, A
                jz      code_12FD

code_12F3:                              ; CODE XREF: TF0_0:code_12C9↑j
                mov     DPTR, #8751h
                clr     A
                movc    A, @A+DPTR
                swap    A
                anl     A, #0Fh
                mov     RAM_4E, A

code_12FD:                              ; CODE XREF: TF0_0+4B6↑j
                                        ; TF0_0:code_128D↑j ...
                clr     RAM_29.1

code_12FF:                              ; CODE XREF: TF0_0:code_1290↑j
                                        ; TF0_0:code_1296↑j ...
                inc     RAM_6A
                mov     A, RAM_6A
                cjne    A, #3Eh, code_1309 ; '>'
                mov     RAM_6A, #0

code_1309:                              ; CODE XREF: TF0_0+54D↑j
                cjne    A, RAM_6B, code_130C

code_130C:                              ; CODE XREF: TF0_0:code_1309↑j
                cpl     C
                mov     P4.4, C         ; Port 4 (PDIR=0)
                inc     RAM_68
                mov     A, RAM_68
                cjne    A, RAM_69, code_1316

code_1316:                              ; CODE XREF: TF0_0+55D↑j
                jc      code_131B
                orl     P9, #2          ; Port 9 (PDIR=0)

code_131B:                              ; CODE XREF: TF0_0:code_1316↑j
                cjne    A, #7Dh, code_1324 ; '}'
                mov     RAM_68, #0
                anl     P9, #0FDh       ; Port 9 (PDIR=0)

code_1324:                              ; CODE XREF: TF0_0:code_131B↑j
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                jnb     TCON.5, code_1333 ; Timer Control Register
                setb    RAM_20.4

code_1333:                              ; CODE XREF: TF0_0+578↑j
                reti
; End of function TF0_0


; =============== S U B R O U T I N E =======================================


IEX3_0:                                 ; CODE XREF: IEX3↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                mov     A, CRCL         ; Comp./Rel./Capt. Reg. Low Byte
                add     A, RAM_61
                mov     CRCL, A         ; Comp./Rel./Capt. Reg. Low Byte
                mov     A, CRCH         ; Comp./Rel./Capt. Reg. High Byte
                addc    A, RAM_62
                mov     CRCH, A         ; Comp./Rel./Capt. Reg. High Byte
                clr     P1.0            ; Port 1 (PDIR=0)
                mov     A, CRCL         ; Comp./Rel./Capt. Reg. Low Byte
                add     A, #28h ; '('
                mov     CCL1, A         ; Compare/Capture Register 1, Low Byte
                mov     A, CRCH         ; Comp./Rel./Capt. Reg. High Byte
                addc    A, #0
                mov     CCH1, A         ; Compare/Capture Register 1, High Byte
                setb    P1.1            ; Port 1 (PDIR=0)
                clr     IRCON0.2        ; Interrupt Request Control Register 0
                clr     IRCON0.3        ; Interrupt Request Control Register 0
                clr     IEN1.2          ; Interrupt Enable Register 1
                setb    IEN1.3          ; Interrupt Enable Register 1
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; End of function IEX3_0


; =============== S U B R O U T I N E =======================================


IEX4_0:                                 ; CODE XREF: IEX4↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                mov     A, CCL1         ; Compare/Capture Register 1, Low Byte
                add     A, RAM_5F
                mov     CCL1, A         ; Compare/Capture Register 1, Low Byte
                mov     A, CCH1         ; Compare/Capture Register 1, High Byte
                addc    A, RAM_60
                mov     CCH1, A         ; Compare/Capture Register 1, High Byte
                clr     P1.1            ; Port 1 (PDIR=0)
                mov     A, CCL1         ; Compare/Capture Register 1, Low Byte
                add     A, #28h ; '('
                mov     CRCL, A         ; Comp./Rel./Capt. Reg. Low Byte
                mov     A, CCH1         ; Compare/Capture Register 1, High Byte
                addc    A, #0
                mov     CRCH, A         ; Comp./Rel./Capt. Reg. High Byte
                setb    P1.0            ; Port 1 (PDIR=0)
                clr     IRCON0.2        ; Interrupt Request Control Register 0
                clr     IRCON0.3        ; Interrupt Request Control Register 0
                setb    IEN1.2          ; Interrupt Enable Register 1
                clr     IEN1.3          ; Interrupt Enable Register 1
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; End of function IEX4_0


; =============== S U B R O U T I N E =======================================


IE0_0:                                  ; CODE XREF: IE0↑j

; FUNCTION CHUNK AT 21F5 SIZE 00000194 BYTES

                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                mov     PSW, #8         ; Program Status Word
                jb      RAM_27.1, code_13A1
                ljmp    code_1553
; ---------------------------------------------------------------------------

code_13A1:                              ; CODE XREF: IE0_0+D↑j
                clr     RAM_27.1
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jb      ACC.2, code_13AE ; Accumulator
                ljmp    code_1549
; ---------------------------------------------------------------------------

code_13AE:                              ; CODE XREF: IE0_0+1A↑j
                mov     A, RAM_6D
                mov     B, #1Fh         ; B-Register
                mul     AB
                add     A, RAM_4B
                mov     R4, A
                clr     PSW.5           ; Program Status Word
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                jz      code_13C8
                cjne    A, #5, code_13C2

code_13C2:                              ; CODE XREF: IE0_0+31↑j
                jnc     code_13C8
                dec     A
                cjne    A, RAM_6D, code_13CA

code_13C8:                              ; CODE XREF: IE0_0+2F↑j
                                        ; IE0_0:code_13C2↑j
                setb    PSW.5           ; Program Status Word

code_13CA:                              ; CODE XREF: IE0_0+37↑j
                mov     DPTR, #0F7A6h
                movx    A, @DPTR
                mov     R3, A
                clr     RAM_27.2

code_13D1:                              ; CODE XREF: IE0_0+75↓j
                mov     DPTR, #0ABD2h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_D
                clr     C
                subb    A, #6
                jnc     code_13E0
                clr     A

code_13E0:                              ; CODE XREF: IE0_0+4F↑j
                mul     AB
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, A          ; Multiplication/Division Register 1
                mov     MD2, B          ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R3         ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     R2, MD3         ; Multiplication/Division Register 3
                mov     R2, MD4         ; Multiplication/Division Register 4
                mov     R2, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_13D1
                setb    RAM_27.2
                jz      code_140C
                mov     R1, #0FFh

code_140C:                              ; CODE XREF: IE0_0+7A↑j
                jnb     PSW.5, code_1414 ; Program Status Word
                mov     A, R1
                mov     DPTR, #0F7B3h
                movx    @DPTR, A

code_1414:                              ; CODE XREF: IE0_0:code_140C↑j
                mov     DPTR, #8092h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                cjne    A, B, code_1420 ; B-Register

code_1420:                              ; CODE XREF: IE0_0+8F↑j
                jc      code_1431
                mov     DPTR, #8091h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                cjne    A, B, code_142D ; B-Register

code_142D:                              ; CODE XREF: IE0_0+9C↑j
                jnc     code_1431
                setb    RAM_21.4

code_1431:                              ; CODE XREF: IE0_0:code_1420↑j
                                        ; IE0_0:code_142D↑j
                mov     DPTR, #8790h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60EB
                mov     A, R1
                jz      code_1443
                mov     R0, #0FFh

code_1443:                              ; CODE XREF: IE0_0+B1↑j
                mov     A, R0
                jnb     PSW.5, code_144B ; Program Status Word
                mov     DPTR, #0F7B4h
                movx    @DPTR, A

code_144B:                              ; CODE XREF: IE0_0+B6↑j
                mov     B, A            ; B-Register
                mov     A, RAM_6D
                add     A, #0ADh
                mov     R0, A
                mov     DPTR, #8791h
                clr     A
                movc    A, @A+DPTR
                add     A, @R0
                jnc     code_145C
                mov     A, #0FFh

code_145C:                              ; CODE XREF: IE0_0+CA↑j
                mov     @R0, A
                mov     A, B            ; B-Register
                clr     C
                subb    A, @R0
                jnc     code_1466
                mov     @R0, B          ; B-Register
                clr     A

code_1466:                              ; CODE XREF: IE0_0+D3↑j
                jnb     PSW.5, code_146D ; Program Status Word
                mov     DPTR, #0F7B5h
                movx    @DPTR, A

code_146D:                              ; CODE XREF: IE0_0:code_1466↑j
                mov     R3, A
                jnb     PSW.5, code_1476 ; Program Status Word
                mov     A, @R0
                mov     DPTR, #0F7B1h
                movx    @DPTR, A

code_1476:                              ; CODE XREF: IE0_0+E0↑j
                jb      RAM_2A.7, code_14DB
                mov     A, RAM_6D
                add     A, #0B1h
                mov     R0, A
                mov     A, R3
                clr     C
                subb    A, @R0
                jc      code_1485
                mov     @R0, RAM_B

code_1485:                              ; CODE XREF: IE0_0+F3↑j
                jnb     PSW.5, code_148D ; Program Status Word
                mov     A, @R0
                mov     DPTR, #0F7B2h
                movx    @DPTR, A

code_148D:                              ; CODE XREF: IE0_0:code_1485↑j
                mov     A, RAM_6D
                jnz     code_1493
                inc     RAM_6E

code_1493:                              ; CODE XREF: IE0_0+101↑j
                mov     DPTR, #8792h
                clr     A
                movc    A, @A+DPTR
                clr     C
                subb    A, RAM_6E
                jnc     code_14A3
                mov     RAM_6E, #0
                ljmp    code_152F
; ---------------------------------------------------------------------------

code_14A3:                              ; CODE XREF: IE0_0+10D↑j
                jnz     code_14D8
                mov     DPTR, #0ABF1h
                mov     A, R4
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7D5h
                mov     A, R4
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                clr     C
                subb    A, @R0
                jc      code_14C4
                jz      code_14C5
                dec     A
                sjmp    code_14C5
; ---------------------------------------------------------------------------

code_14C4:                              ; CODE XREF: IE0_0+12F↑j
                inc     A

code_14C5:                              ; CODE XREF: IE0_0+131↑j
                                        ; IE0_0+134↑j
                add     A, @R0
                clr     C
                cjne    A, B, code_14CA ; B-Register

code_14CA:                              ; CODE XREF: IE0_0+139↑j
                jnc     code_14CE
                mov     A, B            ; B-Register

code_14CE:                              ; CODE XREF: IE0_0:code_14CA↑j
                movx    @DPTR, A
                jnb     PSW.5, code_14D6 ; Program Status Word
                mov     DPTR, #0F7B6h
                movx    @DPTR, A

code_14D6:                              ; CODE XREF: IE0_0+141↑j
                mov     @R0, #0

code_14D8:                              ; CODE XREF: IE0_0:code_14A3↑j
                ljmp    code_152F
; ---------------------------------------------------------------------------

code_14DB:                              ; CODE XREF: IE0_0:code_1476↑j
                clr     A
                mov     DPTR, #0F7B2h
                movx    @DPTR, A
                mov     DPTR, #0ACE9h
                mov     A, R4
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                jnb     PSW.5, code_14FD ; Program Status Word
                mov     A, RAM_73
                jb      ACC.6, code_14F7 ; Accumulator
                mov     A, B            ; B-Register
                mov     DPTR, #0F7B7h
                movx    @DPTR, A
                sjmp    code_14FD
; ---------------------------------------------------------------------------

code_14F7:                              ; CODE XREF: IE0_0+15E↑j
                mov     DPTR, #0F7B7h
                movx    A, @DPTR
                mov     B, A            ; B-Register

code_14FD:                              ; CODE XREF: IE0_0+159↑j
                                        ; IE0_0+167↑j
                mov     DPTR, #0F7D5h
                mov     A, R4
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                jnb     PSW.5, code_1513 ; Program Status Word
                mov     DPTR, #0F7B6h
                movx    @DPTR, A

code_1513:                              ; CODE XREF: IE0_0+17E↑j
                add     A, B            ; B-Register
                jnc     code_1519
                mov     A, #0FFh

code_1519:                              ; CODE XREF: IE0_0+187↑j
                clr     C
                subb    A, R3
                jnc     code_152F
                mov     DPTR, #6958h
                mov     A, RAM_6D
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7A8h
                movx    A, @DPTR
                orl     A, B            ; B-Register
                mov     DPTR, #0F7A8h
                movx    @DPTR, A

code_152F:                              ; CODE XREF: IE0_0+112↑j
                                        ; IE0_0:code_14D8↑j ...
                mov     DPTR, #0ABD2h
                mov     A, RAM_4B
                movc    A, @A+DPTR
                jnz     code_1538
                inc     A

code_1538:                              ; CODE XREF: IE0_0+1A7↑j
                mov     DPTR, #0F7A6h
                movx    @DPTR, A
                mov     B, #0Ch         ; B-Register
                mul     AB
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     RAM_6F, A
                mov     RAM_70, B       ; B-Register
                setb    IEN0.7          ; Interrupt Enable Register 0

code_1549:                              ; CODE XREF: IE0_0+1D↑j
                mov     DPTR, #0F676h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                setb    C
                lcall   code_C54D

code_1553:                              ; CODE XREF: IE0_0+10↑j
                jb      RAM_27.0, code_1559
                ljmp    code_237E
; ---------------------------------------------------------------------------

code_1559:                              ; CODE XREF: IE0_0:code_1553↑j
                clr     RAM_27.0
                mov     R1, #0
                mov     R2, #0
                mov     R4, #0
                mov     R0, #8Ah

code_1563:                              ; CODE XREF: IE0_0+23E↓j
                mov     A, @R0
                mov     B, A            ; B-Register
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.0, code_157C ; Accumulator
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, code_157C ; Accumulator
                mov     DPTR, #0FF3Bh
                movx    A, @DPTR
                jnz     code_1580

code_157C:                              ; CODE XREF: IE0_0+1DD↑j
                                        ; IE0_0+1E5↑j
                mov     A, B            ; B-Register
                sjmp    code_15A2
; ---------------------------------------------------------------------------

code_1580:                              ; CODE XREF: IE0_0+1EC↑j
                jb      ACC.7, code_1592 ; Accumulator
                mul     AB
                mov     A, B            ; B-Register
                rr      A
                rr      A
                rr      A
                anl     A, #1Fh
                add     A, @R0
                jnc     code_15A2
                mov     A, #0FFh
                sjmp    code_15A2
; ---------------------------------------------------------------------------

code_1592:                              ; CODE XREF: IE0_0:code_1580↑j
                cpl     A
                inc     A
                mul     AB
                mov     A, B            ; B-Register
                rr      A
                rr      A
                rr      A
                anl     A, #1Fh
                mov     B, A            ; B-Register
                mov     A, @R0
                clr     C
                subb    A, B            ; B-Register

code_15A2:                              ; CODE XREF: IE0_0+1F0↑j
                                        ; IE0_0+1FE↑j ...
                mov     DPTR, #809Dh
                clr     C
                rlc     A
                jnc     code_15AB
                inc     DPH             ; Data Pointer, High Byte

code_15AB:                              ; CODE XREF: IE0_0+219↑j
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                xch     A, B            ; B-Register
                add     A, R1
                mov     R1, A
                mov     A, B            ; B-Register
                addc    A, R2
                mov     R2, A
                clr     A
                addc    A, R4
                mov     R4, A
                jnb     B.7, code_15CB  ; B-Register
                dec     R4

code_15CB:                              ; CODE XREF: IE0_0+239↑j
                inc     R0
                cjne    R0, #99h, code_1563
                mov     A, R4
                jnb     ACC.7, code_15D9 ; Accumulator
                mov     R2, #0
                mov     R3, #0
                sjmp    code_1604
; ---------------------------------------------------------------------------

code_15D9:                              ; CODE XREF: IE0_0+242↑j
                mov     B, R2           ; B-Register
                clr     RAM_27.2

code_15DD:                              ; CODE XREF: IE0_0+271↓j
                mov     MD0, R1         ; Multiplication/Division Register 0
                mov     MD1, B          ; Multiplication/Division Register 1
                mov     MD2, R4         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, #0Fh       ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Multiplication/Division Register 0
                mov     R3, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_15DD
                setb    RAM_27.2

code_1604:                              ; CODE XREF: IE0_0+249↑j
                mov     A, RAM_71
                jb      ACC.7, code_1611 ; Accumulator
                mov     DPTR, #0F67Dh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A

code_1611:                              ; CODE XREF: IE0_0+278↑j
                mov     DPTR, #0F67Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                jb      RAM_2A.1, code_1661
                mov     A, R1
                jz      code_162C
                mov     DPTR, #8051h
                clr     A
                movc    A, @A+DPTR
                clr     C
                subb    A, R1
                mov     RAM_23.7, C
                clr     RAM_23.6
                sjmp    code_163B
; ---------------------------------------------------------------------------

code_162C:                              ; CODE XREF: IE0_0+28F↑j
                mov     DPTR, #8050h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R0
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_23.6, C
                clr     RAM_23.7

code_163B:                              ; CODE XREF: IE0_0+29C↑j
                jnc     code_1661
                mov     C, RAM_24.0
                orl     C, RAM_24.1
                jc      code_1651
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_55DE
                ljmp    code_1772
; ---------------------------------------------------------------------------

code_1651:                              ; CODE XREF: IE0_0+2B3↑j
                lcall   code_56C7
                mov     A, RAM_71
                jb      ACC.7, code_1661 ; Accumulator
                mov     DPTR, #0F67Dh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_1661:                              ; CODE XREF: IE0_0+28B↑j
                                        ; IE0_0:code_163B↑j ...
                mov     DPTR, #0F67Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_56EB
                mov     DPTR, #0F6C8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   code_5620
                mov     DPTR, #0B2EEh
                mov     R2, RAM_4A
                mov     R3, A
                lcall   code_63CB
                mov     R2, A
                add     A, #80h
                mov     B, A            ; B-Register
                mov     DPTR, #0F6C8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R2
                jnb     ACC.7, code_16A5 ; Accumulator
                mov     DPTR, #0F6C8h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                jnc     code_16A5
                mov     R0, #0FFh
                mov     R1, #0FFh

code_16A5:                              ; CODE XREF: IE0_0+303↑j
                                        ; IE0_0+311↑j
                mov     DPTR, #0F6CAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6C8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_5620
                add     A, #8
                anl     A, #0F0h
                add     A, RAM_4C
                mov     DPTR, #0B3EEh
                clr     C
                rlc     A
                jnc     code_16C7
                inc     DPH             ; Data Pointer, High Byte

code_16C7:                              ; CODE XREF: IE0_0+335↑j
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                mov     DPTR, #0F6CAh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6CAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                jb      RAM_28.3, code_16F1
                ljmp    code_1772
; ---------------------------------------------------------------------------

code_16F1:                              ; CODE XREF: IE0_0+35D↑j
                mov     DPTR, #8745h
                clr     A
                movc    A, @A+DPTR
                jz      code_1731
                mov     B, RAM_49       ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60BA
                mov     DPTR, #0F67Fh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     DPTR, #0F67Fh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #8745h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   code_600D
                mov     DPTR, #0F6CAh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6CAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_1731:                              ; CODE XREF: IE0_0+368↑j
                mov     DPTR, #0F6CAh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6CCh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #0B5EEh
                jnc     code_174C
                mov     DPTR, #0B6EEh

code_174C:                              ; CODE XREF: IE0_0+3B9↑j
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     B, A            ; B-Register
                mov     DPTR, #0F6CAh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6CCh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     A, B            ; B-Register
                mov     B, A            ; B-Register
                lcall   code_600D
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;

code_1772:                              ; CODE XREF: IE0_0+2C0↑j
                                        ; IE0_0+360↑j
                mov     DPTR, #0F6CCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6CCh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6DCh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     A, R1
                jnb     ACC.7, code_1795 ; Accumulator
                mov     R0, #0
                mov     R1, #0

code_1795:                              ; CODE XREF: IE0_0+400↑j
                mov     DPTR, #0F6CEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     RAM_2B.1
                mov     C, RAM_24.0
                orl     C, RAM_24.1
                orl     C, RAM_23.6
                orl     C, RAM_23.7
                jnc     code_17AC
                ljmp    code_187C
; ---------------------------------------------------------------------------

code_17AC:                              ; CODE XREF: IE0_0+419↑j
                mov     R2, RAM_4C
                mov     R4, RAM_42
                lcall   code_366E
                jnb     ACC.7, code_17BB ; Accumulator
                setb    RAM_2B.1
                ljmp    code_1825
; ---------------------------------------------------------------------------

code_17BB:                              ; CODE XREF: IE0_0+425↑j
                mov     B, #0           ; B-Register
                mov     A, RAM_4C
                clr     C
                subb    A, #1
                jc      code_17D0
                mov     R2, A
                mov     R4, RAM_42
                lcall   code_366E
                jnb     ACC.7, code_17D0 ; Accumulator
                setb    B.0             ; B-Register

code_17D0:                              ; CODE XREF: IE0_0+435↑j
                                        ; IE0_0+43D↑j
                mov     A, RAM_42
                add     A, #1
                jb      ACC.5, code_17E2 ; Accumulator
                mov     R2, RAM_4C
                mov     R4, A
                lcall   code_366E
                jnb     ACC.7, code_17E2 ; Accumulator
                setb    B.1             ; B-Register

code_17E2:                              ; CODE XREF: IE0_0+446↑j
                                        ; IE0_0+44F↑j
                mov     A, RAM_4C
                clr     C
                subb    A, #1
                jc      code_17FA
                mov     R2, A
                mov     A, RAM_42
                add     A, #1
                jb      ACC.5, code_17FA ; Accumulator
                mov     R4, A
                lcall   code_366E
                jnb     ACC.7, code_17FA ; Accumulator
                setb    B.2             ; B-Register

code_17FA:                              ; CODE XREF: IE0_0+459↑j
                                        ; IE0_0+460↑j ...
                mov     A, B            ; B-Register
                jz      code_187C
                mov     A, RAM_43
                clr     C
                subb    A, #4
                anl     A, #7
                swap    A
                rl      A
                mov     R0, A
                mov     A, #7
                clr     C
                subb    A, RAM_4A
                anl     A, #0Fh
                swap    A
                mov     R1, A
                mov     A, R1
                clr     C
                subb    A, R0
                jnc     code_181B
                jnb     B.1, code_181E  ; B-Register
                sjmp    code_1821
; ---------------------------------------------------------------------------

code_181B:                              ; CODE XREF: IE0_0+486↑j
                jnb     B.0, code_1821  ; B-Register

code_181E:                              ; CODE XREF: IE0_0+488↑j
                mov     A, R1
                sjmp    code_1822
; ---------------------------------------------------------------------------

code_1821:                              ; CODE XREF: IE0_0+48B↑j
                                        ; IE0_0:code_181B↑j
                mov     A, R0

code_1822:                              ; CODE XREF: IE0_0+491↑j
                jz      code_187C
                mov     R4, A

code_1825:                              ; CODE XREF: IE0_0+42A↑j
                mov     DPTR, #0F6DAh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F600h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_6076
                jnb     RAM_2B.1, code_1856
                mov     DPTR, #0F6CCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6CEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                sjmp    code_1890
; ---------------------------------------------------------------------------

code_1856:                              ; CODE XREF: IE0_0+4AB↑j
                mov     B, R4           ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     R2, RAM_8
                mov     R3, RAM_9
                mov     DPTR, #0F6CEh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R4
                cpl     A
                inc     A
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6D2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                sjmp    code_1890
; ---------------------------------------------------------------------------

code_187C:                              ; CODE XREF: IE0_0+41B↑j
                                        ; IE0_0+46E↑j ...
                mov     R0, #0FFh
                mov     R1, #0FFh
                mov     DPTR, #0F6D2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6CEh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A

code_1890:                              ; CODE XREF: IE0_0+4C6↑j
                                        ; IE0_0+4EC↑j
                mov     DPTR, #8076h
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                lcall   code_5FD6
                mov     DPTR, #0F6D0h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D0h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_5620
                mov     RAM_50, A
                add     A, #4
                swap    A
                rl      A
                anl     A, #1Fh
                mov     RAM_51, A
                mov     A, RAM_50
                add     A, #8
                anl     A, #0F0h
                mov     B, A            ; B-Register
                swap    A
                mov     RAM_52, A
                mov     A, RAM_4A
                add     A, #8
                anl     A, #0F0h
                swap    A
                add     A, B            ; B-Register
                mov     RAM_53, A
                mov     DPTR, #0F6D0h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     B, RAM_49       ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     B, #40h ; '@'   ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2
                mov     B, #0D2h        ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R1
                jnz     code_18F3
                mov     A, R0
                sjmp    code_18F5
; ---------------------------------------------------------------------------

code_18F3:                              ; CODE XREF: IE0_0+560↑j
                mov     A, #0FFh

code_18F5:                              ; CODE XREF: IE0_0+563↑j
                mov     DPTR, #0F6C6h
                movx    @DPTR, A
                mov     DPTR, #8610h
                movc    A, @A+DPTR
                mov     RAM_54, A
                add     A, #4
                swap    A
                rl      A
                anl     A, #1Fh
                mov     RAM_55, A
                mov     A, RAM_54
                add     A, #8
                swap    A
                anl     A, #0Fh
                mov     RAM_56, A
                jb      RAM_29.5, code_1916
                ljmp    code_237E
; ---------------------------------------------------------------------------

code_1916:                              ; CODE XREF: IE0_0+582↑j
                jb      RAM_29.4, code_191C
                ljmp    code_1A2F
; ---------------------------------------------------------------------------

code_191C:                              ; CODE XREF: IE0_0:code_1916↑j
                mov     DPTR, #0F6C4h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, #2, code_1927
                sjmp    code_192C
; ---------------------------------------------------------------------------

code_1927:                              ; CODE XREF: IE0_0+594↑j
                cjne    A, #4, code_1934
                clr     A
                movx    @DPTR, A

code_192C:                              ; CODE XREF: IE0_0+597↑j
                mov     DPTR, #0F6C5h
                movx    A, @DPTR
                inc     A
                jz      code_1934
                movx    @DPTR, A

code_1934:                              ; CODE XREF: IE0_0:code_1927↑j
                                        ; IE0_0+5A3↑j
                mov     DPTR, #0A43Fh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R0, #0
                mov     R1, A
                mov     DPTR, #0F6BAh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0A460h
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                jnb     RAM_2B.7, code_19AA
                mov     DPTR, #0F6C2h
                movx    A, @DPTR
                cjne    A, #4, code_195A

code_195A:                              ; CODE XREF: IE0_0+5C9↑j
                jnc     code_196F
                inc     A
                mov     DPTR, #0F6C2h
                movx    @DPTR, A
                mov     DPTR, #0A41Eh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R0, #0
                mov     R1, A
                ljmp    code_19AA
; ---------------------------------------------------------------------------

code_196F:                              ; CODE XREF: IE0_0:code_195A↑j
                mov     DPTR, #8750h
                clr     A
                movc    A, @A+DPTR
                mov     B, #4           ; B-Register
                mul     AB
                mov     B, A            ; B-Register
                mov     DPTR, #0F6C3h
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jc      code_1988
                clr     A
                mov     DPTR, #0F6C3h
                movx    @DPTR, A

code_1988:                              ; CODE XREF: IE0_0+5F3↑j
                mov     DPTR, #874Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, #4           ; B-Register
                mul     AB
                mov     B, A            ; B-Register
                mov     DPTR, #0F6C3h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                dec     A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_19AA
                mov     DPTR, #0A480h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R0, #0
                mov     R1, A

code_19AA:                              ; CODE XREF: IE0_0+5C2↑j
                                        ; IE0_0+5DE↑j ...
                mov     DPTR, #0A4C1h
                mov     A, RAM_41
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F6C5h
                movx    A, @DPTR
                rr      A
                rr      A
                anl     A, #3Fh
                cjne    A, #1Fh, code_19C0

code_19C0:                              ; CODE XREF: IE0_0+62F↑j
                jc      code_19C4
                mov     A, #1Fh

code_19C4:                              ; CODE XREF: IE0_0:code_19C0↑j
                mov     DPTR, #0A4A1h
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F600h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_6076
                mov     R2, RAM_8
                mov     R3, RAM_9
                mov     R0, RAM_A
                mov     R1, RAM_B
                mov     DPTR, #0F6FFh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   code_6076
                mov     A, RAM_71
                jb      ACC.6, code_19F9 ; Accumulator
                mov     DPTR, #0F705h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_19F9:                              ; CODE XREF: IE0_0+660↑j
                mov     R2, RAM_3D
                mov     DPTR, #0B82Eh
                lcall   code_638E
                mov     DPTR, #0F76Ah
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   code_57FA
                mov     DPTR, #0F6CCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6CEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D0h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ljmp    code_1AB3
; ---------------------------------------------------------------------------

code_1A2F:                              ; CODE XREF: IE0_0+58B↑j
                mov     R0, #0
                mov     R1, #0
                mov     DPTR, #0F6FFh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                jnb     RAM_2A.4, code_1A41
                ljmp    code_1A92
; ---------------------------------------------------------------------------

code_1A41:                              ; CODE XREF: IE0_0+6AD↑j
                mov     DPTR, #874Bh
                clr     A
                movc    A, @A+DPTR
                clr     C
                subb    A, RAM_49
                jnc     code_1A4E
                ljmp    code_1A92
; ---------------------------------------------------------------------------

code_1A4E:                              ; CODE XREF: IE0_0+6BB↑j
                mov     DPTR, #0F6D0h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     A, RAM_58
                add     A, #80h
                mov     B, A            ; B-Register
                clr     A
                addc    A, #0
                clr     RAM_27.2

code_1A61:                              ; CODE XREF: IE0_0+6F4↓j
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, R2         ; Multiplication/Division Register 1
                mov     MD2, R3         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, B          ; Multiplication/Division Register 4
                mov     MD5, A          ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     R4, MD2         ; Multiplication/Division Register 2
                mov     R4, MD3         ; Multiplication/Division Register 3
                mov     R4, MD4         ; Multiplication/Division Register 4
                mov     R4, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_1A61
                setb    RAM_27.2
                mov     DPTR, #0F703h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                jnb     RAM_22.4, code_1AB3

code_1A92:                              ; CODE XREF: IE0_0+6B0↑j
                                        ; IE0_0+6BD↑j
                mov     R0, #0
                mov     R1, #0
                mov     DPTR, #0F6FFh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F703h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, RAM_71
                jb      ACC.6, code_1AB3 ; Accumulator
                mov     DPTR, #0F705h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_1AB3:                              ; CODE XREF: IE0_0+69E↑j
                                        ; IE0_0+701↑j ...
                mov     A, RAM_71
                jnb     ACC.6, code_1ABB ; Accumulator
                ljmp    code_22A3
; ---------------------------------------------------------------------------

code_1ABB:                              ; CODE XREF: IE0_0+727↑j
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #16h, code_1AC8
                mov     R2, #0
                mov     R3, #0
                sjmp    code_1B11
; ---------------------------------------------------------------------------

code_1AC8:                              ; CODE XREF: IE0_0+731↑j
                mov     R2, RAM_4A
                mov     R3, RAM_50
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #17h, code_1AD5
                mov     R2, #0

code_1AD5:                              ; CODE XREF: IE0_0+742↑j
                mov     DPTR, #0AE94h
                lcall   code_63CB
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     R2, RAM_3D
                mov     DPTR, #0AE31h
                lcall   code_638E
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2
                mov     DPTR, #0AE73h
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, #0           ; B-Register
                clr     C
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                xch     A, B            ; B-Register
                clr     C
                rlc     A
                mov     R2, A
                mov     A, B            ; B-Register
                rlc     A
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, A
                lcall   code_602A

code_1B11:                              ; CODE XREF: IE0_0+738↑j
                mov     DPTR, #0F743h
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #16h, code_1B26
                mov     R0, #0
                mov     R1, #0
                sjmp    code_1B56
; ---------------------------------------------------------------------------

code_1B26:                              ; CODE XREF: IE0_0+78F↑j
                mov     R2, RAM_4A
                mov     R3, RAM_50
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #17h, code_1B33
                mov     R2, #0

code_1B33:                              ; CODE XREF: IE0_0+7A0↑j
                mov     DPTR, #0B018h
                lcall   code_63CB
                mov     DPTR, #0AFD6h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     DPTR, #0AFF7h
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                add     A, B            ; B-Register
                rrc     A
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2

code_1B56:                              ; CODE XREF: IE0_0+796↑j
                mov     DPTR, #0F752h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #16h, code_1B6B
                mov     R0, #0
                mov     R1, #0
                sjmp    code_1B9B
; ---------------------------------------------------------------------------

code_1B6B:                              ; CODE XREF: IE0_0+7D4↑j
                mov     R2, RAM_4A
                mov     R3, RAM_50
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #17h, code_1B78
                mov     R2, #0

code_1B78:                              ; CODE XREF: IE0_0+7E5↑j
                mov     DPTR, #0B19Ch
                lcall   code_63CB
                mov     DPTR, #0B15Ah
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     DPTR, #0B17Bh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                add     A, B            ; B-Register
                rrc     A
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2

code_1B9B:                              ; CODE XREF: IE0_0+7DB↑j
                mov     DPTR, #0F761h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                jb      RAM_29.4, code_1BB7
                mov     DPTR, #8749h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                cjne    A, B, code_1BB2 ; B-Register

code_1BB2:                              ; CODE XREF: IE0_0+821↑j
                jnc     code_1BB7
                ljmp    code_1CE5
; ---------------------------------------------------------------------------

code_1BB7:                              ; CODE XREF: IE0_0+815↑j
                                        ; IE0_0:code_1BB2↑j
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F743h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     DPTR, #0F73Dh
                movx    @DPTR, A
                mov     A, R2
                mov     DPTR, #0F73Eh
                movx    @DPTR, A
                mov     A, R3
                mov     DPTR, #0F73Fh
                movx    @DPTR, A
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F752h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     DPTR, #0F74Ch
                movx    @DPTR, A
                mov     A, R2
                mov     DPTR, #0F74Dh
                movx    @DPTR, A
                mov     A, R3
                mov     DPTR, #0F74Eh
                movx    @DPTR, A
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F761h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     DPTR, #0F75Bh
                movx    @DPTR, A
                mov     A, R2
                mov     DPTR, #0F75Ch
                movx    @DPTR, A
                mov     A, R3
                mov     DPTR, #0F75Dh
                movx    @DPTR, A
                jnb     RAM_29.4, code_1C23
                ljmp    code_1C62
; ---------------------------------------------------------------------------

code_1C23:                              ; CODE XREF: IE0_0+88F↑j
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F705h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F737h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     R0, #0
                mov     R1, #0
                mov     DPTR, #0F70Fh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F73Bh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F74Ah
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F759h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ljmp    code_21F5
; ---------------------------------------------------------------------------

code_1C62:                              ; CODE XREF: IE0_0+892↑j
                mov     R4, #0

code_1C64:                              ; CODE XREF: IE0_0:code_1CDF↓j
                mov     DPTR, #0F73Fh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F73Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R4
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F711h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F74Eh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F74Ch
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R4
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F714h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F75Dh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F75Bh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R4
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F717h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                inc     R4
                cjne    R4, #4, code_1CDF
                sjmp    code_1CE2
; ---------------------------------------------------------------------------

code_1CDF:                              ; CODE XREF: IE0_0+94C↑j
                ljmp    code_1C64
; ---------------------------------------------------------------------------

code_1CE2:                              ; CODE XREF: IE0_0+94F↑j
                ljmp    code_226D
; ---------------------------------------------------------------------------

code_1CE5:                              ; CODE XREF: IE0_0+826↑j
                mov     DPTR, #875Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F701h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_1D0E
                mov     A, R1
                jnz     code_1D0A
                mov     A, R0
                cjne    A, B, code_1D08 ; B-Register

code_1D08:                              ; CODE XREF: IE0_0+977↑j
                jc      code_1D1C

code_1D0A:                              ; CODE XREF: IE0_0+974↑j
                clr     RAM_27.6
                sjmp    code_1D1C
; ---------------------------------------------------------------------------

code_1D0E:                              ; CODE XREF: IE0_0+971↑j
                lcall   code_6058
                mov     A, R1
                jnz     code_1D1A
                mov     A, R0
                cjne    A, B, code_1D18 ; B-Register

code_1D18:                              ; CODE XREF: IE0_0+987↑j
                jc      code_1D1C

code_1D1A:                              ; CODE XREF: IE0_0+984↑j
                setb    RAM_27.6

code_1D1C:                              ; CODE XREF: IE0_0:code_1D08↑j
                                        ; IE0_0+97E↑j ...
                jb      RAM_27.6, code_1D29
                mov     DPTR, #0AF94h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                sjmp    code_1D31
; ---------------------------------------------------------------------------

code_1D29:                              ; CODE XREF: IE0_0:code_1D1C↑j
                mov     DPTR, #0AFB5h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine

code_1D31:                              ; CODE XREF: IE0_0+999↑j
                mov     DPTR, #0F745h
                movx    @DPTR, A
                jb      RAM_27.6, code_1D42
                mov     DPTR, #0B118h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                sjmp    code_1D4A
; ---------------------------------------------------------------------------

code_1D42:                              ; CODE XREF: IE0_0+9A7↑j
                mov     DPTR, #0B139h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine

code_1D4A:                              ; CODE XREF: IE0_0+9B2↑j
                mov     DPTR, #0F754h
                movx    @DPTR, A
                jb      RAM_27.6, code_1D5B
                mov     DPTR, #0B29Ch
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                sjmp    code_1D63
; ---------------------------------------------------------------------------

code_1D5B:                              ; CODE XREF: IE0_0+9C0↑j
                mov     DPTR, #0B2BDh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine

code_1D63:                              ; CODE XREF: IE0_0+9CB↑j
                mov     DPTR, #0F763h
                movx    @DPTR, A
                mov     DPTR, #0F743h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F745h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     R4, B           ; B-Register
                mov     A, R0
                mov     R2, A
                mov     A, R1
                mov     R3, A
                mov     DPTR, #0F752h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F754h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R4
                add     A, B            ; B-Register
                mov     R4, A
                mov     A, R2
                addc    A, R0
                mov     R2, A
                mov     A, R3
                addc    A, R1
                mov     R3, A
                mov     DPTR, #0F761h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F763h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R4
                add     A, B            ; B-Register
                mov     A, R2
                addc    A, R0
                mov     R0, A
                mov     A, R3
                addc    A, R1
                inc     A
                mov     R1, A
                mov     DPTR, #0F735h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     RAM_27.2

code_1DBE:                              ; CODE XREF: IE0_0+A50↓j
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, #0         ; Multiplication/Division Register 1
                mov     MD2, #0         ; Multiplication/Division Register 2
                mov     MD3, #1         ; Multiplication/Division Register 3
                mov     MD4, R0         ; Multiplication/Division Register 4
                mov     MD5, R1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                jbc     RAM_27.2, code_1DBE
                setb    RAM_27.2
                mov     DPTR, #0F740h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F740h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F745h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F748h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F740h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F754h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F757h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F740h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F763h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F766h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F743h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F748h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     R0, A
                mov     A, R2
                mov     R1, A
                mov     DPTR, #0F746h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F752h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F757h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     R0, A
                mov     A, R2
                mov     R1, A
                mov     DPTR, #0F755h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F761h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F766h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R1
                mov     R0, A
                mov     A, R2
                mov     R1, A
                mov     DPTR, #0F764h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F711h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPTR, #0F742h
                movx    @DPTR, A
                mov     DPTR, #0F740h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F714h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPTR, #0F751h
                movx    @DPTR, A
                mov     DPTR, #0F74Fh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F717h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPTR, #0F760h
                movx    @DPTR, A
                mov     DPTR, #0F75Eh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F748h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F740h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     DPTR, #0F748h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F742h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R1
                jnz     code_1F35
                mov     A, R2
                add     A, B            ; B-Register
                mov     R2, A
                mov     A, R3
                addc    A, R0
                mov     R3, A
                jnc     code_1F39

code_1F35:                              ; CODE XREF: IE0_0+B9C↑j
                mov     R2, #0FFh
                mov     R3, #0FFh

code_1F39:                              ; CODE XREF: IE0_0+BA5↑j
                mov     DPTR, #0F73Dh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     DPTR, #0F757h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F74Fh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     DPTR, #0F757h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F751h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R1
                jnz     code_1F71
                mov     A, R2
                add     A, B            ; B-Register
                mov     R2, A
                mov     A, R3
                addc    A, R0
                mov     R3, A
                jnc     code_1F75

code_1F71:                              ; CODE XREF: IE0_0+BD8↑j
                mov     R2, #0FFh
                mov     R3, #0FFh

code_1F75:                              ; CODE XREF: IE0_0+BE1↑j
                mov     DPTR, #0F74Ch
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     DPTR, #0F766h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F75Eh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     DPTR, #0F766h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F760h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R1
                jnz     code_1FAD
                mov     A, R2
                add     A, B            ; B-Register
                mov     R2, A
                mov     A, R3
                addc    A, R0
                mov     R3, A
                jnc     code_1FB1

code_1FAD:                              ; CODE XREF: IE0_0+C14↑j
                mov     R2, #0FFh
                mov     R3, #0FFh

code_1FB1:                              ; CODE XREF: IE0_0+C1D↑j
                mov     DPTR, #0F75Bh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F73Dh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_1FD1
                ljmp    code_2005
; ---------------------------------------------------------------------------

code_1FD1:                              ; CODE XREF: IE0_0+C3E↑j
                mov     DPTR, #0F74Ch
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_1FE1
                ljmp    code_2005
; ---------------------------------------------------------------------------

code_1FE1:                              ; CODE XREF: IE0_0+C4E↑j
                mov     DPTR, #0F75Bh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_1FF1
                ljmp    code_2005
; ---------------------------------------------------------------------------

code_1FF1:                              ; CODE XREF: IE0_0+C5E↑j
                mov     DPTR, #0F735h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R3
                jnz     code_200B
                mov     A, R1
                mov     R0, A
                mov     A, R2
                mov     R1, A
                sjmp    code_200F
; ---------------------------------------------------------------------------

code_2005:                              ; CODE XREF: IE0_0+C40↑j
                                        ; IE0_0+C50↑j ...
                mov     R0, #0
                mov     R1, #0
                sjmp    code_200F
; ---------------------------------------------------------------------------

code_200B:                              ; CODE XREF: IE0_0+C6F↑j
                mov     R0, #0FFh
                mov     R1, #0FFh

code_200F:                              ; CODE XREF: IE0_0+C75↑j
                                        ; IE0_0+C7B↑j
                mov     DPTR, #0F705h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F746h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A
                mov     DPTR, #0F73Dh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_2044
                jnb     ACC.7, code_204B ; Accumulator
                mov     R0, #0FFh
                mov     R1, #7Fh
                sjmp    code_204B
; ---------------------------------------------------------------------------

code_2044:                              ; CODE XREF: IE0_0+CAB↑j
                jb      ACC.7, code_204B ; Accumulator
                mov     R0, #0
                mov     R1, #80h

code_204B:                              ; CODE XREF: IE0_0+CAD↑j
                                        ; IE0_0+CB4↑j ...
                mov     DPTR, #0F73Bh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F755h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A
                mov     DPTR, #0F74Ch
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_2080
                jnb     ACC.7, code_2087 ; Accumulator
                mov     R0, #0FFh
                mov     R1, #7Fh
                sjmp    code_2087
; ---------------------------------------------------------------------------

code_2080:                              ; CODE XREF: IE0_0+CE7↑j
                jb      ACC.7, code_2087 ; Accumulator
                mov     R0, #0
                mov     R1, #80h

code_2087:                              ; CODE XREF: IE0_0+CE9↑j
                                        ; IE0_0+CF0↑j ...
                mov     DPTR, #0F74Ah
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F764h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_602A
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A
                mov     DPTR, #0F75Bh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_20BC
                jnb     ACC.7, code_20C3 ; Accumulator
                mov     R0, #0FFh
                mov     R1, #7Fh
                sjmp    code_20C3
; ---------------------------------------------------------------------------

code_20BC:                              ; CODE XREF: IE0_0+D23↑j
                jb      ACC.7, code_20C3 ; Accumulator
                mov     R0, #0
                mov     R1, #80h

code_20C3:                              ; CODE XREF: IE0_0+D25↑j
                                        ; IE0_0+D2C↑j ...
                mov     DPTR, #0F759h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F73Bh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F74Ah
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F759h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F70Fh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F70Fh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #0F737h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F73Bh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     B, #0           ; B-Register
                mov     A, R3
                jnb     ACC.7, code_211E ; Accumulator
                mov     B, #0FFh        ; B-Register

code_211E:                              ; CODE XREF: IE0_0+D8A↑j
                mov     DPTR, #0F740h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F742h
                movx    A, @DPTR
                addc    A, B            ; B-Register
                mov     R4, A
                mov     A, R3
                jnb     ACC.7, code_2140 ; Accumulator
                mov     A, R4
                jnb     ACC.7, code_2148 ; Accumulator
                mov     R4, #0
                mov     R0, #0
                mov     R1, #0
                sjmp    code_2148
; ---------------------------------------------------------------------------

code_2140:                              ; CODE XREF: IE0_0+DA3↑j
                jnc     code_2148
                mov     R4, #0FFh
                mov     R0, #0FFh
                mov     R1, #0FFh

code_2148:                              ; CODE XREF: IE0_0+DA7↑j
                                        ; IE0_0+DB0↑j ...
                mov     A, R4
                mov     DPTR, #0F73Fh
                movx    @DPTR, A
                mov     DPTR, #0F73Dh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F74Ah
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     B, #0           ; B-Register
                mov     A, R3
                jnb     ACC.7, code_2167 ; Accumulator
                mov     B, #0FFh        ; B-Register

code_2167:                              ; CODE XREF: IE0_0+DD3↑j
                mov     DPTR, #0F74Fh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F751h
                movx    A, @DPTR
                addc    A, B            ; B-Register
                mov     R4, A
                mov     A, R3
                jnb     ACC.7, code_2189 ; Accumulator
                mov     A, R4
                jnb     ACC.7, code_2191 ; Accumulator
                mov     R4, #0
                mov     R0, #0
                mov     R1, #0
                sjmp    code_2191
; ---------------------------------------------------------------------------

code_2189:                              ; CODE XREF: IE0_0+DEC↑j
                jnc     code_2191
                mov     R4, #0FFh
                mov     R0, #0FFh
                mov     R1, #0FFh

code_2191:                              ; CODE XREF: IE0_0+DF0↑j
                                        ; IE0_0+DF9↑j ...
                mov     A, R4
                mov     DPTR, #0F74Eh
                movx    @DPTR, A
                mov     DPTR, #0F74Ch
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F759h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     B, #0           ; B-Register
                mov     A, R3
                jnb     ACC.7, code_21B0 ; Accumulator
                mov     B, #0FFh        ; B-Register

code_21B0:                              ; CODE XREF: IE0_0+E1C↑j
                mov     DPTR, #0F75Eh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F760h
                movx    A, @DPTR
                addc    A, B            ; B-Register
                mov     R4, A
                mov     A, R3
                jnb     ACC.7, code_21D2 ; Accumulator
                mov     A, R4
                jnb     ACC.7, code_21DA ; Accumulator
                mov     R4, #0
                mov     R0, #0
                mov     R1, #0
                sjmp    code_21DA
; ---------------------------------------------------------------------------

code_21D2:                              ; CODE XREF: IE0_0+E35↑j
                jnc     code_21DA
                mov     R4, #0FFh
                mov     R0, #0FFh
                mov     R1, #0FFh

code_21DA:                              ; CODE XREF: IE0_0+E39↑j
                                        ; IE0_0+E42↑j ...
                mov     A, R4
                mov     DPTR, #0F75Dh
                movx    @DPTR, A
                mov     DPTR, #0F75Bh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ljmp    code_21F5
; End of function IE0_0


; =============== S U B R O U T I N E =======================================


code_21EA:                              ; CODE XREF: power_on__ignition_key_turned_:code_3968↓p
                clr     A
                mov     DPTR, #0F711h
                mov     R0, #24h ; '$'

code_21F0:                              ; CODE XREF: code_21EA+8↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    R0, code_21F0
                ret
; End of function code_21EA

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR IE0_0

code_21F5:                              ; CODE XREF: IE0_0+8D1↑j
                                        ; IE0_0+E59↑j
                mov     DPTR, #0F73Fh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F73Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F711h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F74Eh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F74Ch
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F714h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F75Dh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F75Bh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, RAM_34
                mov     B, #9           ; B-Register
                mul     AB
                mov     DPTR, #0F717h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A

code_226D:                              ; CODE XREF: IE0_0:code_1CE2↑j
                mov     DPTR, #0F73Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F74Ch
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F75Bh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F735h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F703h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F701h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_22A3:                              ; CODE XREF: IE0_0+72A↑j
                jb      RAM_29.4, code_22C6
                mov     A, RAM_71
                jb      ACC.6, code_22C6 ; Accumulator
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F76Ah
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_615A
                mov     DPTR, #0F705h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_22C6:                              ; CODE XREF: IE0_0:code_22A3↑j
                                        ; IE0_0+F1A↑j
                lcall   code_58D1
                mov     A, R0
                orl     A, R1
                jnz     code_22D0
                ljmp    code_237E
; ---------------------------------------------------------------------------

code_22D0:                              ; CODE XREF: IE0_0+F3D↑j
                mov     R3, RAM_34
                mov     A, RAM_74
                jb      ACC.0, code_22FD ; Accumulator
                cjne    R3, #0, code_22DC
                sjmp    code_22E2
; ---------------------------------------------------------------------------

code_22DC:                              ; CODE XREF: IE0_0+F49↑j
                jnb     RAM_29.0, code_22FD
                cjne    R3, #2, code_22FD

code_22E2:                              ; CODE XREF: IE0_0+F4C↑j
                anl     CMEN, #0FEh     ; Compare Enable Register (RMAP=0)
                clr     IEN0.7          ; Interrupt Enable Register 0
                clr     P4.0            ; Port 4 (PDIR=0)
                mov     CCL2, A         ; Compare/Capture Register 2, Low Byte
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     A, CCL2         ; Compare/Capture Register 2, Low Byte
                add     A, R0
                mov     R2, A
                mov     A, CCH2         ; Compare/Capture Register 2, High Byte
                addc    A, R1
                mov     CMH0, A         ; Compare Register 0, High Byte (RMAP=0)
                mov     CML0, R2        ; Compare Register 0, Low Byte (RMAP=0)
                orl     CMEN, #1        ; Compare Enable Register (RMAP=0)
                setb    P4.0            ; Port 4 (PDIR=0)

code_22FD:                              ; CODE XREF: IE0_0+F46↑j
                                        ; IE0_0:code_22DC↑j ...
                mov     A, RAM_74
                jb      ACC.2, code_2328 ; Accumulator
                cjne    R3, #1, code_2307
                sjmp    code_230D
; ---------------------------------------------------------------------------

code_2307:                              ; CODE XREF: IE0_0+F74↑j
                jnb     RAM_29.0, code_2328
                cjne    R3, #3, code_2328

code_230D:                              ; CODE XREF: IE0_0+F77↑j
                anl     CMEN, #0FBh     ; Compare Enable Register (RMAP=0)
                clr     IEN0.7          ; Interrupt Enable Register 0
                clr     P4.2            ; Port 4 (PDIR=0)
                mov     CCL2, A         ; Compare/Capture Register 2, Low Byte
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     A, CCL2         ; Compare/Capture Register 2, Low Byte
                add     A, R0
                mov     R2, A
                mov     A, CCH2         ; Compare/Capture Register 2, High Byte
                addc    A, R1
                mov     CMH2, A         ; Compare Register 2, High Byte (RMAP=0)
                mov     CML2, R2        ; Compare Register 2, Low Byte (RMAP=0)
                orl     CMEN, #4        ; Compare Enable Register (RMAP=0)
                setb    P4.2            ; Port 4 (PDIR=0)

code_2328:                              ; CODE XREF: IE0_0+F71↑j
                                        ; IE0_0:code_2307↑j ...
                mov     A, RAM_74
                jb      ACC.3, code_2353 ; Accumulator
                cjne    R3, #2, code_2332
                sjmp    code_2338
; ---------------------------------------------------------------------------

code_2332:                              ; CODE XREF: IE0_0+F9F↑j
                jnb     RAM_29.0, code_2353
                cjne    R3, #0, code_2353

code_2338:                              ; CODE XREF: IE0_0+FA2↑j
                anl     CMEN, #0F7h     ; Compare Enable Register (RMAP=0)
                clr     IEN0.7          ; Interrupt Enable Register 0
                clr     P4.3            ; Port 4 (PDIR=0)
                mov     CCL2, A         ; Compare/Capture Register 2, Low Byte
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     A, CCL2         ; Compare/Capture Register 2, Low Byte
                add     A, R0
                mov     R2, A
                mov     A, CCH2         ; Compare/Capture Register 2, High Byte
                addc    A, R1
                mov     CMH3, A         ; Compare Register 3, High Byte (RMAP=0)
                mov     CML3, R2        ; Compare Register 3, Low Byte (RMAP=0)
                orl     CMEN, #8        ; Compare Enable Register (RMAP=0)
                setb    P4.3            ; Port 4 (PDIR=0)

code_2353:                              ; CODE XREF: IE0_0+F9C↑j
                                        ; IE0_0:code_2332↑j ...
                mov     A, RAM_74
                jb      ACC.1, code_237E ; Accumulator
                cjne    R3, #3, code_235D
                sjmp    code_2363
; ---------------------------------------------------------------------------

code_235D:                              ; CODE XREF: IE0_0+FCA↑j
                jnb     RAM_29.0, code_237E
                cjne    R3, #1, code_237E

code_2363:                              ; CODE XREF: IE0_0+FCD↑j
                anl     CMEN, #0FDh     ; Compare Enable Register (RMAP=0)
                clr     IEN0.7          ; Interrupt Enable Register 0
                clr     P4.1            ; Port 4 (PDIR=0)
                mov     CCL2, A         ; Compare/Capture Register 2, Low Byte
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     A, CCL2         ; Compare/Capture Register 2, Low Byte
                add     A, R0
                mov     R2, A
                mov     A, CCH2         ; Compare/Capture Register 2, High Byte
                addc    A, R1
                mov     CMH1, A         ; Compare Register 1, High Byte (RMAP=0)
                mov     CML1, R2        ; Compare Register 1, Low Byte (RMAP=0)
                orl     CMEN, #2        ; Compare Enable Register (RMAP=0)
                setb    P4.1            ; Port 4 (PDIR=0)

code_237E:                              ; CODE XREF: IE0_0+1C8↑j
                                        ; IE0_0+585↑j ...
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; END OF FUNCTION CHUNK FOR IE0_0
; ---------------------------------------------------------------------------
                db 0C2h
                db 0AFh
                db  75h ; u
                db 0D0h
                db    0
                db 0D2h
                db 0D5h
                db  80h
                db    5

; =============== S U B R O U T I N E =======================================


power_on__ignition_key_turned_:         ; CODE XREF: RESET↑j
                                        ; power_on__ignition_key_turned_+14BC↓j ...

; FUNCTION CHUNK AT 367D SIZE 000003D7 BYTES
; FUNCTION CHUNK AT 3A84 SIZE 00000C63 BYTES
; FUNCTION CHUNK AT 4759 SIZE 00000473 BYTES
; FUNCTION CHUNK AT 4FAC SIZE 00000005 BYTES
; FUNCTION CHUNK AT 50BC SIZE 000000D8 BYTES
; FUNCTION CHUNK AT 51A3 SIZE 000001D1 BYTES
; FUNCTION CHUNK AT F004 SIZE 00000003 BYTES
; FUNCTION CHUNK AT FAED SIZE 0000006A BYTES

                clr     IEN0.7          ; IEN0.7 = EAL - set to zero. All interrupts are disabled.
                mov     PSW, #0         ; Clear all flags, select register bank 0
                mov     SP, #0B4h       ; SP = 0xB4
                clr     A
                mov     PCON, A         ; PCON = 0
                mov     SYSCON, #0A1h   ; SYSCON=0xa1
                                        ;
                                        ; CLKP = 1 - Prescaler control for the clock output signal CLKOUT, CLKOUT frequency is fOSC/12 (default after reset)
                                        ; bit5 (EALE?) = 1 (enable/disable ALE output, reserved for future use)
                                        ; xmap1 = 0 - The signals RD and WR are not activated during accesses to the XRAM
                                        ; xmap0 = 1 - The access to XRAM is disabled (default after reset!).
                                        ;             All MOVX accesses are performed via the external bus.
                                        ;             Further, this bit is hardware protected.
                mov     SYSCON1, A      ; SYSCON1 = 0
                mov     PRSC, #0D5h     ; Set to reset values.
                                        ;
                                        ; WDTP = 1 - watchdog timer freq is f_osc/24 or f_osc/384
                                        ; S0P = 1 - serial iface0 freq is prescaled at f_osc/2
                                        ; T2P1 = 0; T2P0 = 1 - set timer2 freq = f_osc/12 or f_osc/24
                                        ;
                                        ; T1P1 = 0; T1P0 = 1 - divider ration = 1:2
                                        ; T0P1 = 0; T0P0 = 1 - divider ration = 1:2
                orl     SYSCON, #10h    ; SYSCON = 0xa1
                                        ;
                                        ; CLKP = 1 - Prescaler control for the clock output signal CLKOUT, CLKOUT = f_osc / 12
                                        ; EALE = 1 - unused, enable/disable ALE output
                                        ; XMAP0 = 1 - access to XRAM disabled, all MOVX are performed via external bus. Further, this bit is hardware protected.
                mov     CMEN, A         ; all compare registers (CMx) are disabled
                anl     SYSCON, #0EFh   ; SYSCON &= 0xef => 0xa1 & 0xef = 0xa1
                mov     CCEN, A         ; CCEN = 0 disable compare-capture CC1 to CC3
                mov     CC4EN, A        ; disable compare-cpature register CC4
                mov     CMEN, A         ; disable registers CM0-CM7
                mov     IRCON0, A       ; reset interrupt requests from timer2, external interrupts 2-6, adc
                mov     IRCON1, A       ; reset interrupt requests from "compare timer match for CM0-CM7"
                mov     IEN0, A         ; disable interrupts: all, timer2, serial channel 0, timer1 overflow, external 1, timer0 overflow, external 0
                mov     IEN1, A         ; disable interrupts: timer2 external reload, external interrupts 2-6, adc
                mov     IEN2, A         ; disable interrupts: register compare match interrupt, compare timer interrupt, CM0-7 compare match interrupt, serial iface1
                mov     TCON, A         ; TCON = 0: external interrupt 0 and 1 - level triggered, turn off timer0 and timer1
                mov     TMOD, A         ; TMOD = 0
                mov     T2CON, A        ; T2CON = 0: timer2 input clock = f_osc/6, no reload, no input - stopped timer
                mov     CTCON, #40h ; '@' ; CTCON = 0x40: compare timer freq = f_osc/2
                mov     CT1CON, #40h ; '@' ; CT1CON = 0x40: freq = f_osc / 2
                mov     IEN3, A         ; disable interrupts: compare timer1 overflow, compare timer1 - general capture/compare interrupt.
                mov     IRCON2, A       ; reset interrupt requests for "compare timer1 match with registers CC17-CC10"
                mov     ADCON0, A       ; ADCON0 = 0:
                                        ;   clock output at P1.6 disabled;
                                        ;   serial iface0 baud rate generator form timer1 overflow rate;
                                        ;   internal start of A/D conversion;
                                        ;   A/D convertion is stopped at the end of one;
                                        ;   mx0-2 = 000 => input is P7.0
                mov     DPSEL, A        ; select DPTR0
                orl     SYSCON, #40h    ; SYSCON |= 0x40 = 0xa1 | 0x40 = 0xe1 = 1110 0001 (bin)
                                        ;
                                        ; PMOD set to 1 - bidirectional port structure enabled
                orl     IP1, #80h       ; PDIR = 1 - port direction registers are enabled (reset after the next command is executed)
                mov     P0, #0FFh       ; DIR0 = 0xff = all bits are input
                orl     IP1, #80h       ; PDIR = 1
                mov     P1, #0Ch        ; DIR1 = 0x0c = lines 2, 3 - input, all other output
                orl     IP1, #80h       ; PDIR = 1
                mov     P2, #0FFh       ; DIR2 = 0xff - all lines are input
                orl     IP1, #80h       ; PDIR = 1
                mov     P3, #29h ; ')'  ; DIR3 = 0x29 = lines 0, 3, 5 - input, others - output
                orl     IP1, #80h       ; PDIR = 1
                mov     P4, #80h        ; DIR4 = 0x80 = line 7 - input, all other - output
                orl     IP1, #80h       ; PDIR = 1
                mov     P5, #80h        ; DIR5 = 0x80 = line 7 input, all other - output
                orl     IP1, #80h       ; PDIR = 1
                mov     P6, #0          ; DIR6 = 0x00 = all lines are output
                orl     IP1, #80h       ; PDIR = 1
                mov     P9, #31h ; '1'  ; DIR9 = 0x31 = lines 0, 4, 5 - input, other - output
                jb      PSW.5, looks_like_was_working_already ; PSW.5 name = general purpose flag 0 ("F0" for short), reset value = 0
                                        ;
                                        ; JB = jump if directly addressed bit is set
                mov     P0, #0FFh       ; turn on pull-up FETs at Port0 (Port0 is all input and employed for address/data bus)
                mov     P1, #0CFh       ; RE-READ THE MANUAL ON PORT PROGRAMMING - section 6.1.1.3!!!
                                        ;
                                        ; turn on internal pull up for input lines 2 and 3?
                                        ;
                                        ; drive lines 0, 1, 6, 7 as high:
                                        ;  0 and 1 high - disable drive of "open" and "close" of additional air actuator
                mov     P2, #0FFh       ; turn on pull-up FETs? (Port2 is all input and employed for address/data bus)
                mov     P3, #0FFh       ; Port 3 (PDIR=0)
                mov     P4, #0BFh       ; turn off:
                                        ;  - injectors 1..4;
                                        ;  - absorber ventilation;
                                        ;  - egr.
                mov     P5, #9Fh        ; turn off:
                                        ;  - ignition coils: 1 (1/4), 2 (2/3), 3 (v8), 4 (v8);
                                        ; set high in0 and miso @ hip0045.
                mov     P6, #0FFh       ; turn off hip0045 (line6 = !ce @ hip0045).
                                        ; turn off both tle5216g/mc33385dh (line7 = !cs @ tle5216g).
                mov     P9, #0B3h       ; turnoff hip9010 (line 7 = !cs @ hip9010)
                mov     RAM_7E, #40h ; '@'
                mov     RAM_7F, #40h ; '@'
                sjmp    prerequisites_init_done
; ---------------------------------------------------------------------------

looks_like_was_working_already:         ; CODE XREF: power_on__ignition_key_turned_+72↑j
                mov     P0, #0FFh       ; Port 0 (PDIR=0)
                mov     P1, #0CFh       ; Port 1 (PDIR=0)
                mov     P2, #0FFh       ; Port 2 (PDIR=0)
                mov     P3, #0FFh       ; Port 3 (PDIR=0)
                mov     P4, #0BFh       ; Port 4 (PDIR=0)
                mov     P5, #9Fh        ; Port 5 (PDIR=0)
                mov     P6, #0FFh       ; Port 6 (PDIR=0)
                mov     P9, #0B3h       ; Port 9 (PDIR=0)
                mov     RAM_7E, #40h ; '@'
                mov     RAM_7F, #40h ; '@'

*** SUMMARY ***
Bidirectional port structure employed.

PORTS' DIRECTIONS:
P0 - all in
P1 - 2, 3 - in; other - out
P2 - all in
P3 - 0, 3, 5 - in; other - out
P4 - 7 - in; others - out
P5 - 7 - in; others - out
P6 - all out
P7 -
P8 -
P9 - 0, 4, 5 - in; other - out

PORTS' CONTENTS:
P1 - 0xFF
P3 - 0xFF
P4 - 0xBF
P5 - 0x9F
P6 - 0xFF
P7 -
P8 -
P9 - 0xB3

RAM @ 0x7E = 0x40
RAM @ 0x7F = 0x40


prerequisites_init_done:                ; CODE XREF: power_on__ignition_key_turned_+93↑j
                anl     P6, #0FEh       ; P6 &= 0xFE = 0xFF & 0xFE = 0xFE:
                                        ;
                                        ; P6.0 set to 0 - hold 5v drop regulator tle4267
                orl     RAM_7E, #4      ; RAM[0x7E] |= 0x04 = 0x40 | 0x04 = 0x44
                mov     R0, #7Ch ; '|'  ; RegisterBank0, R0 = 0x7C

set_ram_7c_to_7d_to_0:                  ; CODE XREF: power_on__ignition_key_turned_+BE↓j
                mov     @R0, #0         ; for (R0 = 0x7C; R0 != 0x7E; ++R0) // RAM[7C] = RAM[7D] = 0
                                        ;   RAM[R0] = 0;
                inc     R0
                cjne    R0, #7Eh, set_ram_7c_to_7d_to_0 ; '~'
                mov     A, R0           ; A = 0x7E
                push    ACC             ; store 0x7E to stack
                                        ; SP += 1 => SP = 0x08
                                        ;
                                        ; ACC is A.

START INIT OF HIP0045 with byte 0x44
                mov     R0, #7Eh ; '~'  ; R0 = 0x7E
                anl     P6, #0BFh       ; P6 &= 0xBF = 0xFE & 0xBF = 0xBE
                                        ;
                                        ; enable hip0045 (line 6 = !ce @ hip0045)

send_RAM_7E__over_SPI_to_HIP0045_once:  ; CODE XREF: power_on__ignition_key_turned_+DD↓j
                mov     A, @R0          ; A = RAM[R0] = RAM[0x7E] = 0x44
                inc     R0              ; ++R0
                mov     @R0, A          ; RAM[R0] = RAM[0x7F] = A = 0x44
                mov     B, #8           ; B = 0x08
                                        ;
                                        ; At this time CY flag in PSW is zero

send_8_bits_over_spi_to_hip0045:        ; CODE XREF: power_on__ignition_key_turned_+D8↓j
                rrc     A               ; A0 = A1; A1 = A2; A2 = A3; A3 = A4
                                        ; A4 = A5; A5 = A6; A6 = A7; A7 = CY
                                        ; CY = A0
                                        ;
                                        ; CY - carry flag
                mov     P5.5, C         ; P5.5 = CY, MOSI @ HIP0045
                setb    P5.6            ; P5.6 = 1, CLK @ HIP0045
                mov     C, P5.7         ; CY = P5.7, MISO @ HIP0045
                clr     P5.6            ; P5.6 = 0, CLK @ HIP0045
                djnz    B, send_8_bits_over_spi_to_hip0045 ; DJNZ - decrement and branch if result isn't zero
                                        ;
                                        ; DJNZ B, LABEL
                                        ;
                                        ; {
                                        ;   --B;
                                        ;   if (B)
                                        ;     jmp LABEL;
                                        ; }
                rrc     A               ; A0 = A1; A1 = A2; A2 = A3; A3 = A4
                                        ; A4 = A5; A5 = A6; A6 = A7; A7 = CY
                                        ; CY = A0
                                        ;
                                        ; CY - carry flag
                                        ;
                                        ; Now, A = the byte, sent back from HIP0045 via SPI
                inc     R0              ; ++R0
                cjne    R0, #80h, send_RAM_7E__over_SPI_to_HIP0045_once ; CJNE R0, V, LABEL
                                        ;
                                        ; if (R0 != V) {
                                        ;   if (R0 < V)
                                        ;     CY = 1;
                                        ;   jmp LABEL;
                                        ; }
                                        ;
                                        ; HIP0045 configured by 0x44 = 0100 0100:
                                        ; out1 = 0 - RTFM
                                        ; out3 = 0
                                        ; out5 = 1
                                        ; out7 = 0
                                        ;
                                        ; out0 = 0 - RTFM
                                        ; out2 = 0
                                        ; out4 = 1
                                        ; out5 = 0
                orl     P6, #40h        ; P6 |= 0x40 = 0xFE | 0x40 = 0xFE
                pop     ACC             ; A = 0x7E
                mov     R0, A           ; R0 = 0x7E
                clr     P5.4            ; P5.4 = 0, IN0 @ HIP0045
FINISH INIT OF HIP0045

HIP0045 configured with byte 0x44 sent in following order:
D7I..D1I = 0010 0010

D7I: out1 = 0 - RTFM
D6I: out3 = 0
D5I: out5 = 1 - main relay switch on
D4I: out7 = 0

D3I: out0 = 0 & P5.4 = on - tachometer off (?)
D2I: out2 = 0
D1I: out4 = 1 - MAF burnout (off ?)
D0I: out5 = 0


START INIT HIP9010

                setb    ADCON0.6        ; ADCON0.6 = ADCON0.CLK = 1 - clock output enable through P1.6 (CLKOUT)
                                        ;
                                        ; P1.6 => OSCIN @ HIP9010
                anl     SYSCON, #7Fh    ; SYSCON &= 0x7F - clear CLKP bit - CLKOUT freq = f_osc/6
                push    ACC             ; store 0x7E
                mov     A, #33h ; '3'   ; A = 0x33
                                        ;
                                        ; START waiting for HIP9010 turn on
                                        ; .

wait_0x33_cycles:                       ; CODE XREF: power_on__ignition_key_turned_:wait_0x33_cycles↓j
                djnz    ACC, wait_0x33_cycles ; DJNZ - decrement and branch if result isn't zero
                                        ;
                                        ; DJNZ A, LABEL
                                        ;
                                        ; {
                                        ;   --A;
                                        ;   if (A)
                                        ;     jmp LABEL;
                                        ; }
                                        ;
                                        ; Executes for 2 cycles

wait_0x100_cycles_1:                    ; CODE XREF: power_on__ignition_key_turned_:wait_0x100_cycles_1↓j
                djnz    ACC, wait_0x100_cycles_1 ; Accumulator

wait_0x100_cycles_2:                    ; CODE XREF: power_on__ignition_key_turned_:wait_0x100_cycles_2↓j
                djnz    ACC, wait_0x100_cycles_2 ; Accumulator

wait_0x100_cycles_3:                    ; CODE XREF: power_on__ignition_key_turned_:wait_0x100_cycles_3↓j
                djnz    ACC, wait_0x100_cycles_3 ; Accumulator

wait_0x100_cycles_4:                    ; CODE XREF: power_on__ignition_key_turned_:wait_0x100_cycles_4↓j
                djnz    ACC, wait_0x100_cycles_4 ; Accumulator

wait_0x100_cycles_5:                    ; CODE XREF: power_on__ignition_key_turned_:wait_0x100_cycles_5↓j
                djnz    ACC, wait_0x100_cycles_5 ; Total wait time = 0x533 iters * 2 cycles = 0xa66 = 2662(dec) cycles @ 16MHz/12 (machine cycle freq) which is  1.(3) MHz = approx 2 msec
                pop     ACC             ; A = 0x7E
                mov     DPTR, #87A7h    ; DPTR = 0x87a7
                                        ;
                                        ; DPSEL = 0 (for the time being)
                clr     A               ; A = 0
                movc    A, @A+DPTR      ; A = FLASH[A + DPTR] = FLASH[0x87a7] = 0x2C
                anl     A, #3Fh         ; A &= 0x3F = 0x2C & 0x3F = 0x2C
                orl     A, #0           ; A |= 0x00 = 0x2C
                anl     P9, #7Fh        ; P9 &= 0x7F = 0xB3 & 0x7F = 0x33
                                        ;
                                        ; high lines:
                                        ; 0 - pull-up for input of DO @ TLE526G
                                        ; 1 - IN1 @ HIP0045 turn on fuel flowmeter
                                        ; 4 - STATUS2 @ TPIC0107B
                                        ; 5 - L0 @ MC33199 (ISO9141)
                                        ;
                                        ; low lines:
                                        ; 2 - PWM @ TPIC0107B
                                        ; 3 - DIR @ TPIC0107B
                                        ; 6 - SCK @ HIP9010/HIP9011
                                        ; 7 - !CS @ HIP9010/HIP9011 - enable SPI bus at HIP9010/HIP9011
send 0x2C over SPI to HIP9010/9011 in the following order:
B7..B0 = 0010 1100

address = 00 - knock filter frequency
data = 101100 = 44 (dec) = 8.02 kHz
                mov     B, #8           ; B = 8

send_8_bits_over_spi_to_hip9010_1:      ; CODE XREF: power_on__ignition_key_turned_+11D↓j
                rlc     A               ; A7 = A6; A6 = A5; A5 = A4;
                                        ; A4 = A3; A3 = A2; A2 = A1;
                                        ; A1 = A0; A0 = CY; CY = A7;
                mov     P1.5, C         ; P1.5 = CY, MOSI @ HIP9010
                orl     P9, #40h        ; set high line P9.6 - SCK @ HIP9010/HIP9011
                anl     P9, #0BFh       ; set low P9.6
                djnz    B, send_8_bits_over_spi_to_hip9010_1 ; B-Register
                rlc     A               ; A = 0x2C
                orl     P9, #80h        ; set high P9.7 - disable SPI on HIP9010/HIP9011
                push    ACC             ; push - 0x2C
wait 0x1c cycles ~ 21usec
                mov     A, #0Eh         ; A = 0x0E

wait_for_0x1c_cycles_1:                 ; CODE XREF: power_on__ignition_key_turned_:wait_for_0x1c_cycles_1↓j
                djnz    ACC, wait_for_0x1c_cycles_1 ; Accumulator
                pop     ACC             ; A = 0x2C
                mov     A, #1           ; A = 0x01
                orl     A, #40h         ; A = 0x41
                anl     P9, #7Fh        ; set low P9.7 - enable SPI bus at HIP9010/9011

send 0x41 over SPI to HIP9010/9011 in the following order:
0100 0001

address = 01 - reference filter frequency
data = 000001 = 1 = 1.26 kHz
                mov     B, #8           ; B-Register

send_8_bits_over_spi_to_hip9010_2:      ; CODE XREF: power_on__ignition_key_turned_+140↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, send_8_bits_over_spi_to_hip9010_2 ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
wait 0x1c cycles
                mov     A, #0Eh

wait_for_0x1c_cycles_2:                 ; CODE XREF: power_on__ignition_key_turned_:wait_for_0x1c_cycles_2↓j
                djnz    ACC, wait_for_0x1c_cycles_2 ; Accumulator
                pop     ACC             ; Accumulator
                mov     DPTR, #87A9h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[A + DPTR] = FLASH[0 + 0x87A9] = 0x30
                anl     A, #3Fh         ; A &= 0x30 = 0x30
                mov     DPTR, #knock_sensor_balance_control_gain_ratio_table ; "????941/-*('%$#\"! \x1F\x1E\x1D\x1D\x1D"...
                movc    A, @A+DPTR      ; A = FLASH[A + 0x24EF] = FLASH[0x30 + 0x24EF] = FLASH[0x251F] = 0x13
                sjmp    continue_configuring_hip9010
; ---------------------------------------------------------------------------
config words table for HIP9010/HIP9011
knock_sensor_balance_control_gain_ratio_table:db '????941/-*(',27h,'%$#',22h,'! ',1Fh,1Eh,1Dh,1Dh,1Dh,1Ch,1Ch,1Bh,1Bh
                                        ; DATA XREF: power_on__ignition_key_turned_+157↑o
                db 1Ah,19h,19h,18h,18h,18h,17h,16h,16h,16h,15h,15h,15h,14h,14h,14h,14h
                db 13h,13h,13h,13h,13h,12h,12h,12h,12h,12h,12h,11h,11h,11h,11h,11h,11h
                db 11h,11h,11h
; ---------------------------------------------------------------------------

continue_configuring_hip9010:           ; CODE XREF: power_on__ignition_key_turned_+15B↑j
                orl     A, #80h         ; A |= 0x80 = 0x93
                anl     P9, #7Fh        ; Port 9 (PDIR=0)

send 0x93 over SPI to HIP9010/9011 in the following order:
1001 0011

address = 10 - balance control (gain ratio)
data = 010011 = 13(dec) = 0.649
                mov     B, #8           ; B-Register

code_2537:                              ; CODE XREF: power_on__ignition_key_turned_+1AE↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_2537    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
wait 0x1c cycles
                mov     A, #0Eh

code_254B:                              ; CODE XREF: power_on__ignition_key_turned_:code_254B↓j
                djnz    ACC, code_254B  ; Accumulator
                pop     ACC             ; Accumulator
                mov     DPTR, #0AE01h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0xAE01] = 0x00
                anl     A, #1Fh         ; A &= 0x1F = 0x00
                orl     A, #0C0h        ; A |= 0xC0
                anl     P9, #7Fh        ; Port 9 (PDIR=0)

send 0xC0 over SPI to HIP9010/9011 in the following order:
1100 0000

address = 110 - integrator time constant
data = 0 = 40 usec
                mov     B, #8           ; B-Register

code_255F:                              ; CODE XREF: power_on__ignition_key_turned_+1D6↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_255F    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
wait 0x1c cycles
                mov     A, #0Eh

code_2573:                              ; CODE XREF: power_on__ignition_key_turned_:code_2573↓j
                djnz    ACC, code_2573  ; Accumulator
                pop     ACC             ; Accumulator
                clr     C               ; CY = 0
                clr     A               ; A = 0
                rlc     A               ; A = 0
                orl     A, #0E0h        ; A = 0xE0
                anl     P9, #7Fh        ; Port 9 (PDIR=0)

send 0xE0 over SPI to HIP9010/9011 in the following order:
1110 0000

address = 110 - test/channel select/channel attenuate control
data = 0:
ta, tb, tc = 0 - output knock rectifier,
channel 0 selected
attenuation applied to knock filter
                mov     B, #8           ; B-Register

code_2583:                              ; CODE XREF: power_on__ignition_key_turned_+1FA↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_2583    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
wait 0x1c cycles
                mov     A, #0Eh

code_2597:                              ; CODE XREF: power_on__ignition_key_turned_:code_2597↓j
                djnz    ACC, code_2597  ; Accumulator
                pop     ACC             ; A = 0xE0
FINISH INIT OF HIP9010/9011

ENABLE ACCESS TO XRAM

                anl     SYSCON, #0FCh   ; SYSCON &= 0xFC = 0xE1 & 0xFC = 0xE0
                                        ;
                                        ; Clear bit 0 - XMAP0 = 0, access to XRAM enabled
                                        ; XMAP1 = 0, signals !RD and !WR are not activated during accesses to XMAP.
                                        ;
                                        ; Now MOVX accesses XRAM.
                setb    TCON.0          ; TCON.IT0 = 1, negative edge triggered external interrupt 0 (external interrupt 0 is at P3.2, which isn't connected to anywhere)
                setb    TCON.2          ; TCON.IT1 = 1, negative edge triggered external interrupt 1 (external interrupt 1 is at P3.3 - SDA @ NM24C04 / AT24C04 (EEPROM, I2C))
                mov     PRSC, #0E5h     ; PRSC = 0xE5 = 1110 0101
                                        ;
                                        ; WDTP = 1 - watchdog freq f_osc/12 or f_osc/192
                                        ; S0P = 1 - serial interface0 baud rate prescaler by 2 is active
                                        ; T2P1 = 1; T2P0 = 0 - timer2 input clock = f_osc/192 (see T2PS and T2PS1)
                                        ;
                                        ; T1P1 = 0; T1P0 = 1 - prescaler divider ratio for timer1 = 1:2
                                        ; T0P1 = 0; T0P0 = 1 - prescaler divider ratio for timer0 = 1:2
                mov     T2CON, #0E5h    ; T2CON = 0xE5 = 1110 0101
                                        ;
                                        ; T2PS = 1 - select timer2 frequency
                                        ; I3FR = 1 - external interrupt 3 on positive edge on INT3 (P1.0)
                                        ; I2FR = 1 - external interrupt 2 on positive edge on INT2 (P1.4)
                                        ; T2R1 = 0; T2R0 = 0 - timer2 reload disabled
                                        ;
                                        ; T2CM = 1 - timer2 compare mode 1 selected
                                        ; T2I1 = 0; T2I0 = 1 - timer2 function - timer with selected frequency
                mov     CTCON, #0C0h    ; CTCON = 0xC0 = 1100 0000
                                        ;
                                        ; T2PS1 = 1 - select timer2 freq
                                        ; ICR = 0; ICS = 0; CTF = 0 - these bits are set by hw on interrupt
                                        ;
                                        ; CTP = 1; CLK2 = 0; CLK1 = 0; CLK0 = 0 - compare timer input clock at f_osc/2
                mov     CTRELL, #0      ; CTRELL - Compare timer reload (low), reset to 0
                mov     CTRELH, #0      ; CTRELH - Compare timer reload (low), reset to 0
                mov     TL2, #0         ; Timer2 (low) = reset to 0
                mov     TH2, #0         ; Timer2 (high) = reset to 0
                orl     CMSEL, #20h     ; CMSEL = 0x20 = 0010 0000
                                        ;
                                        ; Assign CML5/CMH5 registers to the compare timer and compare mode 0 selected.
                                        ; Other CMLx/CMHx (x = 0..4, 6, 7) registers are assigned to compare timer 2 and compare mode 1 selected.
                                        ;
                                        ; CMEN = 0 for the time being
                mov     A, IP0          ; A = IP0 - interrupt priority register 0
                anl     A, #0C0h        ; check if OWDS and WDTS are 0
                                        ;
                                        ; OWDS - oscillator watchdog timer status flag (set by hw when oscillator watchdog timer reset occurs)
                                        ; WDTS - watchdog timer status flag (set by hw when watchdog timer reset occurs)
                clr     PSW.1           ; Clear general purpose flag1
                jz      continue_initializing ; jump if A is zero: both IP0.OWDS and IP0.WDTS are zero
                setb    PSW.1           ; set general purpose flag 1 if either IP0.OWDS or IP0.WDTS (or both) is non zero.

set interrupt priorities:

interrupt group 5 - 11(bin) - 3 (highest)
interrupt group 4 - 01      - 1
interrupt group 3 - 10      - 2
interrupt group 2 - 10
interrupt group 1 - 10
interrupt group 0 - 00      - 0 (lowest)

IP0.OWDS and IP0.WDTS are cleared.

continue_initializing:                  ; CODE XREF: power_on__ignition_key_turned_+22F↑j
                mov     IP0, #30h ; '0' ; IP0 = 0x30 = 0011 0000
                mov     IP1, #2Eh ; '.' ; IP1 = 0x2E = 0010 1110
                mov     R0, #1          ; R0 = 0x01

set_ram_1_to_7b_to_0:                   ; CODE XREF: power_on__ignition_key_turned_+23F↓j
                mov     @R0, #0
                inc     R0
                mov     A, R0
                cjne    A, #7Ch, set_ram_1_to_7b_to_0 ; '|'
                mov     R0, #80h        ; R0 = 0x80

set_ram_80_to_b4_to_0:                  ; CODE XREF: power_on__ignition_key_turned_+248↓j
                mov     @R0, #0
                inc     R0
                mov     A, R0
                cjne    A, #0B5h, set_ram_80_to_b4_to_0
                mov     C, PSW.5        ; Program Status Word
                mov     RAM_27.3, C     ; RAM[0x27] |= (PSW.F0 << 3)
                mov     C, PSW.1        ; Program Status Word
                mov     RAM_20.6, C     ; RAM[0x20] |= PSW.F1 << 6
                lcall   initial_sum_xram_fx00_to_f657 ; 1 + sum(XRAM[0xFx00..0xF657]).
                                        ; x = 4, 5, 6 depending on data in FLASH[0x873F], FLASH[0x8743]
                                        ; x = 4 for current flash
                                        ;
                                        ; INPUT - none
                                        ; OUTPUT - R1:R0 = 1 + sum(XRAM[0xFx00..0xF657]), R0 - low, R1 - high
                mov     DPTR, #0F658h   ; DPTR = 0xF658
                movx    A, @DPTR
                mov     R2, A           ; R2 = XRAM[0xF658]
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A           ; R3 = XRAM[0xF659]
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     A, R0
                orl     A, R1
                jz      xram_checksum_valid ; if (!R0 && !R1)
                                        ;   jmp xram_checksum_valid
                setb    RAM_20.7        ; RAM_20.7 = R0 || R1
                                        ;
                                        ; set flag that xram checksum isn't valid

xram_checksum_valid:                    ; CODE XREF: power_on__ignition_key_turned_+263↑j
                mov     DPSEL, #2       ; Data Pointer Select Register
                mov     DPTR, #0ABF1h   ; DPTR[2] = 0xABF1, for FLASH
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     B, #0F8h        ; B = 0xF8
                mov     DPTR, #0F7D5h   ; DPTR[0] = 0xF7D5, for XRAM

copy_f8_bytes_flash_abf1_to_xram_f7d5:  ; CODE XREF: power_on__ignition_key_turned_+281↓j
                mov     DPSEL, #2       ; Data Pointer Select Register
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[DPTR[2]]
                inc     DPTR            ; ++ DPTR[2]
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    @DPTR, A        ; XRAM[DPTR[0]] = A = FLASH[DPTR[2]]
                inc     DPTR            ; ++DPTR[0]
                djnz    B, copy_f8_bytes_flash_abf1_to_xram_f7d5 ; if (--B)
                                        ;   jmp copy_f8_bytes_flash_abf1_to_xram_f7d5
                mov     DPTR, #0F675h   ; DPTR[0] = 0xF675, for XRAM
                mov     B, #60h ; '`'   ; B = 0x60
                mov     R0, #2          ; R0 = 0x02

clear_0x160_bytes_in_xram_f675:         ; CODE XREF: power_on__ignition_key_turned_+28F↓j
                                        ; power_on__ignition_key_turned_+292↓j
                clr     A               ; A = 0
                movx    @DPTR, A        ; XRAM[DPTR[0]] = 0
                inc     DPTR            ; ++DPTR[0]
                djnz    B, clear_0x160_bytes_in_xram_f675 ; B-Register
                djnz    R0, clear_0x160_bytes_in_xram_f675
                mov     DPTR, #873Fh    ; DPTR[0] = 0x873F
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F] = 0x3F
                mov     C, ACC.4        ; CY = !!(FLASH[0x873F] & 0x10)
                mov     RAM_2D.7, C     ; RAM[0x2D] |= (!!(FLASH[0x873F] & 0x10)) << 7
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F]
                mov     C, ACC.5        ; Accumulator
                mov     RAM_2E.0, C     ; RAM[0x2E] |= (!!(FLASH[0x873F] & 0x20)) << 0
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                mov     C, ACC.2        ; Accumulator
                mov     RAM_2E.1, C     ; RAM[0x2E] |= (!!(FLASH[0x873F] & 0x04)) << 1
                clr     A
                mov     DPTR, #0F97Eh
                movx    @DPTR, A        ; XRAM[0xF97E] = 0
                mov     DPTR, #0F972h
                movx    @DPTR, A        ; XRAM[0xF972] = 0
                mov     DPTR, #0F973h
                movx    @DPTR, A        ; XRAM[0xF973] = 0
                mov     DPTR, #0F974h
                movx    @DPTR, A        ; XRAM[0xF974] = 0
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8741]
                jnb     ACC.0, skip_reading_eeprom ; if (!(A & 0x01))
                                        ;   jmp ...
                mov     DPTR, #0FF00h   ; DPTR = 0xFF00
                mov     R0, #0          ; R0 = 0
                mov     R1, #0          ; R1 = 0
                mov     R2, #42h ; 'B'  ; R2 = 0x42
READ 0x42 first bytes from EEPROM to XRAM[0xFF00..0xFF41]
                lcall   read_bytes_from_eeprom ; INPUT: R0, R1, R2
                                        ;        R1 - slave address (contains page block), shifted right by one bit,
                                        ;        R0 - word address (byte offset in page block),
                                        ;        R2 - number of bytes to read
                                        ;        DPTR - XRAM address to store received data to
                                        ; OUTPUT: CY = 0 - success/all ok, 1 - any failure
                jc      failed_to_read_from_eeprom_1 ; jump if CY is set
                mov     DPTR, #0FF00h
                mov     R2, #42h ; 'B'
                lcall   check_if_xram_sum_to_zero ; INPUT: DPTR, R2 - bytes count
                                        ; OUTPUT: R1:R0, R0 - low, R1 - high
                                        ;         R1:R0 = 1 + word-by-word sum(XRAM[DPTR..DPTR+R2])
                                        ;         CY = 0 if sum is nil, 1 otherwise
                jnc     eeprom_read_ok_1 ; if (!CY)
                                        ;   jmp ...

failed_to_read_from_eeprom_1:           ; CODE XREF: power_on__ignition_key_turned_+2D4↑j
                setb    RAM_21.0
                mov     DPTR, #0FF30h
                mov     B, #10h         ; B-Register
                clr     A

clear_16_bytes_of_xram_at_0xff30:       ; CODE XREF: power_on__ignition_key_turned_+2EB↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, clear_16_bytes_of_xram_at_0xff30 ; B-Register

eeprom_read_ok_1:                       ; CODE XREF: power_on__ignition_key_turned_+2DE↑j
                mov     DPTR, #0FF42h
                mov     R0, #42h ; 'B'
                mov     R1, #0
                mov     R2, #32h ; '2'
                lcall   read_bytes_from_eeprom ; INPUT: R0, R1, R2
                                        ;        R1 - slave address (contains page block), shifted right by one bit,
                                        ;        R0 - word address (byte offset in page block),
                                        ;        R2 - number of bytes to read
                                        ;        DPTR - XRAM address to store received data to
                                        ; OUTPUT: CY = 0 - success/all ok, 1 - any failure
                jc      failed_to_read_from_eeprom_2
                mov     DPTR, #0FF42h
                mov     R2, #32h ; '2'
                lcall   check_if_xram_sum_to_zero ; INPUT: DPTR, R2 - bytes count
                                        ; OUTPUT: R1:R0, R0 - low, R1 - high
                                        ;         R1:R0 = 1 + word-by-word sum(XRAM[DPTR..DPTR+R2])
                                        ;         CY = 0 if sum is nil, 1 otherwise
                jnc     eeprom_read_ok_2

failed_to_read_from_eeprom_2:           ; CODE XREF: power_on__ignition_key_turned_+2FA↑j
                setb    RAM_21.0

eeprom_read_ok_2:                       ; CODE XREF: power_on__ignition_key_turned_+304↑j
                mov     DPTR, #0FF74h
                mov     R0, #74h ; 't'
                mov     R1, #0
                mov     R2, #0Ch
                lcall   read_bytes_from_eeprom ; INPUT: R0, R1, R2
                                        ;        R1 - slave address (contains page block), shifted right by one bit,
                                        ;        R0 - word address (byte offset in page block),
                                        ;        R2 - number of bytes to read
                                        ;        DPTR - XRAM address to store received data to
                                        ; OUTPUT: CY = 0 - success/all ok, 1 - any failure
                jc      failed_to_read_from_eeprom_3
                mov     DPTR, #0FF74h
                mov     R2, #0Ch
                lcall   check_if_xram_sum_to_zero ; INPUT: DPTR, R2 - bytes count
                                        ; OUTPUT: R1:R0, R0 - low, R1 - high
                                        ;         R1:R0 = 1 + word-by-word sum(XRAM[DPTR..DPTR+R2])
                                        ;         CY = 0 if sum is nil, 1 otherwise
                jnc     done_reading_eeprom

failed_to_read_from_eeprom_3:           ; CODE XREF: power_on__ignition_key_turned_+314↑j
                setb    RAM_21.0

skip_reading_eeprom:                    ; CODE XREF: power_on__ignition_key_turned_+2C5↑j
                mov     DPTR, #8069h
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FF74h
                movx    @DPTR, A        ; XRAM[0xFF74] = FLASH[0x8069]
                mov     DPTR, #806Ah
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FF75h
                movx    @DPTR, A        ; XRAM[0xFF75] = FLASH[0x806A]
                mov     DPTR, #8093h
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F770h
                movx    @DPTR, A        ; XRAM[0xF770] = FLASH[0x8093]

done_reading_eeprom:                    ; CODE XREF: power_on__ignition_key_turned_+31E↑j
                orl     PCON, #80h      ; PCON.SMOD = 1, When set, the baud rate of serial interface 0 in modes 1, 2, 3 is doubled
                setb    ADCON0.7        ; ADCON0.BD = 1, When set, the baud rate of serial interface 0 is derived from a dedicated baud rate generator.
                mov     RAM_5F, #20h ; ' ' ; RAM[0x5F] = 0x20
                mov     RAM_60, #3      ; RAM[0x60] = 0x03
                mov     RAM_61, #21h ; '!' ; RAM[0x61] = 0x21
                mov     RAM_62, #0      ; RAM[0x62] = 0x00
                clr     P1.0            ; Port 1 (PDIR=0)
                setb    P1.1            ; Open idle air actuator
                mov     CCL1, RAM_5F    ; CCL1 = 0x20
                mov     CCH1, RAM_60    ; CCH1 = 0x03
                mov     A, CCL1         ; A = CCL1
                add     A, #28h ; '('
                mov     CRCL, A         ; Comp./Rel./Capt. Reg. Low Byte
                mov     A, CCH1         ; Compare/Capture Register 1, High Byte
                addc    A, #0
                mov     CRCH, A         ; Comp./Rel./Capt. Reg. High Byte
                orl     CCEN, #2        ; COCAH0 = 1
                                        ; COCAL0 = 0
                                        ;
                                        ; Compare enabled for CRC
                orl     CCEN, #8        ; COCAH1 = 1
                                        ; COCAL1 = 0
                                        ; Compare enabled for CC1
                setb    P1.0            ; Port 1 (PDIR=0)
                clr     P1.1            ; Close idle air actuator
                clr     IRCON0.2        ; IEX3 = 0; only set and cleared by H/W
                clr     IRCON0.3        ; IEX4 = 0; only set and cleared by H/W
                setb    IEN1.2          ; EX3 = 1
                                        ;
                                        ; External interrupt 3 / capture/compare interrupt 0 enable
                                        ; If EX3 = 0, external interrupt 3 is disabled.
                clr     IEN1.3          ; EX4 = 0
                                        ;
                                        ; External interrupt 4 / capture/compare interrupt 0 enable
                                        ; If EX3 = 0, external interrupt 3 is disabled.
                mov     C, RAM_20.6
                orl     C, RAM_20.7
                jnc     neither_watchdog_nor_xram_checksum_failed
                mov     DPTR, #8761h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8761] = 0x00
                mov     DPTR, #0F602h
                movx    @DPTR, A        ; XRAM[0xF602] = FLASH[0x8761] = 0x00
                mov     A, #1
                mov     DPTR, #0F603h
                movx    @DPTR, A        ; XRAM[0xF603] = 0x01
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F] = 0x3F
                jnb     ACC.1, after_EGO_xram_inited ; JNB = Jump if direct bit not set
                                        ; A.1 = Is there EGO
                lcall   init_xram_ego

after_EGO_xram_inited:                  ; CODE XREF: power_on__ignition_key_turned_+390↑j
                mov     A, #80h
                mov     DPTR, #0F600h
                movx    @DPTR, A        ; XRAM[0xF600] = 0x80
                mov     B, #53h ; 'S'   ; B-Register
                mov     DPTR, #0F605h
                clr     A

code_2735:                              ; CODE XREF: power_on__ignition_key_turned_+3A5↓j
                movx    @DPTR, A        ; XRAM[DPTR++] = 0
                inc     DPTR
                djnz    B, code_2735    ; B-Register

neither_watchdog_nor_xram_checksum_failed:
                                        ; CODE XREF: power_on__ignition_key_turned_+37A↑j
                mov     DPTR, #0A2FDh   ; DPTR = 0xA2FD
                mov     A, RAM_3D       ; A = RAM[0x3D] = 0
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)
                lcall   update_ram_63   ; get or set ram[0x63] based on ram[0x72]&0x20 ???
CONTINUE initializing XRAM fields
                mov     DPTR, #0F603h
                movx    A, @DPTR        ; A = XRAM[0xF603]
                jz      code_2750
                setb    RAM_2A.3        ; RAM[0x2A] |= (!!XRAM[0xF603]) << 3

code_2750:                              ; CODE XREF: power_on__ignition_key_turned_+3BA↑j
                mov     A, #3
                mov     DPTR, #0F7BFh
                movx    @DPTR, A        ; XRAM[0xF7BF] = 3
                clr     A
                mov     DPTR, #0F6BDh
                movx    @DPTR, A        ; XRAM[0xF68D] = 0
                mov     A, #0FFh
                mov     DPTR, #0F6B9h
                movx    @DPTR, A        ; XRAM[0xF6B9] = 0xFF
                mov     DPTR, #8753h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8753]
                mov     RAM_59, A       ; RAM[0x59] = FLASH[0x8753]
                clr     A
                mov     DPTR, #0F770h
                movx    @DPTR, A        ; XRAM[0xF770] = 0
                clr     A
                mov     DPTR, #0F67Fh
                movx    @DPTR, A        ; XRAM[0xF67F] = 0
                inc     DPTR
                movx    @DPTR, A        ; XRAM[0xF680] = 0
                mov     A, #0FFh
                mov     DPTR, #0F6D2h
                movx    @DPTR, A        ; XRAM[0xF6D2] = 0xFF
                inc     DPTR
                movx    @DPTR, A        ; XRAM[0xF6D3] = 0xFF
                mov     DPTR, #8755h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8755]
                mov     RAM_57, A
                mov     RAM_58, A       ; RAM[0x57] = RAM[0x58] = FLASH[0x8755]
                mov     A, #0FFh
                mov     DPTR, #0F6FBh
                movx    @DPTR, A        ; XRAM[0xF6FB] = 0xFF
                inc     DPTR
                movx    @DPTR, A        ; XRAM[0xF6FC] = 0xFF
                clr     A
                mov     DPTR, #0F6B5h
                movx    @DPTR, A
                mov     DPTR, #0F6B7h
                movx    @DPTR, A        ; XRAM[0xF6B5] = XRAM[0xF6B7] = 0x00
                mov     DPTR, #807Ch
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x807C]
                mov     DPTR, #0F6B6h
                movx    @DPTR, A
                mov     DPTR, #0F6B8h
                movx    @DPTR, A        ; XRAM[0xF6B6] = XRAM[0xF6B8] = FLASH[0x807C]
                mov     RAM_66, #0      ; RAM[0x66] = 0
                mov     DPTR, #808Ch
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x808C]
                mov     RAM_67, A       ; RAM[0x67] = FLASH[0x808C]
                mov     A, #80h
                mov     DPTR, #0F707h
                movx    @DPTR, A
                mov     DPTR, #0F708h
                movx    @DPTR, A
                mov     DPTR, #0F709h
                movx    @DPTR, A
                mov     DPTR, #0F70Ah
                movx    @DPTR, A
                mov     DPTR, #0F70Bh
                movx    @DPTR, A
                mov     DPTR, #0F70Ch
                movx    @DPTR, A
                mov     DPTR, #0F70Dh
                movx    @DPTR, A
                mov     DPTR, #0F70Eh
                movx    @DPTR, A        ; XRAM[0xF707] = XRAM[0xF708] = XRAM[0xF709] = XRAM[0xF70A] = XRAM[0xF70B] = XRAM[0xF70C] = XRAM[0xF70D] = XRAM[0xF70E] = 0x80
                mov     RAM_D, #0       ; RAM[0x0D] = 0
                mov     RAM_E, #0       ; RAM[0x0E] = 0
                mov     RAM_6F, #0Ch    ; RAM[0x6F] = 0x0C
                mov     RAM_70, #0      ; RAM[0x70] = 0
                mov     A, RAM_73       ; A = RAM[0x73]
                jb      ACC.2, code_27E5 ; if (RAM[0x73] & 0x04) jump ... // i.e. skip init of XRAM[0xF7A3]
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A        ; DPTR[0xF7A3] = 0

code_27E5:                              ; CODE XREF: power_on__ignition_key_turned_+44B↑j
                mov     A, RAM_73
                jb      ACC.1, code_27F1 ; if (RAM[0x73] & 2) jump ... // skip init of XRAM[0xF7A5]
                clr     RAM_2E.5        ; RAM[0x2E] &= ~(1 << 5)
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A        ; XRAM[0xF7A5] = 0

code_27F1:                              ; CODE XREF: power_on__ignition_key_turned_+455↑j
                orl     CMEN, #20h      ; CMEN |= 0x20
                                        ;
                                        ; CMEN = 0x00 for the time being
                                        ;
                                        ; i.e. enable CM5 (P4.5, EGR valve)
                setb    RAM_2A.0
                setb    RAM_2A.1        ; RAM[0x2A] |= 0x03 // some status byte
                setb    RAM_29.3        ; RAM[0x29] |= 0x08 // some status byte
                setb    RAM_2B.7
                clr     RAM_2B.2        ; RAM[0x2B] |= 0x80
                                        ; RAM[0x2B] &= ~(1 << 2)
                                        ; // some status byte
                lcall   init_flags_and_values
                mov     B, #20h ; ' '   ; B-Register
                mov     DPTR, #0F600h
                movx    A, @DPTR        ; A = XRAM[0xF600]
                mov     DPTR, #0F94Dh   ; DPTR = 0xF94D

code_280B:                              ; CODE XREF: power_on__ignition_key_turned_+47B↓j
                movx    @DPTR, A        ; for (Idx = 0; Idx < 0x20; ++Idx)
                                        ;   XRAM[0xF94D + Idx] = XRAM[0xF600]
                inc     DPTR
                djnz    B, code_280B    ; B-Register
                lcall   inputs_part1    ; Select operating mode.
                                        ;
                                        ; A/D Convert and prepare for calculus:
                                        ;  - Coolant temperature
                                        ;  - Intake Air Temperature
                                        ;  - CO Potentiometer
                                        ;  - Ignition Voltage
INIT XRAM[0xF8CD]..XRAM[0xF8CD+0x7F] (0x80 bytes)
                mov     DPTR, #87B7h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x87B7]
                mov     A, RAM_3A       ; A = RAM[0x3A], adjusted coolant temperature
                mov     DPTR, #0F683h
                movx    @DPTR, A        ; XRAM[0xF683] = RAM[0x3A], Adjusted coolant temperature
                cjne    A, B, code_2823 ; B-Register

code_2823:                              ; CODE XREF: power_on__ignition_key_turned_+48E↑j
                jc      nullify_xram_f8cd ; if (RAM[0x3A] < FLASH[0x87B7]) jump ...
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, nullify_xram_f8cd ; if (!(kitting has knock sensor)) jump ...
                mov     R0, #8
                mov     DPTR, #0F8CDh   ; DPTR[0] = 0xF8CD

code_2832:                              ; CODE XREF: power_on__ignition_key_turned_+4BA↓j
                mov     B, #10h         ; B-Register
                mov     DPSEL, #2       ; Data Pointer Select Register
                mov     DPTR, #0ADF1h   ; DPTR[2] = 0xADF1
                mov     DPSEL, #0       ; Data Pointer Select Register

code_283E:                              ; CODE XREF: power_on__ignition_key_turned_+4B7↓j
                mov     DPSEL, #2       ; Select DPTR[2]
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[DPTR[2]++]
                inc     DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR            ; XRAM[DPTR[0]++] = FLASH[DPTR[2]++]
                djnz    B, code_283E    ; repeat B times (0x10)
                djnz    R0, code_2832   ; repeat R1 (0x08) times
                sjmp    code_285C
; ---------------------------------------------------------------------------

nullify_xram_f8cd:                      ; CODE XREF: power_on__ignition_key_turned_:code_2823↑j
                                        ; power_on__ignition_key_turned_+498↑j
                clr     A
                mov     B, #80h         ; B-Register
                mov     DPTR, #0F8CDh

code_2857:                              ; CODE XREF: power_on__ignition_key_turned_+4C7↓j
                movx    @DPTR, A
                inc     DPTR            ; XRAM[DPTR++] = 0
                djnz    B, code_2857    ; repeat B (0x80) times
FINISHED INIT OF XRAM[0xF8CD]

code_285C:                              ; CODE XREF: power_on__ignition_key_turned_+4BC↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, no_EGO_sensor_or_absorber ; if (!(kitting has EGO sensor)) jump ...
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, no_EGO_sensor_or_absorber ; if (!(kitting has absorber)) jump ...
                setb    RAM_2B.0        ; RAM[0x2B] &= ~(1 << 0)
                mov     DPTR, #8788h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8788]
                mov     A, RAM_3A       ; A = RAM[0x3A], adjusted coolant temperature
                clr     C
                subb    A, B            ; A = RAM[0x3A] - FLASH[0x8788]
                jc      adjusted_coolant_temp_less_than_flash_8788 ; if (RAM[0x3A] < FLASH[0x8788]) jump ...
                mov     C, RAM_20.6     ; C = watchdog triggered
                orl     C, RAM_20.7     ; C = watchdog triggered || xram checksum not valid
                jnc     neither_watchdog_nor_xram_failure_detected ; if (!(watchdog triggered || xram checksum invalid)) jump ...
                                        ;
                                        ; if (!(watchdog triggered) && !(xram checksum invalid)) jump ...
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F500h   ; DPTR[0] = 0xF500
                mov     DPSEL, #2       ; Data Pointer Select Register
                mov     DPTR, #9A1Ch    ; DPTR[2] = 0x9A1C

code_288E:                              ; CODE XREF: power_on__ignition_key_turned_+513↓j
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                inc     DPTR            ; B = FLASH[DPTR[2]++]
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                add     A, B            ; B-Register
                dec     DPH             ; Data Pointer, High Byte
                movx    @DPTR, A        ; XRAM[COMPOSE_WORD(HIGH(DPTR[0]) - 1, LOW(DPTR[0]))] = FLASH[DPTR[2]++] + XRAM[DPTR[0]]
                inc     DPH             ; Data Pointer, High Byte
                inc     DPL             ; ++DPTR[0]
                mov     A, DPL          ; Data Pointer, Low Byte
                mov     DPSEL, #2       ; Data Pointer Select Register
                jnz     code_288E       ; while (LOW[DPTR[0]]) ...
                mov     DPSEL, #0       ; Data Pointer Select Register

neither_watchdog_nor_xram_failure_detected:
                                        ; CODE XREF: power_on__ignition_key_turned_+4EE↑j
                mov     DPTR, #878Ah
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F7A4h
                movx    @DPTR, A        ; XRAM[0xF7A4] = FLASH[0x878A]
                sjmp    no_EGO_sensor_or_absorber
; ---------------------------------------------------------------------------

adjusted_coolant_temp_less_than_flash_8788:
                                        ; CODE XREF: power_on__ignition_key_turned_+4E8↑j
                mov     DPTR, #0F500h

code_28B8:                              ; CODE XREF: power_on__ignition_key_turned_+530↓j
                movx    A, @DPTR        ; A = XRAM[DPTR]
                dec     DPH             ; Data Pointer, High Byte
                movx    @DPTR, A        ; XRAM[COMPOSE_WORD(HIGH(DPTR)-1, LOW(DPTR))] = XRAM[DPTR]
                inc     DPH             ; Data Pointer, High Byte
                inc     DPL             ; ++DPTR
                mov     A, DPL          ; Data Pointer, Low Byte
                jnz     code_28B8       ; while (LOW(DPTR)) ...
                mov     DPTR, #8789h
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F7A4h
                movx    @DPTR, A        ; XRAM[0xF7A4] = FLASH[0x8789]
INIT TIMER1 START

no_EGO_sensor_or_absorber:              ; CODE XREF: power_on__ignition_key_turned_+4CF↑j
                                        ; power_on__ignition_key_turned_+4D7↑j ...
                setb    TCON.0          ; TCON.IT0 = 1
                                        ; External interrupt 1 level/edge trigger control flag,
                                        ; If IT1 = 0, level triggered external interrupt 1 is selected.
                                        ; If IT1 = 1, negative edge triggered external interrupt 1 is selected.
                clr     TCON.1          ; TCON.IE0 = 0
                                        ; External interrupt 0 request flag
                                        ; Set by hardware. Cleared by hardware when processor vectors to interrupt routine
                                        ; (if IT0 = 1) or by hardware (if IT0 = 0).
                setb    IEN0.0          ; enable external interrupt 0
                orl     CCEN, #30h      ; COCAH2 = 1
                                        ; COCAL1 = 1
                                        ;
                                        ; CC2 (P1.2) capture on write to register CCL2
                orl     CCEN, #40h      ; COCAH3 = 0
                                        ; COCAL3 = 1
                                        ;
                                        ; CC3, capture on rising edge at P1.3 (INT6)
                clr     IRCON0.5        ; IRCON0.IEX6 = 0
                                        ;
                                        ; External interrupt 6 edge flag
                                        ; Set by hardware when external interrupt edge was detected or when a compare
                                        ; event occurred at pin 1.3/INT6/CC3. Cleared by hardware when processor vectors
                                        ; to interrupt routine.
                setb    IEN1.5          ; IEN1.EX6 = 1
                                        ;
                                        ; External interrupt 6 / capture/compare interrupt 3 enable
                                        ; If EX6 = 0, external interrupt 6 is disabled.
                orl     TMOD, #50h      ; Timer1:
                                        ; TMOD.GATE = 1
                                        ; TMOD.M0 = 1
                                        ;
                                        ; GATE:
                                        ; Gating control
                                        ; When set, timer/counter 'x' is enabled only while 'INT x' pin is high and 'TRx' control bit is set.
                                        ; When cleared timer 'x' is enabled whenever 'TRx' control bit is set.
                                        ;
                                        ; M0 = 1, M1 = 0 => 16 bit timer/counter
                clr     TCON.6          ; TCON.(!TR1) = 0
                                        ;
                                        ; TR1: Timer 1 run control bit.
                                        ; Set/cleared by software to turn timer/counter 1 on/off.
                mov     TL1, #0         ; Timer 1, Low Byte
                mov     TH1, #0         ; Clear timer1 data register.
                setb    TCON.6          ; Start Timer1 operation.
                orl     TMOD, #1        ; Timer0:
                                        ; TMOD.M0 = 1
                                        ;
                                        ; M0 = 0, M1 = 1 => 16 bit timer/counter
                clr     TCON.4          ; TCON.TR0 = 0
                                        ;
                                        ; Timer 0 run control bit.
                                        ; Set/cleared by software to turn timer/counter 0 on/off.
                mov     TL0, #0CBh      ; Timer 0, Low Byte
                mov     TH0, #0FAh      ; init Timer0 data register with 0xFACB, 0x535 to overflow
                clr     TCON.5          ; TCON.TF0 = 0
                                        ; Timer0 overflow flag = 0
                setb    TCON.4          ; Start timer0
                setb    IEN0.1          ; IEN0.ET0 = 1
                                        ;
                                        ; Timer 0 overflow interrupt enable.
                                        ; If ET0 = 0, the timer 0 interrupt is disabled.
                mov     RAM_35, #14h    ; RAM[0x35] = 0x14
                clr     RAM_28.0        ; RAM[0x28] &= ~(1 << 0)
                mov     R0, #0F7h       ; R0 = 0xF7
                mov     R1, #0Ah        ; R1 = 0x0A
                mov     DPTR, #0F96Dh   ; DPTR= 0xF96D
                mov     A, R0
                movx    @DPTR, A        ; XRAM[0xF96D] = 0xF7
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A        ; XRAM[0xF96E] = 0x0A
                mov     R0, #0
                mov     R1, #0          ; R0 = R1 = 0
                mov     DPTR, #0F96Fh
                mov     A, R0
                movx    @DPTR, A        ; XRAM[0xF96F] = 0
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A        ; XRAM[0xG970] = 0
                mov     WDTREL, #0F8h   ; WDTREL = 0xF8
                                        ;
                                        ; Reload value = 0x78
                                        ; WDTREL.WPSEL = 1, PRSC.WDTP = 1 => watchdog input freq = f_osc/384
                setb    IEN0.6          ; IEN0.(!WDT) = 0
                                        ; Watchdog timer refresh flag
                                        ; Set to initiate a refresh of the watchdog timer. Must be set directly before SWDT is set to prevent an unintentional refresh of the watchdog timer.
                setb    IEN1.6          ; IEN1.(!SWDT) = 0
                                        ; Watchdog timer start flag
                                        ; Set to activate the watchdog timer. When directly set after setting WDT, a watchdog timer refresh is performed.
                mov     C, RAM_20.6
                orl     C, /RAM_20.7    ; C = (watchdog triggered) || !(xram checksum failed)
                jc      MAIN_LOOP_TRAMPOLINE ; if ((watchdog triggered) || !(xram checksum failed)) jump ...
                mov     A, P9           ; A = P9
                anl     A, #20h
                jz      MAIN_LOOP_TRAMPOLINE ; if (!(P9 & 0x20)) jump ...
                                        ;
                                        ; if (!(LO of MC33199 (ISO9141) active)) jump ...
                clr     P3.1            ; P3.1 = 0, TxD @ MC33199 (ISO9141)
                push    ACC             ; Accumulator
                mov     A, #0Eh         ; A = 0x0E

code_2931:                              ; CODE XREF: power_on__ignition_key_turned_:code_2931↓j
                djnz    ACC, code_2931  ; wait 2 * 0x0E machine cycles
                pop     ACC             ; Accumulator
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h
                jnz     MAIN_LOOP_TRAMPOLINE ; if (P9 & 0x20) jump ...
                                        ;
                                        ; if (LO of MC33199 (ISO9141) active) jump ...
                setb    P3.1            ; P3.1 = 1, TxD @ MC33199 (ISO9141)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_2942:                              ; CODE XREF: power_on__ignition_key_turned_:code_2942↓j
                djnz    ACC, code_2942  ; wait 2 * 0x0E machine cycles
                pop     ACC             ; Accumulator
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h
                jz      MAIN_LOOP_TRAMPOLINE ; if (!(P9 & 0x20)) jump ...
                                        ;
                                        ; if (!(LO of MC33199 (ISO9141) active)) jump ...
                ljmp    fail_control_loop_trampoline
; ---------------------------------------------------------------------------

MAIN_LOOP_TRAMPOLINE:                   ; CODE XREF: power_on__ignition_key_turned_+591↑j
                                        ; power_on__ignition_key_turned_+597↑j ...
                setb    P3.1            ; set high on TxD @ MC33199 (ISO9141) (TxD, serial channel0)
                clr     RAM_2F.0
                clr     RAM_2F.1
                lcall   init_xram_for_serial0
                mov     S0RELH, #0FFh   ; Serial Channel 0 Reload Reg., High Byte
                mov     S0RELL, #0CCh   ; Serial Channel 0 Reload Reg., Low Byte
                mov     S0CON, #58h ; 'X' ; S0CON = 0x58 = 0101 1000
                                        ;
                                        ; SM1 = 0
                                        ; SM0 = 1, 8-bit uart, variable baud rate
                                        ; SM20 = 0, disable serial0 multiprocessor communication
                                        ; REN0 = 1, enable receiver
                orl     IEN0, #10h      ; Enable serial0 interrupt
                setb    IEN0.7          ; IEN0.EAL - enable interrupts overall

MAIN_LOOP:                              ; CODE XREF: power_on__ignition_key_turned_+5E5↓j
                                        ; power_on__ignition_key_turned_:code_5371↓j
                jbc     RAM_28.0, timer0_overflowed ; if (RAM[0x28] & (1 << 0)) {
                                        ;   RAM[0x28] &= ~(1 << 0)
                                        ;   jump ...
                                        ; }
                mov     DPTR, #0F96Dh
                clr     C
                movx    A, @DPTR        ; A = XRAM[0xF96D]
                subb    A, #1           ; A = XRAM[0xF96D] - 1
                movx    @DPTR, A        ; XRAM[0xF96D] -= 1
                inc     DPTR            ; ++DPTR
                movx    A, @DPTR
                subb    A, #0
                movx    @DPTR, A        ; XRAM[0xF96E] -= 0 + CY
                jnc     MAIN_LOOP       ; if (!CY) jump ...
                mov     DPTR, #0F96Dh
                clr     A
                movx    @DPTR, A        ; XRAM[0xF96D] = 0

wait_until_ram_28_0_set:                ; CODE XREF: power_on__ignition_key_turned_:wait_until_ram_28_0_set↓j
                jnb     RAM_28.0, wait_until_ram_28_0_set ; while (!(RAM[0x28] & (1 << 0))) ;
                                        ;
                                        ; // wait until RAM[0x28].0 is set
                                        ; // wait until timer0 overflow?
                clr     RAM_28.0        ; RAM[0x28] &= ~(1 << 0)

timer0_overflowed:                      ; CODE XREF: power_on__ignition_key_turned_:MAIN_LOOP↑j
                setb    IEN0.6          ; Interrupt Enable Register 0
                setb    IEN1.6          ; refresh and start watchdog timer
                mov     C, RAM_2A.2
                mov     RAM_2D.1, C     ; RAM[0x2D].1 = RAM[0x2A].2
                mov     C, RAM_2A.7
                mov     RAM_2D.2, C     ; RAM[0x2D].2 = RAM[0x2A].7
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F], kitting bits
                mov     C, ACC.4        ; is there camshaft position sensor
                mov     RAM_2D.7, C     ; RAM[0x2D].7 = FLASH[0x873F].4 //is there camshaft position sensor
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                mov     C, ACC.5        ; camshaft position sensor cross-section is aligned with TDC
                mov     RAM_2E.0, C     ; RAM[0x2E].0 = FLASH[0x873F].5 // camshaft position sensor cross-section is aligned with TDC
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                mov     C, ACC.2        ; is there knock sensor
                mov     RAM_2E.1, C     ; RAM[0x2E].1 = FLASH[0x873F].2 // is there knock sensor
                mov     A, RAM_73
                jb      ACC.5, code_29B4 ; if (RAM[0x73] & (1 << 5)) jump ...
                clr     A
                mov     DPTR, #0F7BCh
                movx    @DPTR, A        ; XRAM[0xF7BC] = 0

code_29B4:                              ; CODE XREF: power_on__ignition_key_turned_+61A↑j
                jnb     RAM_28.5, code_29BF ; if (!(RAM[0x28] & (1 << 5))) jump ...
                mov     A, #0FFh
                mov     DPTR, #0F6B9h
                movx    @DPTR, A        ; XRAM[0xF6B9] = 0xFF
                sjmp    code_29CD
; ---------------------------------------------------------------------------

code_29BF:                              ; CODE XREF: power_on__ignition_key_turned_:code_29B4↑j
                jbc     RAM_25.5, init_xram_f6bb_f6bc_and_ram_48_49_4b_4c ; if (RAM[0x25] & (1 << 5)) {
                                        ;   RAM[0x25] &= ~(1 << 5)
                                        ;   jump ...
                                        ; }
                mov     DPTR, #0F6B9h
                movx    A, @DPTR        ; A = XRAM[0xF6B9]
                inc     A               ; ++A
                jz      code_29CD       ; if (!A) jump ...
                                        ; if (XRAM[0xF6B9] == 0xFF) jump ...
                mov     DPTR, #0F6B9h
                movx    @DPTR, A        ; ++XRAM[0xF6B9]

code_29CD:                              ; CODE XREF: power_on__ignition_key_turned_+62B↑j
                                        ; power_on__ignition_key_turned_+635↑j
                jb      RAM_2A.0, code_2A32 ; if (RAM[0x2A] & (1 << 0)) jump ...
                mov     DPTR, #0F6B9h
                movx    A, @DPTR        ; A = XRAM[0xF6B9]
                cjne    A, #5, code_29D7

code_29D7:                              ; CODE XREF: power_on__ignition_key_turned_+642↑j
                jc      code_2A32       ; if (A < 0x05) jump ...
                                        ; if (XRAM[0xF6B9] < 0x05) jump ...
                setb    RAM_2A.0
                clr     RAM_25.1
                mov     RAM_30, #0
                clr     A
                mov     RAM_44, A
                mov     RAM_45, A
                mov     RAM_48, A
                mov     RAM_49, A
                mov     RAM_4A, A
                mov     RAM_4B, A
                mov     RAM_4C, A       ; RAM[0x2A] |= (1 << 0)
                                        ; RAM[0x25] &= ~(1 << 1)
                                        ; RAM[0x30] = RAM[0x44] = RAM[0x45] = RAM[0x48] = RAM[0x49] = RAM[0x4A] = RAM[0x4B] = RAM[0x4C] = 0
                mov     DPTR, #0F6BAh
                movx    @DPTR, A
                mov     DPTR, #0F6BBh
                movx    @DPTR, A
                mov     DPTR, #0F6BCh
                movx    @DPTR, A        ; XRAM[0xF6BA] = XRAM[0xF6BB] = XRAM[0xF6BC] = 0
                mov     SETMSK, #0      ; Compare Set Mask Register
                mov     CLRMSK, #0      ; nullify set/clear masks for timer2 @ port5
                setb    P5.1            ; Port 5 (PDIR=0)
                setb    P5.0            ; turn off both igntion coils
                anl     IEN2, #0DFh     ; Clear IEN2.ECR
                                        ; COMCLR register compare match interrupt enable
                                        ; If ECR = 0, the COMCLR compare match interrupt is disabled.
                anl     CMEN, #0FEh     ; Compare Enable Register (RMAP=0)
                setb    P4.0            ; turn off injector for cyl 1
                anl     CMEN, #0FBh     ; Compare Enable Register (RMAP=0)
                setb    P4.2            ; turn off injector for cyl 3
                anl     CMEN, #0F7h     ; Compare Enable Register (RMAP=0)
                setb    P4.3            ; turn off injector for cyl 4
                anl     CMEN, #0FDh     ; Compare Enable Register (RMAP=0)
                setb    P4.1            ; turn off injector for cyl 2
                ljmp    code_2B19
; ---------------------------------------------------------------------------

init_xram_f6bb_f6bc_and_ram_48_49_4b_4c:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_29BF↑j
                jnb     RAM_2A.0, code_2A2D ; if (!(RAM[0x2A] & (1 << 0))) jump ...
                mov     DPTR, #0F6B9h
                movx    A, @DPTR
                cjne    A, #2, code_2A29

code_2A29:                              ; CODE XREF: power_on__ignition_key_turned_+694↑j
                jnc     code_2A2D       ; if (XRAM[0xF6B9] >= 2) jump ...
                clr     RAM_2A.0        ; RAM[0x2A] &= ~(1 << 0)

code_2A2D:                              ; CODE XREF: power_on__ignition_key_turned_:init_xram_f6bb_f6bc_and_ram_48_49_4b_4c↑j
                                        ; power_on__ignition_key_turned_:code_2A29↑j
                clr     A
                mov     DPTR, #0F6B9h
                movx    @DPTR, A        ; XRAM[0xF6B9] = 0

code_2A32:                              ; CODE XREF: power_on__ignition_key_turned_:code_29CD↑j
                                        ; power_on__ignition_key_turned_:code_29D7↑j
                clr     IEN0.7          ; disable all interrupts
                mov     R0, RAM_44      ; R0 = RAM[0x44]
                mov     R1, RAM_45      ; R1 = RAM[0x45]
                setb    IEN0.7          ; allow interrupts
                mov     A, R0
                orl     A, R1           ; A = RAM[0x44] | RAM[0x45]
                jnz     code_2A7C       ; if (Acc) jump ...
                                        ; if (RAM[0x44] | RAM[0x45]) jump ...
                clr     IEN0.7          ; disable interrupts
                mov     A, RAM_30       ; A = RAM[0x30]
                mov     R0, RAM_1C      ; R0 = RAM[0x1C]
                mov     R1, RAM_1D      ; R1 = RAM[0x1D]
                setb    IEN0.7          ; enable interrupts
                cjne    A, #4, ram_30_ne_4 ; if (RAM[0x30] != 4) jump ...
                clr     RAM_27.2        ; RAM[0x27] &= ~(1 << 2)

code_2A4D:                              ; CODE XREF: power_on__ignition_key_turned_+6DE↓j
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, #23h ; '#' ; Multiplication/Division Register 1
                mov     MD2, #8         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R0         ; Multiplication/Division Register 4
                mov     MD5, R1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Multiplication/Division Register 0
                mov     R3, MD1         ; Multiplication/Division Register 1
                mov     R4, MD2         ; Multiplication/Division Register 2
                mov     B, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Quot, Rem = 0x00082300 / R1:R0
                                        ; Quot = MD3:MD2:MD1:MD0 = B:R4:R3:R2
                                        ; Rem = MD5:MD4
                                        ; Reminder is dismissed
                jbc     RAM_27.2, code_2A4D ; if (RAM[0x27] & (1 << 2)) {
                                        ;   RAM[0x27] &= ~(1 << 2)
                                        ;   jump ...
                                        ; }
                setb    RAM_27.2        ; RAM[0x27] |= (1 << 2)
                mov     A, B            ; B-Register
                orl     A, R4           ; A = B | R4
                jz      high_word_of_quot_is_zero ; if (high word of quot is zero) jump ...
                sjmp    high_word_of_quot_is_not_zero
; ---------------------------------------------------------------------------

code_2A7C:                              ; CODE XREF: power_on__ignition_key_turned_+6AA↑j
                clr     RAM_27.2

code_2A7E:                              ; CODE XREF: power_on__ignition_key_turned_+70F↓j
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, #48h ; 'H' ; Multiplication/Division Register 1
                mov     MD2, #0E8h      ; Multiplication/Division Register 2
                mov     MD3, #1         ; Multiplication/Division Register 3
                mov     MD4, R0         ; Multiplication/Division Register 4
                mov     MD5, R1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Quot, Rem = 0x01E84800 / R1:R0
                                        ; Quot = MD3:MD2:MD1:MD0 = B:R4:R3:R2
                                        ; Rem = MD5:MD4
                                        ; Reminder is dismissed
                mov     R3, MD1         ; Multiplication/Division Register 1
                mov     R4, MD2         ; Multiplication/Division Register 2
                mov     B, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_2A7E ; if (RAM[0x27] & (1 << 2)) {
                                        ;   RAM[0x27] &= ~(1 << 2)
                                        ;   jump ...
                                        ; }
                setb    RAM_27.2        ; RAM[0x27] |= (1 << 2)
                mov     A, B            ; B-Register
                orl     A, R4
                jz      high_word_of_quot_is_zero ; if (high word of quot is zero) jump ...

high_word_of_quot_is_not_zero:          ; CODE XREF: power_on__ignition_key_turned_+6E8↑j
                mov     R0, #0FFh
                mov     R1, #0FFh
                sjmp    calc_ram_48     ; INPUT:
                                        ;  - R0
                                        ;  - R1
; ---------------------------------------------------------------------------

ram_30_ne_4:                            ; CODE XREF: power_on__ignition_key_turned_+6B6↑j
                mov     R0, #0
                mov     R1, #0
                sjmp    calc_ram_48     ; INPUT:
                                        ;  - R0
                                        ;  - R1
; ---------------------------------------------------------------------------

high_word_of_quot_is_zero:              ; CODE XREF: power_on__ignition_key_turned_+6E6↑j
                                        ; power_on__ignition_key_turned_+717↑j
                mov     R0, RAM_2       ; R0 = R2
                mov     R1, RAM_3       ; R1 = R3

calc_ram_48:                            ; CODE XREF: power_on__ignition_key_turned_+71D↑j
                                        ; power_on__ignition_key_turned_+723↑j
                mov     DPTR, #0F6BBh   ; INPUT:
                                        ;  - R0
                                        ;  - R1
                mov     A, R0
                movx    @DPTR, A        ; XRAM[0xF6BB] = R0
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A        ; XRAM[0xF6BC] = R1
                mov     R2, #20h ; ' '
                mov     R3, #0
                lcall   add_word        ; R1:R0 += 0x0020
                jnc     code_2AD1       ; if (no overflow took place) jump
                mov     RAM_48, #0FFh   ; saturate RAM[0x48] to 0xFF
                sjmp    ram_48_filled
; ---------------------------------------------------------------------------

code_2AD1:                              ; CODE XREF: power_on__ignition_key_turned_+738↑j
                lcall   shl_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ; OUTPUT:
                                        ;   R1:R0 = (R1:R0) << 2, or FF:FF (if overflow happens)
                                        ;   R1 - value for RAM[0x48]
                                        ;
                mov     RAM_48, R1

ram_48_filled:                          ; CODE XREF: power_on__ignition_key_turned_+73D↑j
                mov     DPTR, #0F6BBh
                movx    A, @DPTR
                mov     R0, A           ; R0 = A = XRAM[0xF6BB]
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6BC]
                mov     R2, #80h
                mov     R3, #0
                lcall   add_word        ; R1:R0 = XRAM[0xF6BC]:XRAM[0xF6BB] + 00:80
                jnc     code_2AE9       ; jump if NO overflow took place
                mov     R1, #0FFh       ; saturate R1 to 0xFF

code_2AE9:                              ; CODE XREF: power_on__ignition_key_turned_+753↑j
                mov     RAM_49, R1
                mov     A, RAM_49       ; A = RAM[0x49] = R1
                cjne    A, #1Fh, code_2AF0

code_2AF0:                              ; CODE XREF: power_on__ignition_key_turned_+75B↑j
                jc      code_2AF4
                mov     A, #1Fh         ; if (A < 0x1F)
                                        ;   A = 0x1F

code_2AF4:                              ; CODE XREF: power_on__ignition_key_turned_:code_2AF0↑j
                mov     DPTR, #0F6BAh
                movx    @DPTR, A        ; XRAM[0xF6BA] = A
                mov     DPTR, #0F6BBh
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6BB]
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6BC]
                mov     DPTR, #83B0h    ; DPTR = 0x83B0
                lcall   interpolate_table_value ; INPUT:
                                        ;  - R1 - index in table
                                        ;  - R0 - factor to scale difference
                                        ;  - DPTR - table ptr in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Acc - table value
                mov     RAM_4A, A       ; RAM[0x4A] = interpolated value
                add     A, #4
                swap    A
                rl      A
                anl     A, #1Fh
                mov     RAM_4B, A       ; RAM[0x4B] = ((RAM[0x4A] + 4) >> 3) & 0x1F
                mov     A, RAM_4A
                add     A, #8
                swap    A
                anl     A, #0Fh
                mov     RAM_4C, A       ; RAM[0x4C] = ((RAM[0x4A] + 8) >> 4) // high nibble

code_2B19:                              ; CODE XREF: power_on__ignition_key_turned_+68A↑j
                jb      RAM_28.6, query_inputs ; if (RAM[0x28] & (1 << 6)) jump ...
                mov     DPTR, #809Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x809B]
                mov     DPTR, #0F679h
                movx    A, @DPTR        ; A = XRAM[0xF679]
                clr     C
                subb    A, B            ; A = XRAM[0xF679] - FLASH[0x809B]
                jc      query_inputs    ; if (A < 0) jump ...
                mov     DPTR, #809Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x809A]
                mov     A, RAM_49       ; A = RAM[0x49]
                clr     C
                subb    A, B            ; A = RAM[0x49] - FLASH[0x809A]
                jc      query_inputs    ; if (A < 0) jump ...
                setb    RAM_28.6        ; if (!(RAM[0x28] & (1 << 6)) &&
                                        ;     ((XRAM[0xF679] - FLASH[0x809B] >= 0) &&
                                        ;      (RAM[0x49] - FLASH[0x809A] >= 0))
                                        ;   RAM[0x28] |= (1 << 6);


COOLANT TEMPERATURE SENSOR

query_inputs:                           ; CODE XREF: power_on__ignition_key_turned_:code_2B19↑j
                                        ; power_on__ignition_key_turned_+798↑j ...
                mov     B, #7           ; Coolant temperature sensor
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     A, R1
                mov     DPTR, #0F686h
                movx    @DPTR, A        ; XRAM[0xF686] = HIGH(ADC(CoolantTemperatureSensor))
                mov     B, #8           ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F69Eh
                lcall   add_word_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - R1:R0 - word to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += R1:R0
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                                        ;
                                        ; R1:R0 - left unchanged


INTAKE AIR TEMPERATURE SENSOR
                mov     B, #0Eh         ; Intake air temperature sensor
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     A, R1
                mov     DPTR, #0F687h
                movx    @DPTR, A        ; XRAM[0xF686] = HIGH(ADC(IntakeAirTemp))
                mov     B, #8           ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F6A0h
                lcall   add_word_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - R1:R0 - word to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += R1:R0
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                                        ;
                                        ; R1:R0 - left unchanged


CO POTENTIOMETER
                mov     B, #8           ; CO potentiometer
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                mov     DPTR, #0F689h
                movx    @DPTR, A        ; XRAM[0xF689] = HIGH(ADC(COpotentiometer))
                mov     DPTR, #0F6A4h
                lcall   add_byte_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - Acc - byte to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += Acc
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)


IGNITION SWITCH
                mov     B, #9           ; Ignition switch
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                mov     DPTR, #0F688h
                movx    @DPTR, A        ; XRAM[0xF688] = HIGH(ADC(IgnitionSwitch))
                mov     R0, A           ; R0 = HIGH(ADC(IgnitionSwitch))
                mov     DPTR, #0F69Bh
                lcall   add_byte_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - Acc - byte to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += Acc
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                mov     DPTR, #8096h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A           ; R1 = FLASH[0x8096]
                mov     B, #9           ; Ignition switch
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                clr     C
                subb    A, #0
                jnc     code_2B9D       ; if (A >= 0) jump ...
                clr     A

code_2B9D:                              ; CODE XREF: power_on__ignition_key_turned_+808↑j
                mov     B, #75h ; 'u'   ; B-Register
                mul     AB              ; B:A = A * 0x75
                rlc     A               ; C = !!(A & (1 << 7))
                                        ; A <<= 1
                mov     A, B            ; B-Register
                rlc     A               ; C = !!(B & (1 << 7))
                                        ; A = (B << 1) | ((A & (1 << 7)) >> 7)
                jnc     code_2BA9
                mov     A, #0FFh        ; if (CY)
                                        ;   A = 0xFF; // staurate

code_2BA9:                              ; CODE XREF: power_on__ignition_key_turned_+813↑j
                cjne    A, RAM_1, code_2BAC

code_2BAC:                              ; CODE XREF: power_on__ignition_key_turned_:code_2BA9↑j
                cpl     C               ; C = !(A < R1) // R1 = FLASH[0x8096]
                mov     RAM_28.4, C     ; RAM[0x28] |= ((!(A < R1)) << 4)


THROTTLE POSITION SENSOR
                mov     B, #0Ch         ; Throttle Position Sensor
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     A, R1
                mov     DPTR, #0F685h
                movx    @DPTR, A        ; XRAM[0xF685] = HIGH(ADC(ThrottlePositionSensor))
                mov     B, #8           ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0F6A6h
                lcall   add_word_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - R1:R0 - word to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += R1:R0
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                                        ;
                                        ; R1:R0 - left unchanged
                mov     DPTR, #0F69Dh   ; some status byte?
                movx    A, @DPTR
                jnz     xram_f69d_not_zero ; if (XRAM[0xF69D]) jump ...
                mov     A, R1
                mov     DPTR, #0F6B3h
                movx    @DPTR, A        ; XRAM[0xF6B3] = HIGH(ScaledThrottlePositionSensor)
                mov     DPTR, #0F6B4h
                movx    @DPTR, A        ; XRAM[0xF6B4] = HIGH(ScaledThrottlePositionSensor)
                sjmp    code_2BF3
; ---------------------------------------------------------------------------

xram_f69d_not_zero:                     ; CODE XREF: power_on__ignition_key_turned_+838↑j
                mov     DPTR, #0F6B3h
                movx    A, @DPTR        ; A = XRAM[0xF6B3]
                clr     C
                subb    A, R1           ; A -= HIGH(ScaledThrottlePositionSensor)
                jc      code_2BE6       ; if (A < 0) jump ...
                                        ; if (XRAM[0xF6B3] < HIGH(ScaledThrottlePositionSensor)) jump ...
                mov     A, R1
                mov     DPTR, #0F6B3h
                movx    @DPTR, A        ; XRAM[0xF6B3] = HIGH(ScaledThrottlePositionSensor)
                sjmp    code_2BF3
; ---------------------------------------------------------------------------

code_2BE6:                              ; CODE XREF: power_on__ignition_key_turned_+84B↑j
                mov     DPTR, #0F6B4h
                movx    A, @DPTR        ; A = XRAM[0xF6B4]
                clr     C
                subb    A, R1           ; A -= HIGH(ScaledThrottlePositionSensor)
                jnc     code_2BF3       ; if (A >= 0) jump ...
                                        ; if (XRAM[0xF6B4] >= HIGH(ScaledThrottlePositionSensor)) jump ...
                mov     A, R1
                mov     DPTR, #0F6B4h
                movx    @DPTR, A        ; XRAM[0xF6B4] = HIGH(ScaledThrottlePositionSensor)

code_2BF3:                              ; CODE XREF: power_on__ignition_key_turned_+843↑j
                                        ; power_on__ignition_key_turned_+852↑j ...
                mov     A, RAM_49
                mov     DPTR, #0F6A8h   ; word V = COMPOSE_WORD(XRAM[0xF6A8+1], XRAM[0xF6A8]);
                                        ; V += RAM[0x49]
                                        ; XRAM[0xF6A8] = LOW(V);
                                        ; XRAM[0xF6A8+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                lcall   add_byte_in_xram_word ; INPUT:
                                        ;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
                                        ;  - Acc - byte to add
                                        ;
                                        ; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
                                        ; V += Acc
                                        ; XRAM[DPTR] = LOW(V);
                                        ; XRAM[DPTR+1] = HIGH(V);
                                        ;
                                        ; A = HIGH(V)
                mov     DPTR, #0F69Dh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A        ; ++XRAM[0xF69D]
                                        ; A = XRAM[0xF69D]
                cjne    A, #20h, _2ED3_trampoline ; ' ' ; if (++XRAM[0xF69D] != 0x20) jump ...
                sjmp    code_2C09
; ---------------------------------------------------------------------------


!!!!!!!!!!!! CONTINUE REVERSING FROM HERE !!!!!!!!!!!!



!!!!!!!!!! CONTINUE HIGH-LEVEL FROM HERE !!!!!!!!!!!




_2ED3_trampoline:                       ; CODE XREF: power_on__ignition_key_turned_+86F↑j
                ljmp    code_2ED3
; ---------------------------------------------------------------------------
PREREQUISITES: DPTR = 0xF69D
Got here iff (XRAM[0xF69D] == 0x20)

code_2C09:                              ; CODE XREF: power_on__ignition_key_turned_+872↑j
                clr     A
                movx    @DPTR, A        ; XRAM[0xF69D] = 0
                mov     A, RAM_72       ; A = RAM[0x72]
                jnb     ACC.7, ram_72_bit_7_clear ; if (!(RAM[0x72] & (1 << 7))) jump ...
                mov     R0, #0          ; R0 = 0
                ljmp    temperature_init_done
; ---------------------------------------------------------------------------

ram_72_bit_7_clear:                     ; CODE XREF: power_on__ignition_key_turned_+87B↑j
                mov     DPTR, #0F69Eh
                movx    A, @DPTR
                mov     R0, A           ; R0 = A = XRAM[0xF69E] // low byte of scaled ADC Coolant Temperature sum
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = A = XRAM[0xF69F] // high byte of scaled ADC Coolant Temperature sum
                jb      RAM_26.6, ram_26_bit_6_set ; if (RAM[0x26] & (1 << 6)) jump ...
                mov     DPTR, #805Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x805D]
                mov     DPTR, #0F6BFh
                movx    A, @DPTR        ; A = XRAM[0xF6BF]
                cjne    A, B, code_2C2E ; B-Register

code_2C2E:                              ; CODE XREF: power_on__ignition_key_turned_+899↑j
                jc      xram_F6BF_less_than_flash_805D_or_coolant_temperature_OK ; if (A < B) jump ...
                                        ; if (XRAM[0xF6BF] < FLASH[0x805D]) jump ...
                mov     DPTR, #8057h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8057]
                mov     A, R1           ; A = R1
                cjne    A, B, code_2C3B ; B-Register

code_2C3B:                              ; CODE XREF: power_on__ignition_key_turned_+8A6↑j
                jc      xram_F69F_less_than_MinimumADCCoolantTemp ; if (A < B) jump ...
                                        ; if (XRAM[0xF69F] < FLASH[0x8057]) jump ...
                                        ; if (XRAM[0xF69F] < MinimumADCCoolantTemp) jump ...
                mov     DPTR, #8058h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                cjne    A, B, code_2C48 ; B-Register

code_2C48:                              ; CODE XREF: power_on__ignition_key_turned_+8B3↑j
                jnc     xram_F69F_not_less_than_MaximumADCCoolantTemp ; if (A >= B) jump ...
                                        ; if (XRAM[0xF69F] >= FLASH[0x8058]) jump ...
                                        ; if (XRAM[0xF69F] >= MaximumADCCoolantTemp) jump ...

xram_F6BF_less_than_flash_805D_or_coolant_temperature_OK:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2C2E↑j
                clr     RAM_23.2
                clr     RAM_23.3        ; clear error
                mov     DPTR, #831Fh    ; coolant temperature table
                lcall   get_adc_value_from_table_and_adjust_for_calculus ; Find ADC value in table and adjust for calculus
                                        ;
                                        ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;   R1:R0 - adjusted table value
                                        ;   Acc = R1
                mov     RAM_3A, A       ; Store adjusted coolant temperature
                mov     DPTR, #805Ch
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x805C] // threshold of coolant temperature
                mov     B, A            ; B-Register
                sjmp    code_2C99
; ---------------------------------------------------------------------------

ram_26_bit_6_set:                       ; CODE XREF: power_on__ignition_key_turned_+88B↑j
                mov     DPTR, #805Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x805D]
                mov     DPTR, #0F6BFh
                movx    A, @DPTR        ; A = XRAM[0xF6BF]
                cjne    A, B, code_2C6D ; B-Register

code_2C6D:                              ; CODE XREF: power_on__ignition_key_turned_+8D8↑j
                jc      xram_F6BF_less_than_flash_805D_or_coolant_temperature_OK_2 ; if (XRAM[0xF6BF] < FLASH[0x805D]) jump ...
                mov     DPTR, #8059h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                cjne    A, B, code_2C7A ; B-Register

code_2C7A:                              ; CODE XREF: power_on__ignition_key_turned_+8E5↑j
                jc      xram_F69F_less_than_MinimumADCCoolantTemp ; if (XRAM[0xF69F] < FLASH[0x8059]) jump ...
                mov     DPTR, #805Ah
                clr     A
                movc    A, @A+DPTR
                cjne    A, RAM_1, code_2C84

code_2C84:                              ; CODE XREF: power_on__ignition_key_turned_+8EF↑j
                jc      xram_F69F_not_less_than_MaximumADCCoolantTemp ; if (XRAM[0xF69F] >= FLASH[0x805A]) jump ...

xram_F6BF_less_than_flash_805D_or_coolant_temperature_OK_2:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2C6D↑j
                clr     RAM_23.2
                clr     RAM_23.3
                mov     DPTR, #8330h
                lcall   get_adc_value_from_table_and_adjust_for_calculus ; Find ADC value in table and adjust for calculus
                                        ;
                                        ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;   R1:R0 - adjusted table value
                                        ;   Acc = R1
                mov     RAM_3A, A       ; Store adjusted coolant temperature
                mov     DPTR, #805Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x805B] // threshold coolant of coolant temperature ?

code_2C99:                              ; CODE XREF: power_on__ignition_key_turned_+8CB↑j
                mov     A, RAM_3A       ; A = RAM[0x3A] // adjusted coolant temperature
                cjne    A, B, code_2C9E ; B-Register

code_2C9E:                              ; CODE XREF: power_on__ignition_key_turned_+909↑j
                cpl     C
                mov     RAM_26.6, C     ; RAM[0x26] |= ((RAM[0x30] >= B) << 6) // B - is either FLASH[0x805B] or FLASH[0x805C], the threshold of coolant temperature value.
                jc      code_2CA5
                sjmp    temperature_init_done
; ---------------------------------------------------------------------------

code_2CA5:                              ; CODE XREF: power_on__ignition_key_turned_+90F↑j
                sjmp    temperature_init_done
; ---------------------------------------------------------------------------

xram_F69F_less_than_MinimumADCCoolantTemp:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2C3B↑j
                                        ; power_on__ignition_key_turned_:code_2C7A↑j
                setb    RAM_23.2        ; set error flag
                clr     RAM_23.3
                sjmp    coolant_error_condition_common
; ---------------------------------------------------------------------------

xram_F69F_not_less_than_MaximumADCCoolantTemp:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2C48↑j
                                        ; power_on__ignition_key_turned_:code_2C84↑j
                clr     RAM_23.2        ; set error flag
                setb    RAM_23.3

coolant_error_condition_common:         ; CODE XREF: power_on__ignition_key_turned_+919↑j
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                anl     A, #0F0h
                swap    A
                mov     B, A            ; B-Register
                mov     DPTR, #8A4Bh    ; fallback coolant temperature
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                mov     RAM_3A, A       ; RAM[0x3A] = A = FLASH[0x8A4B + ((XRAM[0xF6BF] >> 4) & 0x0F)]
                mov     R0, #0          ; R0 = 0
PREREQUISITE:
 - RAM[0x3A] - contains adjusted coolant temperature
 - R0 - low byte of scaled coolant temperature


temperature_init_done:                  ; CODE XREF: power_on__ignition_key_turned_+880↑j
                                        ; power_on__ignition_key_turned_+911↑j ...
                mov     R1, RAM_3A
                lcall   adjust_temperature ; INPUT
                                        ;   R1:R0 - adjusted table value for A/D Converted value
                                        ;
                                        ; OUTPUT
                                        ;   X = (R1:R0 + 00:50) / 00:A0
                                        ;   X is Quotient. Reminder is not used.
                                        ;   if (X > 0xFF), 0xFF returned
                                        ;   if (R1:R0 + 00:50) overflow, 0xFF returned
                                        ;   otherwise - LOW(X).
                                        ;
                                        ;   Result returned in Acc
                                        ;
                mov     RAM_3D, A       ; RAM[0x3D] = adjusted coolant temperature
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, no_intake_air_temperature_sensor ; if (!(is there air temperature sensor)) jump ...
                mov     R0, #0          ; R0 = 0
                mov     A, RAM_73       ; A = RAM[0x73]
                jb      ACC.0, ram_73_bit_0_set ; if (RAM[0x73] & (1 << 0)) jump ...
                mov     DPTR, #0F6A0h
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6A0] // sum of scaled ADC Intake Air Temperature, low byte
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6A1] // sum of scaled ADC Intake Air Temperature, high byte
                mov     DPTR, #8060h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8060]
                mov     DPTR, #0F6BFh
                movx    A, @DPTR        ; A = XRAM[0xF6BF]
                cjne    A, B, code_2CF0 ; B-Register

code_2CF0:                              ; CODE XREF: power_on__ignition_key_turned_+95B↑j
                jc      xram_F6BF_less_than_flash_8060 ; if (A < B) jump ...
                                        ; if (XRAM[0xF6BF] < FLASH[0x8060]) jump ...
                mov     DPTR, #805Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x805E]
                mov     A, R1
                cjne    A, B, code_2CFD ; B-Register

code_2CFD:                              ; CODE XREF: power_on__ignition_key_turned_+968↑j
                jc      scaled_intake_air_temperature_less_than_minimum_intake_air_temperature ; if (R1 < FLASH[0x805E]) jump ...
                mov     DPTR, #805Fh
                clr     A
                movc    A, @A+DPTR
                cjne    A, RAM_1, code_2D07

code_2D07:                              ; CODE XREF: power_on__ignition_key_turned_+972↑j
                jc      scaled_intake_air_temperature_larger_or_equal_than_maximum_intake_air_temperature ; if (FLASH[0x805F] < R1) jump ...

xram_F6BF_less_than_flash_8060:         ; CODE XREF: power_on__ignition_key_turned_:code_2CF0↑j
                clr     RAM_24.4        ; clear error flag
                clr     RAM_24.5
                mov     DPTR, #8341h    ; intake air temperature table
                lcall   get_adc_value_from_table_and_adjust_for_calculus ; Find ADC value in table and adjust for calculus
                                        ;
                                        ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;   R1:R0 - adjusted table value
                                        ;   Acc = R1
                mov     RAM_3B, A       ; store adjusted intake air temperature
                sjmp    ram_73_bit_0_set
; ---------------------------------------------------------------------------

scaled_intake_air_temperature_less_than_minimum_intake_air_temperature:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2CFD↑j
                setb    RAM_24.4        ; set error flags
                clr     RAM_24.5
                sjmp    no_intake_air_temperature_sensor
; ---------------------------------------------------------------------------

scaled_intake_air_temperature_larger_or_equal_than_maximum_intake_air_temperature:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2D07↑j
                clr     RAM_24.4        ; set error flags
                setb    RAM_24.5

no_intake_air_temperature_sensor:       ; CODE XREF: power_on__ignition_key_turned_+93E↑j
                                        ; power_on__ignition_key_turned_+989↑j
                mov     DPTR, #8061h
                clr     A
                movc    A, @A+DPTR
                mov     RAM_3B, A       ; RAM[0x3B] = FLASH[0x8061] // fallback intake air temperature
                mov     R0, #0
PREREQUISITE: RAM[0x3B] - set to adjusted intake air temperature

ram_73_bit_0_set:                       ; CODE XREF: power_on__ignition_key_turned_+945↑j
                                        ; power_on__ignition_key_turned_+983↑j
                mov     R1, RAM_3B
                lcall   adjust_temperature ; INPUT
                                        ;   R1:R0 - adjusted table value for A/D Converted value
                                        ;
                                        ; OUTPUT
                                        ;   X = (R1:R0 + 00:50) / 00:A0
                                        ;   X is Quotient. Reminder is not used.
                                        ;   if (X > 0xFF), 0xFF returned
                                        ;   if (R1:R0 + 00:50) overflow, 0xFF returned
                                        ;   otherwise - LOW(X).
                                        ;
                                        ;   Result returned in Acc
                                        ;
                mov     RAM_3E, A       ; Store adjusted intake air temperature
FINISHED INTAKE AIR TEMPERATURE
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jb      ACC.7, check_CO_pot ; if there is CO potentiometer
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.0, pick_CO_pot_from_eeprom ; if there is IROM
                clr     RAM_23.4        ; clear error flags
                clr     RAM_23.5
                sjmp    fallback_CO_pot
; ---------------------------------------------------------------------------

check_CO_pot:                           ; CODE XREF: power_on__ignition_key_turned_+9A4↑j
                mov     DPTR, #0F6A4h
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6A4] // sum of ADC CO Potentiometer, low byte
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6A5] // sum of ADC CO Potentiometer, high byte
                lcall   shl_word_3_times ; INPUT:
                                        ;   R1:R0
                                        ; OUTPUT:
                                        ;   R1:R0 = (R1:R0) << 3, or FF:FF (if overflow happens)
                                        ;
                mov     DPTR, #8067h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8067] // minimum ADC CO Pot
                mov     B, A            ; B-Register
                mov     A, R1
                cjne    A, B, code_2D5D ; B-Register

code_2D5D:                              ; CODE XREF: power_on__ignition_key_turned_+9C8↑j
                jnc     co_pot_not_less_than_minimum_co_pot
                setb    RAM_23.4        ; set error flag
                clr     RAM_23.5
                sjmp    fallback_CO_pot
; ---------------------------------------------------------------------------

co_pot_not_less_than_minimum_co_pot:    ; CODE XREF: power_on__ignition_key_turned_:code_2D5D↑j
                mov     DPTR, #8068h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8068] // maximum value of ADC CO Pot
                cjne    A, RAM_1, code_2D6D

code_2D6D:                              ; CODE XREF: power_on__ignition_key_turned_+9D8↑j
                jnc     co_pot_less_or_equal_than_maximum_co_pot
                clr     RAM_23.4        ; set error flag
                setb    RAM_23.5
                sjmp    fallback_CO_pot
; ---------------------------------------------------------------------------

co_pot_less_or_equal_than_maximum_co_pot:
                                        ; CODE XREF: power_on__ignition_key_turned_:code_2D6D↑j
                clr     RAM_23.4        ; clear error flag
                clr     RAM_23.5
                mov     A, R1
                rlc     A               ; A *= 2 // A <<= 1
                jnc     code_2D7F
                mov     A, #0FFh        ; saturate to 0xFF

code_2D7F:                              ; CODE XREF: power_on__ignition_key_turned_+9E9↑j
                clr     C
                subb    A, #50h ; 'P'   ; if (R1 & (1 << 7))
                                        ;   A = 0xFF;
                                        ; else
                                        ;   A = R1 << 1;
                                        ;
                                        ; A -= 0x50;
                mov     B, #0C0h        ; B-Register
                lcall   multiply_signed ; Multiply signed bytes.
                                        ; Result - signed word.
                                        ;
                                        ; INPUT
                                        ;  - A - multiplicand #1
                                        ;  - B - multiplicand #2
                                        ;
                                        ; OUTPUT
                                        ;  - B:A - signed word B*A
                sjmp    calculate_xram_f681
; ---------------------------------------------------------------------------

fallback_CO_pot:                        ; CODE XREF: power_on__ignition_key_turned_+9B3↑j
                                        ; power_on__ignition_key_turned_+9D1↑j ...
                mov     DPTR, #8069h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

calculate_xram_f681:                    ; CODE XREF: power_on__ignition_key_turned_+9F6↑j
                mov     A, RAM_73
                jb      ACC.3, code_2D9C ; Accumulator
                mov     A, B            ; B-Register
                mov     DPTR, #0F681h
                movx    @DPTR, A        ; store adjusted CO potentiometer value

code_2D9C:                              ; CODE XREF: power_on__ignition_key_turned_+A01↑j
                sjmp    xram_f681_initialized
; ---------------------------------------------------------------------------

pick_CO_pot_from_eeprom:                ; CODE XREF: power_on__ignition_key_turned_+9AC↑j
                clr     RAM_23.4
                clr     RAM_23.5
                mov     A, RAM_73
                jb      ACC.3, xram_f681_initialized ; Accumulator
                mov     DPTR, #0FF74h
                movx    A, @DPTR
                mov     DPTR, #0F681h
                movx    @DPTR, A        ; XRAM[0xF681] = XRAM[0xFF74]

xram_f681_initialized:                  ; CODE XREF: power_on__ignition_key_turned_:code_2D9C↑j
                                        ; power_on__ignition_key_turned_+A12↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.0, code_2DC7 ; if there is IROM
                mov     A, RAM_73
                jb      ACC.4, xram_f682_initialized ; Accumulator
                mov     DPTR, #806Ah
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F682h
                movx    @DPTR, A        ; XRAM[0xF682] = FLASH[0x806A] // fallback value
                sjmp    xram_f682_initialized
; ---------------------------------------------------------------------------

code_2DC7:                              ; CODE XREF: power_on__ignition_key_turned_+A22↑j
                mov     A, RAM_73
                jb      ACC.4, xram_f682_initialized ; Accumulator
                mov     DPTR, #0FF75h
                movx    A, @DPTR
                mov     DPTR, #0F682h   ; XRAM[0xF682] = XRAM[0xFF75] // setting value from eeprom
                movx    @DPTR, A
START THROTTLE POSITION


xram_f682_initialized:                  ; CODE XREF: power_on__ignition_key_turned_+A27↑j
                                        ; power_on__ignition_key_turned_+A33↑j ...
                mov     DPTR, #0F6B3h
                movx    A, @DPTR
                mov     B, A            ; B = XRAM[0xF6B3] // high byte of scaled ADC Throttle Position
                mov     DPTR, #0F6B4h
                movx    A, @DPTR        ; A = XRAM[0xF6B4] // low byte of scaled ADC Throttle Position
                clr     C
                subb    A, B            ; B-Register
                mov     B, A            ; B = A - B
                mov     DPTR, #8080h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8080]
                clr     C
                subb    A, B            ; B-Register
                jc      code_2E1F       ; if (FLASH[0x8080] < B) jump ...
                mov     DPTR, #0F6B7h
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6B7]
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6B8]
                mov     DPTR, #0F6A6h
                movx    A, @DPTR
                mov     R2, A           ; R2 = XRAM[0xF6A6] // low byte of sum of scaled ADC Throrrle Position
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A           ; R2 = XRAM[0xF6A7] // high byte of sum of scaled ADC Throrrle Position
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_2E1F       ; if (COMPOSE_WORD(XRAM[0xF6B8], XRAM[0xF6B7]) < COMPOSE_WORD(XRAM[0xF6A7], XRAM[0xF6A6])) jump ...
                mov     A, R2
                anl     A, #0C0h
                mov     R2, A           ; R2 &= 0xC0 // 1100 0000
                                        ;
                                        ; // align sum with ADC result
                mov     R0, #40h ; '@'
                mov     R1, #0
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6B5h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6B7h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1           ; XRAM[0xF6B6]:XRAM[0xF6B5] = (XRAM[0xF6A7]:XRAM[0xF6A6] & 0x00:0xC0) + 0x00:0x40
                                        ;
                                        ; XRAM[0xF6B8]:XRAM[0xF6B7] = (XRAM[0xF6A7]:XRAM[0xF6A6] & 0x00:0xC0) + 0x00:0x40
                movx    @DPTR, A
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E1F:                              ; CODE XREF: power_on__ignition_key_turned_+A59↑j
                                        ; power_on__ignition_key_turned_+A6E↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.6, no_need_to_adapt_throttle_position_sensor ; if (NOT should throttle position sensor adaptation be done) jump ...
                mov     DPTR, #0F7BCh
                movx    A, @DPTR        ; A = XRAM[0xF7BC]
                cjne    A, #0Bh, code_2E30
                sjmp    no_need_to_adapt_throttle_position_sensor ; if ((0x0B == XRAM[0xF7BC]) || (0x15 == XRAM[0xF7BC]) ||
                                        ;     (0x16 == XRAM[0xF7BC]) || (0x17 == XRAM[0xF7BC]) ||
                                        ;     (0x1F == XRAM[0xF7BC]) || (0x20 == XRAM[0xF7BC]) ||
                                        ;     (0x29 == XRAM[0xF7BC]))
                                        ;   jump _2E75 (no_need_to_adapt_throttle_position_sensor)
                                        ; else
                                        ;   jump _2E4E (adapt_throttle_position_sensor_input)
; ---------------------------------------------------------------------------

code_2E30:                              ; CODE XREF: power_on__ignition_key_turned_+A99↑j
                cjne    A, #15h, code_2E35
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E35:                              ; CODE XREF: power_on__ignition_key_turned_:code_2E30↑j
                cjne    A, #16h, code_2E3A
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E3A:                              ; CODE XREF: power_on__ignition_key_turned_:code_2E35↑j
                cjne    A, #17h, code_2E3F
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E3F:                              ; CODE XREF: power_on__ignition_key_turned_:code_2E3A↑j
                cjne    A, #1Fh, code_2E44
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E44:                              ; CODE XREF: power_on__ignition_key_turned_:code_2E3F↑j
                cjne    A, #20h, code_2E49 ; ' '
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

code_2E49:                              ; CODE XREF: power_on__ignition_key_turned_:code_2E44↑j
                cjne    A, #29h, adapt_throttle_position_sensor_input ; ')'
                sjmp    no_need_to_adapt_throttle_position_sensor
; ---------------------------------------------------------------------------

PREREQUISITE:
(XRAM[0xF7BC] != 0x0B) && (XRAM[0xF7BC] != 0x15) &&
(XRAM[0xF7BC] != 0x16) && (XRAM[0xF7BC] != 0x17) &&
(XRAM[0xF7BC] != 0x1F) && (XRAM[0xF7BC] != 0x20) &&
(XRAM[0xF7BC] != 0x29)

adapt_throttle_position_sensor_input:   ; CODE XREF: power_on__ignition_key_turned_:code_2E49↑j
                mov     DPTR, #807Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x807C]
                mov     DPTR, #0F6B8h
                movx    A, @DPTR        ; A = XRAM[0xF6B8] // High byte of adjusted ADC Throttle Position
                clr     C
                subb    A, B            ; B-Register
                jnc     no_need_to_adapt_throttle_position_sensor ; if (A >= B) jump ...
                                        ; if (XRAM[0xF6B8] >= FLASH[0x807C]) jump ...
                mov     DPTR, #0F6B7h
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6B7] // Low byte of adjusted ADC Throttle Position
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6B8] // High byte of adjusted ADC Throttle Position
                mov     R2, #2
                mov     R3, #0
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6B7h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A        ; WORD(XRAM[0xF6B8]:XRAM[0xF8B7]) += 0x00:0x02

no_need_to_adapt_throttle_position_sensor:
                                        ; CODE XREF: power_on__ignition_key_turned_+A8B↑j
                                        ; power_on__ignition_key_turned_+A92↑j ...
                mov     DPTR, #0F6A6h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1:R0 = XRAM[0xF6A7]:XRAM[0xF6A6] // sum of scaled ADC Throttle Position
                mov     DPTR, #807Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x807A] // low limit of XRAM[0xF6A7]
                mov     A, R1
                clr     C
                subb    A, B            ; B-Register
                jc      xram_f6a7_less_low_limit ; if (A < B) jump ...
                                        ; if (XRAM[0xF6A7] < FLASH[0x807A]) jump ...
                mov     DPTR, #807Bh
                clr     A
                movc    A, @A+DPTR      ; A = FLAS[0x807B] // high limit of XRAM[0xF6A7]
                clr     C
                subb    A, R1
                jc      xram_f6a7_larger_upper_limit ; if (FLASH[0x807B] < XRAM[0xF6A7]) jump ...
                clr     RAM_24.0
                clr     RAM_24.1
                sjmp    done_checking_xram_f6a7
; ---------------------------------------------------------------------------

xram_f6a7_less_low_limit:               ; CODE XREF: power_on__ignition_key_turned_+AF6↑j
                setb    RAM_24.0
                clr     RAM_24.1
                sjmp    done_checking_xram_f6a7
; ---------------------------------------------------------------------------

xram_f6a7_larger_upper_limit:           ; CODE XREF: power_on__ignition_key_turned_+AFF↑j
                clr     RAM_24.0
                setb    RAM_24.1

done_checking_xram_f6a7:                ; CODE XREF: power_on__ignition_key_turned_+B05↑j
                                        ; power_on__ignition_key_turned_+B0B↑j
                mov     DPTR, #0F6A8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1:R0 = XRAM[0xF6A9]:XRAM[0xF6A8] // sum of RAM[0x49]
                mov     DPTR, #0F6AAh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A           ; R3:R2 = XRAM[0xF6AB]:XRAM[0xF6AA]
                mov     DPTR, #0F6AAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A        ; XRAM[0xF6AB]:XRAM[0xF6AA] = XRAM[0xF6A9]:XRAM[0xF6A8] // sum of RAM[0x49]
                lcall   subtract_word   ; R1:R0 = XRAM[0xF6A9]:XRAM[0xF6A8] - R3:R2
                jnc     code_2EC4
                mov     R0, #0          ; saturate to 0 if XRAM[0xF6A9]:XRAM[0xF6A8] < XRAM[0xF6AB]:XRAM[0xF6AA]
                                        ;
                                        ; if (R1:R0 < 0) {
                                        ;   R1 = 0
                                        ;   R0 = 0
                                        ; }
                mov     R1, #0

code_2EC4:                              ; CODE XREF: power_on__ignition_key_turned_+B2C↑j
                mov     A, R1
                jz      code_2EC9       ; if (!R1) jump ...
                mov     R0, #0FFh       ; saturate low byte of difference to 0xFF when R1:R0 > 0x00:0xFF

code_2EC9:                              ; CODE XREF: power_on__ignition_key_turned_+B33↑j
                mov     A, R0
                mov     DPTR, #0F6ACh
                movx    @DPTR, A        ; XRAM[0xF6AC] = R0 // low byte of difference
                lcall   clear_xram_f69e_0c_bytes
                setb    RAM_28.3
finished some parts


code_2ED3:                              ; CODE XREF: power_on__ignition_key_turned_:_2ED3_trampoline↑j
                mov     DPTR, #0F69Ah
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A        ; A = ++XRAM[0xF69A]
                cjne    A, #4, check_L_line ; if (XRAM[0xF69A] != 4) jump ... // last cylinder ?
                clr     A
                movx    @DPTR, A        ; XRAM[0xF69A] = 0 // reset
                mov     DPTR, #0F69Bh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1:R0 = XRAM[0xF69C:0xF69B] // sum of Ignition switch voltage
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2
                mov     A, R0
                clr     C
                subb    A, #0
                jnc     code_2EF0
                clr     A               ; skipped

code_2EF0:                              ; CODE XREF: power_on__ignition_key_turned_+B5B↑j
                mov     B, #75h ; 'u'   ; B-Register
                mul     AB              ; B:A = A * 0x75 = LOW(IgnitionSwitchVoltage) * 0x75
                rlc     A
                mov     A, B            ; B-Register
                rlc     A               ; if (B >= 0x80)
                                        ;   A = 0xFF
                                        ; else
                                        ;   A = HIGH(COMPOSE_WORD(B, A) << 1)
                                        ;
                                        ; jump _2EFC
                jnc     code_2EFC
                mov     A, #0FFh

code_2EFC:                              ; CODE XREF: power_on__ignition_key_turned_+B66↑j
                mov     R1, A           ; R1 = A = Adjusted Ignition Switch Voltage
                mov     DPTR, #8062h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8062] // minimum adjusted value for ignition switch voltage
                mov     B, A            ; B = FLASH[0x8062] // minimum adjusted value for ignition switch voltage
                mov     A, R1           ; A = R1 = Adjusted Ignition Switch Voltage
                cjne    A, B, code_2F08 ; B-Register

code_2F08:                              ; CODE XREF: power_on__ignition_key_turned_+B73↑j
                mov     RAM_22.4, C     ; RAM[0x22] |= (!!(Adjusted Ignition Switch Voltage < FLASH[0x8062])) << 4
                mov     DPTR, #8063h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8063] // maximum adjusted value for ignition switch voltage
                cjne    A, RAM_1, code_2F12

code_2F12:                              ; CODE XREF: power_on__ignition_key_turned_+B7D↑j
                mov     RAM_22.5, C     ; RAM[0x22] |= (!!(Adjusted Ignition Switch Voltage > FLASH[0x8063])) << 5
                mov     A, R1
                mov     RAM_3C, A
                mov     A, RAM_3C       ; A = RAM[0x3C] = R1
                                        ;
                                        ; if (A < 0x36)
                                        ;   A = 0
                                        ; else
                                        ;   A -= 0x36
                                        ;
                                        ; jump _2F1F
                clr     C
                subb    A, #36h ; '6'
                jnc     code_2F1F
                clr     A

code_2F1F:                              ; CODE XREF: power_on__ignition_key_turned_+B8A↑j
                mov     B, #40h ; '@'   ; B-Register
                mul     AB              ; B:A = A * 0x40 = WORD(A) << 6
                                        ;
                                        ; if (B > 0x1F)
                                        ;   A = 0x1F
                                        ; else
                                        ;   A = B
                                        ;
                                        ; jump _2F2C
                mov     A, B            ; B-Register
                cjne    A, #1Fh, code_2F28

code_2F28:                              ; CODE XREF: power_on__ignition_key_turned_+B93↑j
                jc      code_2F2C
                mov     A, #1Fh

code_2F2C:                              ; CODE XREF: power_on__ignition_key_turned_:code_2F28↑j
                mov     RAM_3F, A       ; Store adjusted ignition switch voltage
                lcall   clear_xram_f69a_f69b

check_L_line:                           ; CODE XREF: power_on__ignition_key_turned_+B47↑j
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h
                jnz     code_2F3B       ; if (L0 @ MC33199) jump ...
                mov     A, #0
                sjmp    code_2F3D
; ---------------------------------------------------------------------------

code_2F3B:                              ; CODE XREF: power_on__ignition_key_turned_+BA3↑j
                mov     A, #3

code_2F3D:                              ; CODE XREF: power_on__ignition_key_turned_+BA7↑j
                mov     DPTR, #0F7BEh
                movx    @DPTR, A        ; XRAM[0xF7BE] = Acc
START EGO SENSOR #1 (8bit ADC)

                mov     B, #1           ; B-Register
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                clr     C
                subb    A, #0
                jnc     code_2F4D
                clr     A

code_2F4D:                              ; CODE XREF: power_on__ignition_key_turned_+BB8↑j
                mov     B, #0FFh        ; B-Register
                mul     AB              ; B:A = 0xFF * ADC(EGO_1)
                rlc     A
                xch     A, B            ; B-Register
                rlc     A               ; if (B >= 0x40)
                                        ;   A = 0xFF // saturate
                                        ; else
                                        ;   A = HIGH(WORD(B:A) << 2)
                                        ;
                                        ; jump _2F61
                jc      code_2F5F
                xch     A, B            ; B-Register
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jnc     code_2F61

code_2F5F:                              ; CODE XREF: power_on__ignition_key_turned_+BC3↑j
                mov     A, #0FFh

code_2F61:                              ; CODE XREF: power_on__ignition_key_turned_+BCB↑j
                mov     B, A            ; B = A
                mov     DPTR, #0F68Bh
                movx    A, @DPTR        ; A = XRAM[0xF68B] // ???
                clr     C
                subb    A, B            ; B-Register
                mov     B, A            ; B = A = XRAM[0xF68B] - ADC(EGO_1)
                mov     DPTR, #8089h
                clr     A
                movc    A, @A+DPTR
                xch     A, B            ; B = FLASH[0x8089]
                                        ; A = XRAM[0xF68B] - ADC(EGO_1)
                jc      code_2F7E       ; if (XRAM[0xF68B] < ADC(EGO_1)) jump ...
                mul     AB
                mov     A, B            ; A = HIGH(FLASH[0x8089] * (XRAM[0xF68B] - ADC(EGO_1)))
                cpl     A
                inc     A
                mov     B, A            ; B = - HIGH(FLASH[0x8089] * (XRAM[0xF68B] - ADC(EGO_1)))
                sjmp    code_2F81
; ---------------------------------------------------------------------------

code_2F7E:                              ; CODE XREF: power_on__ignition_key_turned_+BE1↑j
                cpl     A
                inc     A
                mul     AB              ; B = HIGH(B * (-A)) = HIGH(FLASH[0x8089] * (-(XRAM[0xF78B] - ADC(EGO_1))))

code_2F81:                              ; CODE XREF: power_on__ignition_key_turned_+BEA↑j
                mov     DPTR, #0F68Bh
                movx    A, @DPTR
                add     A, B            ; A = XRAM[0xF68B] + B
                mov     R0, A           ; R0 = A = XRAM[0xF68B] + B // processed EGO value
                mov     DPTR, #0F68Bh
                movx    @DPTR, A        ; XRAM[0xF68B] = R0 = A = XRAM[0xF68B] + B
                mov     DPTR, #808Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x808A]
                jb      RAM_2B.4, code_2F9D ; if (RAM[0x2B] & (1 << 4)) jump ...
                mov     DPTR, #808Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x808B]

code_2F9D:                              ; CODE XREF: power_on__ignition_key_turned_+C01↑j
                mov     A, R0           ; A = R0
                clr     C
                subb    A, B            ; A -= B
                cpl     C
                mov     RAM_2B.4, C     ; RAM[0x2B] |= (!(A < B)) << 4
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, ego2_sensor_start ; if (!(is there EGO sensor)) jump ...
                mov     DPTR, #8781h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x8781]
                mov     A, RAM_3A       ; A = RAM[0x3A] // adjusted coolant temperature
                cjne    A, B, code_2FB8 ; B-Register

code_2FB8:                              ; CODE XREF: power_on__ignition_key_turned_+C23↑j
                jc      ego2_sensor_start ; if (RAM[0x3A] < FLASH[0x8781]) jump ... // coolant temperature is too low
                mov     DPTR, #8087h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x8087]
                mov     A, R0           ; A = R0
                clr     C
                subb    A, B            ; A -= FLASH[0x8087]
                mov     RAM_22.6, C     ; if (R0 < FLASH[0x8087])
                                        ;   RAM[0x22] |= 1 << 6
                                        ; else
                                        ;   RAM[0x22] &= !(1 << 6)
                mov     DPTR, #8088h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8088]
                clr     C
                subb    A, R0           ; A -= R0
                mov     RAM_22.7, C     ; if (FLASH[0x8088] < R0)
EGO #1 SENSOR FINISH                    ;   RAM[0x22] |= 1 << 7
                                        ; else
                                        ;   RAM[0x22] &= !(1 << 7)
EGO #2 SENSOR START

ego2_sensor_start:                      ; CODE XREF: power_on__ignition_key_turned_+C17↑j
                                        ; power_on__ignition_key_turned_:code_2FB8↑j
                mov     B, #2           ; B-Register
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                clr     C
                subb    A, #0
                jnc     code_2FDC
                clr     A

code_2FDC:                              ; CODE XREF: power_on__ignition_key_turned_+C47↑j
                mov     B, #0FFh        ; B-Register
                mul     AB              ; B:A = 0xFF * ADC(EGO_2)
                rlc     A               ; if (B >= 0x40)
                                        ;   A = 0xFF // saturate
                                        ; else
                                        ;   A = HIGH(WORD(B:A) << 2)
                                        ;
                                        ; jump _2FF0
                xch     A, B            ; B-Register
                rlc     A
                jc      code_2FEE
                xch     A, B            ; B-Register
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jnc     code_2FF0

code_2FEE:                              ; CODE XREF: power_on__ignition_key_turned_+C52↑j
                mov     A, #0FFh

code_2FF0:                              ; CODE XREF: power_on__ignition_key_turned_+C5A↑j
                mov     B, A            ; B = A
                mov     DPTR, #0F68Ch
                movx    A, @DPTR        ; A = XRAM[0xF68C]
                clr     C
                subb    A, B            ; B-Register
                mov     B, A            ; B = A = XRAM[0xF68C] - ADC(EGO_2)
                mov     DPTR, #8089h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8089]
                xch     A, B            ; B = FLASH[0x8089]
                                        ; A = XRAM[0xF68C] - ADC(EGO_2)
                jc      code_300D       ; if (XRAM[0xF78C] < ADC(EGO_2)) jump ...
                mul     AB
                mov     A, B            ; A = HIGH(FLASH[0x8089] * (XRAM[0xF68C] - ADC(EGO_2)))
                cpl     A
                inc     A
                mov     B, A            ; B = - HIGH(FLASH[0x8089] * (XRAM[0xF68C] - ADC(EGO_2)))
                sjmp    code_3010
; ---------------------------------------------------------------------------

code_300D:                              ; CODE XREF: power_on__ignition_key_turned_+C70↑j
                cpl     A
                inc     A
                mul     AB              ; B:A = B * (-A) = FLASH[0x8089] * (-(XRAM[0xF78C] - ADC(EGO_2)))

code_3010:                              ; CODE XREF: power_on__ignition_key_turned_+C79↑j
                mov     DPTR, #0F68Ch
                movx    A, @DPTR
                add     A, B            ; A = XRAM[0xF68C] + B
                mov     R0, A           ; R0 = A = XRAM[0xF68C] + B // processed EGO value
                mov     DPTR, #0F68Ch   ; XRAM[0xF68C] = R0 = A = XRAM[0xF68C] + B
                movx    @DPTR, A
                mov     DPTR, #808Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x808A]
                jb      RAM_2B.5, code_302C ; if (RAM[0x2B] & (1 << 5)) jump ...
                mov     DPTR, #808Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x808B]

code_302C:                              ; CODE XREF: power_on__ignition_key_turned_+C90↑j
                mov     A, R0           ; A = R0
                clr     C
                subb    A, B            ; A -= B
                cpl     C
                mov     RAM_2B.5, C     ; RAM[0x2B] |= (!(A < B)) << 5
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, no_additional_ego_sensor ; if (!(is there EGO sensor)) jump ...
                mov     DPTR, #8740h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, no_additional_ego_sensor ; if (!(is there additional EGO sensor)) jump ...
                mov     DPTR, #8781h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x8781]
                mov     A, RAM_3A       ; A = RAM[0x3A] // adjusted coolant temperature
                cjne    A, B, code_304F ; B-Register

code_304F:                              ; CODE XREF: power_on__ignition_key_turned_+CBA↑j
                jc      no_additional_ego_sensor ; if (RAM[0x3A] < FLASH[0x8781]) jump ... // coolant temperature is too low
                mov     DPTR, #8087h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x8087]
                mov     A, R0           ; A = R0
                clr     C
                subb    A, B            ; A -= FLASH[0x8087]
                mov     RAM_23.0, C     ; if (R0 < FLASH[0x8087])
                                        ;   RAM[0x23] |= 1 << 0
                                        ; else
                                        ;   RAM[0x23] &= !(1 << 0)
                mov     DPTR, #8088h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8088]
                clr     C
                subb    A, R0           ; A -= R0
                mov     RAM_23.1, C     ; if (FLASH[0x8088] < R0)
EGO #2 SENSOR FINISH                    ;   RAM[0x23] |= 1 << 0
                                        ; else
                                        ;   RAM[0x23] &= !(1 << 0)

no_additional_ego_sensor:               ; CODE XREF: power_on__ignition_key_turned_+CA6↑j
                                        ; power_on__ignition_key_turned_+CAE↑j ...
                mov     DPTR, #8740h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, no_additional_ego_sensor_2 ; Accumulator
                jb      RAM_2B.4, code_3079 ; if (RAM[0x2B] & (1 << 4)) jump ...
                jb      RAM_2B.5, start_egr_blow? ; if (RAM[0x2B] & (1 << 5)) jump ...
                clr     RAM_2E.2        ; RAM[0x2E] &= ~(1 << 2)
                sjmp    start_egr_blow?
; ---------------------------------------------------------------------------

code_3079:                              ; CODE XREF: power_on__ignition_key_turned_+CDD↑j
                jnb     RAM_2B.5, start_egr_blow? ; if (RAM[0x2B] & (1 << 5)) jump ...
                setb    RAM_2E.2        ; RAM[0x2E] |= (1 << 2)
                sjmp    start_egr_blow?
; ---------------------------------------------------------------------------

no_additional_ego_sensor_2:             ; CODE XREF: power_on__ignition_key_turned_+CDA↑j
                mov     C, RAM_2B.4
                mov     RAM_2E.2, C     ; copy bit RAM[0x2B].4 to RAM[0x2E].2

start_egr_blow?:                        ; CODE XREF: power_on__ignition_key_turned_+CE0↑j
                                        ; power_on__ignition_key_turned_+CE5↑j ...
                mov     C, RAM_24.0     ; // XRAM[F6A7] (sum of scaled ADC Throttle Position) < low limit
                orl     C, RAM_24.1     ; // XRAM[F6A7] > upper limit
                jc      throttle_position_out_of_limits ; if ((RAM[0x24] & (1 << 0)) || (RAM[0x24] & (1 << 1))) jump ...
                                        ;
                                        ; if (Throttle position below low limit || Throttle position above upper limit) jump ...

Throttle Position Sensor start

                mov     B, #0Ch         ; Throttle position
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     DPTR, #0F6B5h
                movx    A, @DPTR
                mov     R2, A           ; R2 = A = XRAM[0xF6B5] // Low byte of adjusted ADC Throttle Position
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A           ; R3 = A = XRAM[0xF6B6] // High byte of adjusted ADC Throttle Position
R1:R0 = ADC_10bit(Throttle Position)
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      throttle_position_less_than_threshold ; if (Throttle Position < XRAM[0xF6B6]:XRAM[0xF6B5]) jump ...
                mov     DPTR, #807Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x807D]
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #807Eh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x807E]
                clr     C
                subb    A, R1           ; A = FLASH[0x807E] - R1
                jz      scaled_throttle_position_eq_flash_807e
                jnc     scaled_throttle_position_less_flash_807e
                add     A, R1
                mov     R1, A           ; R1 = FLASH[0x807E] - R1 + R1 = FLASH[0x807E]

scaled_throttle_position_eq_flash_807e: ; CODE XREF: power_on__ignition_key_turned_+D1C↑j
                mov     R0, #0
                sjmp    scaled_throttle_position_less_flash_807e
; ---------------------------------------------------------------------------

throttle_position_less_than_threshold:  ; CODE XREF: power_on__ignition_key_turned_+D09↑j
                mov     R0, #0
                mov     R1, #0

scaled_throttle_position_less_flash_807e:
                                        ; CODE XREF: power_on__ignition_key_turned_+D1E↑j
                                        ; power_on__ignition_key_turned_+D24↑j
                mov     DPTR, #8081h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = A = FLASH[0x8081]
                mov     R2, RAM_0
                mov     R3, RAM_1       ; R3:R2 = R1:R0
                mov     DPTR, #0F6AFh
                movx    A, @DPTR
                mov     R0, A           ; R0 = A = XRAM[0xF6AF]
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = A = XRAM[0xF6B0]
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                lcall   abs_word_by_msb ; INPUT:
                                        ;  - R1:R0 - input word
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0
                                        ;
                                        ; if (R1 & (1<<7)) return R1:R0
                                        ;
                                        ; R0 = 0 - R0
                                        ; R1 = 0 - R1
                                        ;
                mov     A, R1
                clr     C
                subb    A, B            ; A = R1 - B
                jnc     code_30E5       ; if  (R1 >= FLASH[0x8081]) jump ...
                mov     DPTR, #0F6ADh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A        ; XRAM[0xF6AE]:XRAM[0xF6AD] = R3:R2
                mov     RAM_40, R3      ; RAM[0x40] = R3

code_30E5:                              ; CODE XREF: power_on__ignition_key_turned_+D47↑j
                mov     DPTR, #0F6AFh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A        ; XRAM[0xF6B0]:XRAM[0xF6AF] = R3:R2
                sjmp    code_3124
; ---------------------------------------------------------------------------

throttle_position_out_of_limits:        ; CODE XREF: power_on__ignition_key_turned_+CF6↑j
                jb      RAM_2A.1, code_30FA ; if (RAM[0x2A] & (1 << 1)) jump ...
                mov     DPTR, #931Ch
                mov     A, RAM_4B
                movc    A, @A+DPTR      ; A = FLASH[0x931C + RAM[0x4B]]
                sjmp    code_30FB
; ---------------------------------------------------------------------------

code_30FA:                              ; CODE XREF: power_on__ignition_key_turned_:throttle_position_out_of_limits↑j
                clr     A               ; A = 0

code_30FB:                              ; CODE XREF: power_on__ignition_key_turned_+D66↑j
                mov     RAM_40, A       ; RAM[0x40] = A
                mov     DPTR, #0F6AEh
                movx    @DPTR, A        ; XRAM[0xF6AE] = A
                mov     DPTR, #0F6B0h
                movx    @DPTR, A        ; XRAM[0xF6B0] = A
                clr     A
                mov     DPTR, #0F6ADh
                movx    @DPTR, A
                mov     DPTR, #0F6AFh   ; XRAM[0xF6AD] = XRAM[0xF6AF] = 0
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0F6B5h
                movx    @DPTR, A
                mov     DPTR, #0F6B7h   ; XRAM[0xF6B5] = XRAM[0xF6B7] = 0
                movx    @DPTR, A
                mov     DPTR, #807Ch
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F6B6h
                movx    @DPTR, A
                mov     DPTR, #0F6B8h   ; XRAM[0xF6B6] = XRAM[0xF6B8] = FLASH[0x807C]
                movx    @DPTR, A


!!!!!!!! CONTINUE REVERSING HERE !!!!!!!!!







!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

CONTINUE HIGH-LEVEL FROM HERE

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!






code_3124:                              ; CODE XREF: power_on__ignition_key_turned_+D5B↑j
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A           ; R0 = XRAM[0xF6AD]
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A           ; R1 = XRAM[0xF6AE]
                mov     DPTR, #856Ch
                lcall   interpolate_table_value ; INPUT:
                                        ;  - R1 - index in table
                                        ;  - R0 - factor to scale difference
                                        ;  - DPTR - table ptr in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Acc - table value
                mov     RAM_43, A
                mov     B, A            ; B-Register
                add     A, #4
                swap    A
                rl      A
                anl     A, #1Fh
                mov     RAM_42, A
                mov     A, B            ; B-Register
                add     A, #8
                swap    A
                anl     A, #0Fh
                mov     RAM_41, A
                jnb     RAM_27.4, code_31A5
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6B1h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   code_55DE
                mov     DPTR, #0F6D6h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6DAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6CCh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     B, RAM_49       ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60BA
                mov     DPTR, #0F6E4h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     R0, #0
                mov     R1, #0
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6DCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                ljmp    code_3514
; ---------------------------------------------------------------------------

code_31A5:                              ; CODE XREF: power_on__ignition_key_turned_+DB5↑j
                mov     DPTR, #874Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, RAM_49       ; B-Register
                mul     AB
                mov     A, #4Bh ; 'K'
                clr     C
                subb    A, RAM_59
                add     A, B            ; B-Register
                mov     B, #4           ; B-Register
                mul     AB
                mov     R0, A
                mov     R1, B           ; B-Register
                mov     DPTR, #87BBh
                clr     A
                movc    A, @A+DPTR
                mov     B, #4           ; B-Register
                mul     AB
                add     A, R0
                mov     R0, A
                mov     A, B            ; B-Register
                addc    A, R1
                mov     R1, A
                clr     RAM_27.2

code_31CD:                              ; CODE XREF: power_on__ignition_key_turned_+E5E↓j
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, #78h ; 'x' ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     A, MD0          ; Multiplication/Division Register 0
                mov     B, MD1          ; Multiplication/Division Register 1
                mov     R2, MD2         ; Multiplication/Division Register 2
                mov     R2, MD3         ; Multiplication/Division Register 3
                mov     R2, MD4         ; Multiplication/Division Register 4
                mov     R2, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_31CD
                setb    RAM_27.2
                add     A, #80h
                jnc     code_31FB
                inc     B               ; B-Register

code_31FB:                              ; CODE XREF: power_on__ignition_key_turned_+E65↑j
                inc     B               ; B-Register
                jnz     code_3203
                mov     A, #0FFh
                dec     B               ; B-Register

code_3203:                              ; CODE XREF: power_on__ignition_key_turned_+E6B↑j
                mov     DPTR, #0F6ECh
                movx    @DPTR, A
                mov     A, B            ; B-Register
                mov     DPTR, #0F6EDh
                movx    @DPTR, A
                mov     DPTR, #0F6EEh
                movx    @DPTR, A
                mov     A, RAM_49
                jz      code_328B
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6B1h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     C, ACC.7        ; Accumulator
                mov     PSW.5, C        ; Program Status Word
                lcall   abs_word_by_msb ; INPUT:
                                        ;  - R1:R0 - input word
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0
                                        ;
                                        ; if (R1 & (1<<7)) return R1:R0
                                        ;
                                        ; R0 = 0 - R0
                                        ; R1 = 0 - R1
                                        ;
                mov     B, #25h ; '%'   ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     RAM_27.2

code_3237:                              ; CODE XREF: power_on__ignition_key_turned_+EC7↓j
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, RAM_49     ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Multiplication/Division Register 0
                mov     R3, MD1         ; Multiplication/Division Register 1
                mov     R4, MD2         ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_3237
                setb    RAM_27.2
                mov     A, R4
                jnz     code_3265
                mov     A, R3
                jnb     ACC.7, code_3269 ; Accumulator

code_3265:                              ; CODE XREF: power_on__ignition_key_turned_+ECD↑j
                mov     R2, #0FFh
                mov     R3, #7Fh

code_3269:                              ; CODE XREF: power_on__ignition_key_turned_+ED0↑j
                mov     R0, RAM_2
                mov     R1, RAM_3
                jnb     PSW.5, code_3273 ; Program Status Word
                lcall   code_6058

code_3273:                              ; CODE XREF: power_on__ignition_key_turned_+EDB↑j
                mov     DPTR, #0F6EAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #807Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   abs_word_by_msb ; INPUT:
                                        ;  - R1:R0 - input word
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0
                                        ;
                                        ; if (R1 & (1<<7)) return R1:R0
                                        ;
                                        ; R0 = 0 - R0
                                        ; R1 = 0 - R1
                                        ;
                mov     A, R1
                cjne    A, B, code_3289 ; B-Register

code_3289:                              ; CODE XREF: power_on__ignition_key_turned_+EF4↑j
                jnc     code_3294

code_328B:                              ; CODE XREF: power_on__ignition_key_turned_+E81↑j
                clr     A
                mov     DPTR, #0F6EAh
                movx    @DPTR, A
                mov     DPTR, #0F6EBh
                movx    @DPTR, A

code_3294:                              ; CODE XREF: power_on__ignition_key_turned_:code_3289↑j
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6B1h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     DPTR, #0F6B1h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                rrc     A
                mov     R1, A
                mov     A, R0
                rrc     A
                mov     R0, A
                mov     R2, RAM_0
                mov     R3, RAM_1
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     A, R3
                jb      ACC.7, code_32D3 ; Accumulator
                mov     A, R1
                cjne    A, #64h, code_32CB ; 'd'

code_32CB:                              ; CODE XREF: power_on__ignition_key_turned_+F36↑j
                jc      code_32D9
                mov     R0, #0
                mov     R1, #64h ; 'd'
                sjmp    code_32D9
; ---------------------------------------------------------------------------

code_32D3:                              ; CODE XREF: power_on__ignition_key_turned_+F32↑j
                jc      code_32D9
                mov     R0, #0
                mov     R1, #0

code_32D9:                              ; CODE XREF: power_on__ignition_key_turned_:code_32CB↑j
                                        ; power_on__ignition_key_turned_+F3F↑j ...
                mov     DPTR, #0F6E8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6EAh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R1
                mov     C, ACC.7        ; Accumulator
                rrc     A
                mov     R1, A
                mov     A, R0
                rrc     A
                mov     R0, A
                lcall   code_6058
                mov     R2, RAM_0
                mov     R3, RAM_1
                mov     DPTR, #0F6E8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     A, R3
                jb      ACC.7, code_3313 ; Accumulator
                mov     A, R1
                cjne    A, #64h, code_330B ; 'd'

code_330B:                              ; CODE XREF: power_on__ignition_key_turned_+F76↑j
                jc      code_3319
                mov     R0, #0
                mov     R1, #64h ; 'd'
                sjmp    code_3319
; ---------------------------------------------------------------------------

code_3313:                              ; CODE XREF: power_on__ignition_key_turned_+F72↑j
                jc      code_3319
                mov     R0, #0
                mov     R1, #0

code_3319:                              ; CODE XREF: power_on__ignition_key_turned_:code_330B↑j
                                        ; power_on__ignition_key_turned_+F7F↑j ...
                mov     DPTR, #0F6E8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, R1
                mov     DPTR, #0F6D4h
                movx    @DPTR, A
                mov     DPTR, #0F6D8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6E2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6E4h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6E6h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_3346:                              ; CODE XREF: power_on__ignition_key_turned_+114C↓j
                mov     DPTR, #0F6E8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_55DE
                mov     DPTR, #0F6EEh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                cjne    A, B, code_3366 ; B-Register
                mov     DPTR, #0F6D6h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_3366:                              ; CODE XREF: power_on__ignition_key_turned_+FC9↑j
                push    RAM_0
                push    RAM_1
                lcall   code_5649
                mov     R4, A
                mov     DPTR, #0F6E2h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_5649
                mov     R2, RAM_4
                mov     R4, B           ; B-Register
                pop     RAM_1
                pop     RAM_0
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     RAM_27.2

code_3388:                              ; CODE XREF: power_on__ignition_key_turned_+1019↓j
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R2         ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     DPL, MD0        ; Data Pointer, Low Byte
                mov     DPH, MD1        ; Data Pointer, High Byte
                mov     R3, MD2         ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_3388
                setb    RAM_27.2
                mov     A, R3
                jnz     code_33B8
                mov     A, DPH          ; Data Pointer, High Byte
                jnb     ACC.7, code_33BE ; Accumulator

code_33B8:                              ; CODE XREF: power_on__ignition_key_turned_+101F↑j
                mov     DPL, #0FFh      ; Data Pointer, Low Byte
                mov     DPH, #7Fh       ; Data Pointer, High Byte

code_33BE:                              ; CODE XREF: power_on__ignition_key_turned_+1023↑j
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     R1, DPH         ; Data Pointer, High Byte
                mov     DPTR, #0F6EEh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                cjne    A, B, code_33D7 ; B-Register
                mov     DPTR, #0F6E0h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_33D7:                              ; CODE XREF: power_on__ignition_key_turned_+103A↑j
                mov     DPTR, #0F6DEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #8745h
                clr     A
                movc    A, @A+DPTR
                jz      code_3434
                mov     B, RAM_49       ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60BA
                mov     DPTR, #0F6EEh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                cjne    A, B, code_3404 ; B-Register
                mov     DPTR, #0F6E4h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_3404:                              ; CODE XREF: power_on__ignition_key_turned_+1067↑j
                mov     DPTR, #0F6E6h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     DPTR, #0F6E6h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #8745h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   code_600D
                mov     DPTR, #0F6DEh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6DEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_3434:                              ; CODE XREF: power_on__ignition_key_turned_+1052↑j
                mov     DPTR, #0F6E2h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #0B5EEh
                jnc     code_3447
                mov     DPTR, #0B6EEh

code_3447:                              ; CODE XREF: power_on__ignition_key_turned_+10B0↑j
                mov     R2, RAM_4A
                mov     R3, RAM_4
                lcall   code_63CB
                mov     B, A            ; B-Register
                mov     DPTR, #0F6DEh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F6E2h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                lcall   code_600D
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                cjne    A, #1, code_3476
                mov     DPTR, #0F6ECh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                lcall   code_600D

code_3476:                              ; CODE XREF: power_on__ignition_key_turned_+10D8↑j
                mov     DPTR, #0F6E2h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F6E2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6EEh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                cjne    A, B, code_349E ; B-Register
                mov     DPTR, #0F6D8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_349E:                              ; CODE XREF: power_on__ignition_key_turned_+1101↑j
                mov     DPTR, #0F6EAh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     A, R2
                orl     A, R3
                jz      code_34D3
                mov     DPTR, #0F6E8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     A, R3
                jb      ACC.7, code_34C5 ; Accumulator
                mov     A, R1
                cjne    A, #64h, code_34BD ; 'd'

code_34BD:                              ; CODE XREF: power_on__ignition_key_turned_+1128↑j
                jc      code_34CB
                mov     R0, #0
                mov     R1, #64h ; 'd'
                sjmp    code_34CB
; ---------------------------------------------------------------------------

code_34C5:                              ; CODE XREF: power_on__ignition_key_turned_+1124↑j
                jc      code_34CB
                mov     R0, #0
                mov     R1, #0

code_34CB:                              ; CODE XREF: power_on__ignition_key_turned_:code_34BD↑j
                                        ; power_on__ignition_key_turned_+1131↑j ...
                mov     DPTR, #0F6E8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A

code_34D3:                              ; CODE XREF: power_on__ignition_key_turned_+1116↑j
                mov     DPTR, #0F6EDh
                movx    A, @DPTR
                dec     A
                mov     DPTR, #0F6EDh
                movx    @DPTR, A
                jz      code_34E1
                ljmp    code_3346
; ---------------------------------------------------------------------------

code_34E1:                              ; CODE XREF: power_on__ignition_key_turned_+114A↑j
                mov     DPTR, #0F6E9h
                movx    A, @DPTR
                mov     DPTR, #0F6D5h
                movx    @DPTR, A
                mov     DPTR, #0F6E2h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6DAh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6D8h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6DCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                setb    IEN0.0          ; Interrupt Enable Register 0

code_3514:                              ; CODE XREF: power_on__ignition_key_turned_+E10↑j
                mov     C, RAM_24.0
                orl     C, RAM_24.1
                orl     C, RAM_23.6
                orl     C, RAM_23.7
                jnc     code_3521
                ljmp    code_367D
; ---------------------------------------------------------------------------

code_3521:                              ; CODE XREF: power_on__ignition_key_turned_+118A↑j
                jnb     RAM_28.1, code_352D
                mov     DPTR, #0F6F1h
                movx    A, @DPTR
                add     A, #1
                jc      code_352D
                movx    @DPTR, A

code_352D:                              ; CODE XREF: power_on__ignition_key_turned_:code_3521↑j
                                        ; power_on__ignition_key_turned_+1198↑j
                mov     R2, RAM_4C
                mov     R4, RAM_42
                lcall   code_366E
                jnz     code_3539
                ljmp    code_367D
; ---------------------------------------------------------------------------

code_3539:                              ; CODE XREF: power_on__ignition_key_turned_+11A2↑j
                jnb     ACC.7, code_353F ; Accumulator
                ljmp    code_367D
; ---------------------------------------------------------------------------

code_353F:                              ; CODE XREF: power_on__ignition_key_turned_:code_3539↑j
                mov     R4, A
                mov     DPTR, #0F6F6h
                movx    A, @DPTR
                clr     C
                subb    A, R4
                jz      code_3550
                mov     A, R4
                mov     DPTR, #0F6F6h
                movx    @DPTR, A
                ljmp    code_367D
; ---------------------------------------------------------------------------

code_3550:                              ; CODE XREF: power_on__ignition_key_turned_+11B4↑j
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6D8h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                lcall   code_6076
                clr     RAM_27.2

code_3561:                              ; CODE XREF: power_on__ignition_key_turned_+11FB↓j
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F6CCh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, #0         ; Multiplication/Division Register 1
                mov     MD2, R2         ; Multiplication/Division Register 2
                mov     MD3, R3         ; Multiplication/Division Register 3
                mov     MD4, R0         ; Multiplication/Division Register 4
                mov     MD5, R1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     A, MD0          ; Multiplication/Division Register 0
                mov     R2, MD1         ; Multiplication/Division Register 1
                mov     R3, MD2         ; Multiplication/Division Register 2
                mov     R3, MD3         ; Multiplication/Division Register 3
                mov     R3, MD4         ; Multiplication/Division Register 4
                mov     R3, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_3561
                setb    RAM_27.2
                jnb     ACC.7, code_3596 ; Accumulator
                inc     R2

code_3596:                              ; CODE XREF: power_on__ignition_key_turned_+1200↑j
                mov     DPTR, #0F6F4h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     A, R0
                add     A, R2
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                mov     DPTR, #0F6F4h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6C7h
                movx    A, @DPTR
                jnz     code_35BE
                mov     A, R2
                mov     DPTR, #0F6F2h
                movx    @DPTR, A
                mov     DPTR, #0F6F3h
                movx    @DPTR, A
                sjmp    code_35F6
; ---------------------------------------------------------------------------

code_35BE:                              ; CODE XREF: power_on__ignition_key_turned_+121F↑j
                mov     DPTR, #0F6F2h
                movx    A, @DPTR
                clr     C
                subb    A, R2
                jc      code_35CD
                mov     A, R2
                mov     DPTR, #0F6F2h
                movx    @DPTR, A
                sjmp    code_35DA
; ---------------------------------------------------------------------------

code_35CD:                              ; CODE XREF: power_on__ignition_key_turned_+1232↑j
                mov     DPTR, #0F6F3h
                movx    A, @DPTR
                clr     C
                subb    A, R2
                jnc     code_35DA
                mov     A, R2
                mov     DPTR, #0F6F3h
                movx    @DPTR, A

code_35DA:                              ; CODE XREF: power_on__ignition_key_turned_+1239↑j
                                        ; power_on__ignition_key_turned_+1241↑j
                mov     DPTR, #0F6F2h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6F3h
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                mov     B, A            ; B-Register
                mov     DPTR, #8747h
                clr     A
                movc    A, @A+DPTR
                clr     C
                subb    A, B            ; B-Register
                jnc     code_35F6
                ljmp    code_367D
; ---------------------------------------------------------------------------

code_35F6:                              ; CODE XREF: power_on__ignition_key_turned_+122A↑j
                                        ; power_on__ignition_key_turned_+125F↑j
                mov     DPTR, #8746h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6C7h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, B, code_3608 ; B-Register
                sjmp    code_360B
; ---------------------------------------------------------------------------

code_3608:                              ; CODE XREF: power_on__ignition_key_turned_+1271↑j
                ljmp    code_3692
; ---------------------------------------------------------------------------

code_360B:                              ; CODE XREF: power_on__ignition_key_turned_+1274↑j
                clr     RAM_27.2

code_360D:                              ; CODE XREF: power_on__ignition_key_turned_+1291↓j
                mov     MD0, R0         ; Multiplication/Division Register 0
                mov     MD1, R1         ; Multiplication/Division Register 1
                mov     MD4, B          ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Multiplication/Division Register 0
                mov     A, MD1          ; Multiplication/Division Register 1
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_360D
                setb    RAM_27.2
                mov     DPTR, #0F94Dh
                mov     A, R4
                dec     A
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F6F1h
                movx    A, @DPTR
                cjne    A, #0Ah, code_3640

code_3640:                              ; CODE XREF: power_on__ignition_key_turned_+12AB↑j
                jc      code_367D
                clr     A
                movx    @DPTR, A
                mov     R0, #10h
                mov     R1, #0
                mov     B, #20h ; ' '   ; B-Register
                mov     DPTR, #0F94Dh

code_364E:                              ; CODE XREF: power_on__ignition_key_turned_+12C4↓j
                movx    A, @DPTR
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                inc     DPTR
                djnz    B, code_364E    ; B-Register
                lcall   shl_word_3_times ; INPUT:
                                        ;   R1:R0
                                        ; OUTPUT:
                                        ;   R1:R0 = (R1:R0) << 3, or FF:FF (if overflow happens)
                                        ;
                mov     A, R1
                mov     DPTR, #0F600h
                movx    @DPTR, A
                mov     B, #20h ; ' '   ; B-Register
                mov     DPTR, #0F94Dh

code_3667:                              ; CODE XREF: power_on__ignition_key_turned_+12D7↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_3667    ; B-Register
                sjmp    code_367D
; End of function power_on__ignition_key_turned_


; =============== S U B R O U T I N E =======================================


code_366E:                              ; CODE XREF: IE0_0+422↑p
                                        ; IE0_0+43A↑p ...
                mov     DPTR, #902Ch
                mov     A, R4
                jnb     ACC.4, code_3679 ; Accumulator
                cpl     ACC.4           ; Accumulator
                inc     DPH             ; Data Pointer, High Byte

code_3679:                              ; CODE XREF: code_366E+4↑j
                swap    A
                add     A, R2
                movc    A, @A+DPTR
                ret
; End of function code_366E

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_367D:                              ; CODE XREF: power_on__ignition_key_turned_+118C↑j
                                        ; power_on__ignition_key_turned_+11A4↑j ...
                clr     A
                mov     DPTR, #0F6C7h
                movx    @DPTR, A
                mov     DPTR, #8746h
                clr     A
                movc    A, @A+DPTR
                clr     C
                rrc     A
                mov     DPTR, #0F6F4h
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0F6F5h
                movx    @DPTR, A

code_3692:                              ; CODE XREF: power_on__ignition_key_turned_:code_3608↑j
                clr     RAM_28.1
                clr     RAM_28.2
                mov     DPTR, #0F675h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                mov     DPTR, #0F677h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, #32h, code_36CD ; '2'
                clr     A
                movx    @DPTR, A
                setb    RAM_28.1
                mov     DPTR, #0F67Ah
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                jb      RAM_2A.0, code_36BA
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                inc     A
                jz      code_36BA
                movx    @DPTR, A

code_36BA:                              ; CODE XREF: power_on__ignition_key_turned_+131D↑j
                                        ; power_on__ignition_key_turned_+1325↑j
                mov     DPTR, #0F678h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, #3Ch, code_36CD ; '<'
                clr     A
                movx    @DPTR, A
                setb    RAM_28.2
                mov     DPTR, #0F67Bh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A

code_36CD:                              ; CODE XREF: power_on__ignition_key_turned_+1310↑j
                                        ; power_on__ignition_key_turned_+132E↑j
                jnb     RAM_28.1, code_36D8
                mov     DPTR, #0F679h
                movx    A, @DPTR
                inc     A
                jz      code_36D8
                movx    @DPTR, A

code_36D8:                              ; CODE XREF: power_on__ignition_key_turned_:code_36CD↑j
                                        ; power_on__ignition_key_turned_+1343↑j
                jb      RAM_28.5, code_3737
                jnb     RAM_28.4, code_370B
                sjmp    code_3701
; ---------------------------------------------------------------------------

code_36E0:                              ; CODE XREF: power_on__ignition_key_turned_+13A8↓j
                mov     DPTR, #8740h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.5, code_36ED ; Accumulator
                clr     RAM_28.7
                orl     RAM_7E, #40h

code_36ED:                              ; CODE XREF: power_on__ignition_key_turned_+1353↑j
                clr     RAM_28.3
                lcall   clear_xram_f69e_0c_bytes
                lcall   clear_xram_f69a_f69b
                lcall   inputs_part1    ; Select operating mode.
                                        ;
                                        ; A/D Convert and prepare for calculus:
                                        ;  - Coolant temperature
                                        ;  - Intake Air Temperature
                                        ;  - CO Potentiometer
                                        ;  - Ignition Voltage
                clr     A
                mov     DPTR, #0F679h
                movx    @DPTR, A
                mov     DPTR, #0F6BDh
                movx    @DPTR, A

code_3701:                              ; CODE XREF: power_on__ignition_key_turned_+134C↑j
                clr     A
                mov     DPTR, #0F7BDh
                movx    @DPTR, A
                clr     RAM_28.5
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_370B:                              ; CODE XREF: power_on__ignition_key_turned_+1349↑j
                mov     DPTR, #8094h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7BDh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3720
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_3720:                              ; CODE XREF: power_on__ignition_key_turned_+1389↑j
                clr     RAM_2C.3
                anl     RAM_7E, #0F7h
                mov     A, #0FFh
                mov     DPTR, #0F6BDh
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0F7BDh
                movx    @DPTR, A
                setb    RAM_28.5
                setb    RAM_2E.4
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_3737:                              ; CODE XREF: power_on__ignition_key_turned_:code_36D8↑j
                jnb     RAM_28.4, code_373C
                sjmp    code_36E0
; ---------------------------------------------------------------------------

code_373C:                              ; CODE XREF: power_on__ignition_key_turned_:code_3737↑j
                mov     DPTR, #8740h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.5, code_3747 ; Accumulator
                jb      RAM_28.7, code_37B5

code_3747:                              ; CODE XREF: power_on__ignition_key_turned_+13AF↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.0, code_377D ; Accumulator
                jnb     RAM_2E.4, code_377D
                mov     A, RAM_7E
                anl     A, #2
                jz      code_3773
                jb      RAM_28.1, code_375E
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_375E:                              ; CODE XREF: power_on__ignition_key_turned_+13C6↑j
                mov     DPTR, #87A0h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7BDh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3773
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_3773:                              ; CODE XREF: power_on__ignition_key_turned_+13C4↑j
                                        ; power_on__ignition_key_turned_+13DC↑j
                anl     RAM_7E, #0FDh
                clr     A
                mov     DPTR, #0F7BDh
                movx    @DPTR, A
                clr     RAM_2E.4

code_377D:                              ; CODE XREF: power_on__ignition_key_turned_+13BA↑j
                                        ; power_on__ignition_key_turned_+13BD↑j
                mov     DPTR, #8095h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7BDh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3792
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_3792:                              ; CODE XREF: power_on__ignition_key_turned_+13FB↑j
                mov     DPTR, #8740h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.5, code_3816 ; Accumulator
                mov     DPTR, #8099h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jc      code_3811
                jnb     RAM_28.6, code_3811
                clr     A
                mov     DPTR, #0F7BDh
                movx    @DPTR, A
                setb    RAM_28.7
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_37B5:                              ; CODE XREF: power_on__ignition_key_turned_+13B2↑j
                jb      RAM_2A.0, code_37DA
                mov     A, RAM_7E
                mov     C, ACC.6        ; Accumulator
                cpl     C
                jc      code_3811
                jb      RAM_28.1, code_37C5
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_37C5:                              ; CODE XREF: power_on__ignition_key_turned_+142D↑j
                mov     DPTR, #8097h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7BDh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3811
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_37DA:                              ; CODE XREF: power_on__ignition_key_turned_:code_37B5↑j
                mov     A, RAM_7E
                mov     C, ACC.6        ; Accumulator
                cpl     C
                jc      code_37EC
                clr     A
                mov     DPTR, #0F7BDh
                movx    @DPTR, A
                anl     RAM_7E, #0BFh
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_37EC:                              ; CODE XREF: power_on__ignition_key_turned_+144D↑j
                mov     DPTR, #8098h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7BDh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3811
                mov     DPTR, #809Ch
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                mov     B, #0Bh         ; B-Register
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                clr     C
                subb    A, R1
                jc      code_3811
                ljmp    code_3889
; ---------------------------------------------------------------------------

code_3811:                              ; CODE XREF: power_on__ignition_key_turned_+1414↑j
                                        ; power_on__ignition_key_turned_+1416↑j ...
                clr     RAM_28.7
                orl     RAM_7E, #40h

code_3816:                              ; CODE XREF: power_on__ignition_key_turned_+1405↑j
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     WDTREL, #80h    ; Watchdog Timer Reload Register
                setb    IEN0.6          ; Interrupt Enable Register 0
                setb    IEN1.6          ; Interrupt Enable Register 1
                lcall   initial_sum_xram_fx00_to_f657 ; 1 + sum(XRAM[0xFx00..0xF657]).
                                        ; x = 4, 5, 6 depending on data in FLASH[0x873F], FLASH[0x8743]
                                        ; x = 4 for current flash
                                        ;
                                        ; INPUT - none
                                        ; OUTPUT - R1:R0 = 1 + sum(XRAM[0xFx00..0xF657]), R0 - low, R1 - high
                mov     DPTR, #0F658h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #8096h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                mov     B, #9           ; B-Register
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                clr     C
                subb    A, #0
                jnc     code_383C
                clr     A

code_383C:                              ; CODE XREF: power_on__ignition_key_turned_+14A7↑j
                mov     B, #75h ; 'u'   ; B-Register
                mul     AB
                rlc     A
                mov     A, B            ; B-Register
                rlc     A
                jnc     code_3848
                mov     A, #0FFh

code_3848:                              ; CODE XREF: power_on__ignition_key_turned_+14B2↑j
                cjne    A, RAM_1, code_384B

code_384B:                              ; CODE XREF: power_on__ignition_key_turned_:code_3848↑j
                cpl     C
                jnc     code_3851
                ljmp    power_on__ignition_key_turned_
; ---------------------------------------------------------------------------

code_3851:                              ; CODE XREF: power_on__ignition_key_turned_+14BA↑j
                mov     CCEN, #0        ; Compare/Capture Enable Register
                mov     CC4EN, #0       ; Compare/Capture 4 Enable Register
                anl     RAM_7E, #0FBh
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #7Eh ; '~'
                anl     P6, #0BFh       ; Port 6 (PDIR=0)

code_3862:                              ; CODE XREF: power_on__ignition_key_turned_+14E4↓j
                mov     A, @R0
                inc     R0
                mov     @R0, A
                mov     B, #8           ; B-Register

code_3868:                              ; CODE XREF: power_on__ignition_key_turned_+14DF↓j
                rrc     A
                mov     P5.5, C         ; Port 5 (PDIR=0)
                setb    P5.6            ; Port 5 (PDIR=0)
                mov     C, P5.7         ; Port 5 (PDIR=0)
                clr     P5.6            ; Port 5 (PDIR=0)
                djnz    B, code_3868    ; B-Register
                rrc     A
                inc     R0
                cjne    R0, #80h, code_3862
                orl     P6, #40h        ; Port 6 (PDIR=0)
                pop     ACC             ; Accumulator
                mov     R0, A
                mov     WDTREL, #80h    ; Watchdog Timer Reload Register
                setb    IEN0.6          ; Interrupt Enable Register 0
                setb    IEN1.6          ; Interrupt Enable Register 1
                orl     P6, #1          ; Port 6 (PDIR=0)

code_3889:                              ; CODE XREF: power_on__ignition_key_turned_+1376↑j
                                        ; power_on__ignition_key_turned_+138B↑j ...
                jb      RAM_28.5, code_38DF
                jb      RAM_29.5, code_38D9
                jb      RAM_2A.0, code_3895
                ljmp    code_39BC
; ---------------------------------------------------------------------------

code_3895:                              ; CODE XREF: power_on__ignition_key_turned_+14FD↑j
                anl     CMEN, #0FEh     ; Compare Enable Register (RMAP=0)
                setb    P4.0            ; Port 4 (PDIR=0)
                anl     CMEN, #0FBh     ; Compare Enable Register (RMAP=0)
                setb    P4.2            ; Port 4 (PDIR=0)
                anl     CMEN, #0F7h     ; Compare Enable Register (RMAP=0)
                setb    P4.3            ; Port 4 (PDIR=0)
                anl     CMEN, #0FDh     ; Compare Enable Register (RMAP=0)
                setb    P4.1            ; Port 4 (PDIR=0)
                mov     DPTR, #0F6BDh
                movx    A, @DPTR
                jnb     RAM_28.1, code_38B4
                inc     A
                jnz     code_38B4
                dec     A

code_38B4:                              ; CODE XREF: power_on__ignition_key_turned_+151B↑j
                                        ; power_on__ignition_key_turned_+151F↑j
                movx    @DPTR, A
                mov     DPTR, #8754h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BDh
                movx    A, @DPTR
                cjne    A, B, code_38C3 ; B-Register

code_38C3:                              ; CODE XREF: power_on__ignition_key_turned_+152E↑j
                mov     A, RAM_71
                jb      ACC.3, code_38CA ; Accumulator
                mov     RAM_2C.3, C

code_38CA:                              ; CODE XREF: power_on__ignition_key_turned_+1533↑j
                mov     C, RAM_2C.3
                jnc     code_38D3
                orl     RAM_7E, #8
                sjmp    code_38D6
; ---------------------------------------------------------------------------

code_38D3:                              ; CODE XREF: power_on__ignition_key_turned_+153A↑j
                anl     RAM_7E, #0F7h

code_38D6:                              ; CODE XREF: power_on__ignition_key_turned_+153F↑j
                ljmp    code_396E
; ---------------------------------------------------------------------------

code_38D9:                              ; CODE XREF: power_on__ignition_key_turned_+14FA↑j
                jb      RAM_2A.0, code_38DF
                ljmp    code_39FC
; ---------------------------------------------------------------------------

code_38DF:                              ; CODE XREF: power_on__ignition_key_turned_:code_3889↑j
                                        ; power_on__ignition_key_turned_:code_38D9↑j
                clr     RAM_23.6
                clr     RAM_23.7
                anl     CC4EN, #0F8h    ; Compare/Capture 4 Enable Register
                clr     RAM_29.5
                clr     RAM_25.1
                mov     RAM_30, #0
                setb    RAM_2A.1
                setb    RAM_29.3
                setb    RAM_2B.7
                mov     RAM_6F, #0Ch
                mov     RAM_70, #0
                mov     A, RAM_72
                jb      ACC.1, code_3905 ; Accumulator
                mov     DPTR, #8753h
                clr     A
                movc    A, @A+DPTR
                mov     RAM_59, A

code_3905:                              ; CODE XREF: power_on__ignition_key_turned_+1569↑j
                mov     R0, #0
                mov     R1, #0
                mov     DPTR, #0F6CCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6CEh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6D8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6DCh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F6E4h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     P5.4            ; Port 5 (PDIR=0)
                clr     A
                mov     DPTR, #0F77Eh
                movx    @DPTR, A
                mov     RAM_48, A
                mov     DPTR, #0F76Ch
                movx    @DPTR, A
                mov     DPTR, #0F76Dh
                movx    @DPTR, A
                mov     DPTR, #0F703h
                movx    @DPTR, A
                mov     DPTR, #0F704h
                movx    @DPTR, A
                mov     DPTR, #0F76Ah
                movx    @DPTR, A
                mov     DPTR, #0F76Bh
                movx    @DPTR, A
                mov     DPTR, #0F6D0h
                movx    @DPTR, A
                mov     DPTR, #0F6D1h
                movx    @DPTR, A
                mov     A, RAM_71
                jb      ACC.7, code_3968 ; Accumulator
                clr     A
                mov     DPTR, #0F67Dh
                movx    @DPTR, A
                mov     DPTR, #0F67Eh
                movx    @DPTR, A

code_3968:                              ; CODE XREF: power_on__ignition_key_turned_+15CA↑j
                lcall   code_21EA
                lcall   init_flags_and_values

code_396E:                              ; CODE XREF: power_on__ignition_key_turned_:code_38D6↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, code_397A ; Accumulator
                setb    RAM_2D.4
                setb    RAM_29.6

code_397A:                              ; CODE XREF: power_on__ignition_key_turned_+15E1↑j
                mov     A, RAM_3A
                mov     DPTR, #0F683h
                movx    @DPTR, A
                mov     A, RAM_72
                jb      ACC.2, code_3993 ; Accumulator
                mov     DPTR, #0F6BAh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0A4D1h
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                mov     RAM_5A, A

code_3993:                              ; CODE XREF: power_on__ignition_key_turned_+15F0↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_39B0 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_39B0 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_39B0 ; Accumulator
                mov     DPTR, #0A2FDh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

code_39B0:                              ; CODE XREF: power_on__ignition_key_turned_+1606↑j
                                        ; power_on__ignition_key_turned_+160B↑j ...
                mov     DPTR, #8757h
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F6FDh
                movx    @DPTR, A
                ljmp    code_4474
; ---------------------------------------------------------------------------

code_39BC:                              ; CODE XREF: power_on__ignition_key_turned_+1500↑j
                orl     CC4EN, #5       ; Compare/Capture 4 Enable Register
                mov     SETMSK, #0      ; Compare Set Mask Register
                mov     CLRMSK, #0      ; Compare Clear Mask Register
                setb    P5.1            ; Port 5 (PDIR=0)
                setb    P5.0            ; Port 5 (PDIR=0)
                orl     CC4EN, #0F8h    ; Compare/Capture 4 Enable Register
                mov     A, RAM_71
                jb      ACC.3, code_39D3 ; Accumulator
                setb    RAM_2C.3

code_39D3:                              ; CODE XREF: power_on__ignition_key_turned_+163C↑j
                mov     C, RAM_2C.3
                jnc     code_39DC
                orl     RAM_7E, #8
                sjmp    code_39DF
; ---------------------------------------------------------------------------

code_39DC:                              ; CODE XREF: power_on__ignition_key_turned_+1643↑j
                anl     RAM_7E, #0F7h

code_39DF:                              ; CODE XREF: power_on__ignition_key_turned_+1648↑j
                clr     A
                mov     DPTR, #0F6C4h
                movx    @DPTR, A
                mov     DPTR, #0F6C5h
                movx    @DPTR, A
                mov     DPTR, #0F6C2h
                movx    @DPTR, A
                mov     DPTR, #0F6C3h
                movx    @DPTR, A
                mov     DPTR, #0F6BEh
                movx    @DPTR, A
                mov     DPTR, #0F6C0h
                movx    @DPTR, A
                mov     DPTR, #0F6C1h
                movx    @DPTR, A

code_39FC:                              ; CODE XREF: power_on__ignition_key_turned_+154A↑j
                mov     DPTR, #0F6BEh
                movx    A, @DPTR
                inc     A
                jz      code_3A04
                movx    @DPTR, A

code_3A04:                              ; CODE XREF: power_on__ignition_key_turned_+166F↑j
                mov     DPTR, #8082h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BEh
                movx    A, @DPTR
                cjne    A, B, code_3A12 ; B-Register

code_3A12:                              ; CODE XREF: power_on__ignition_key_turned_+167D↑j
                jc      code_3A16
                setb    RAM_25.1

code_3A16:                              ; CODE XREF: power_on__ignition_key_turned_:code_3A12↑j
                jnb     RAM_2A.1, code_3A51
                mov     DPTR, #0F6C0h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, #5, code_3A2C
                clr     A
                movx    @DPTR, A
                mov     DPTR, #0F6C1h
                movx    A, @DPTR
                inc     A
                jz      code_3A2C
                movx    @DPTR, A

code_3A2C:                              ; CODE XREF: power_on__ignition_key_turned_+168D↑j
                                        ; power_on__ignition_key_turned_+1697↑j
                mov     DPTR, #0B8D3h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3A4D
                mov     DPTR, #8748h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_2B.7, C
                sjmp    code_3A84
; ---------------------------------------------------------------------------

code_3A4D:                              ; CODE XREF: power_on__ignition_key_turned_+16A9↑j
                clr     RAM_2A.1
                clr     RAM_2B.7

code_3A51:                              ; CODE XREF: power_on__ignition_key_turned_:code_3A16↑j
                ljmp    code_3ABE
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

; =============== S U B R O U T I N E =======================================


init_flags_and_values:                  ; CODE XREF: power_on__ignition_key_turned_+46C↑p
                                        ; power_on__ignition_key_turned_+15D9↑p ...
                clr     RAM_2A.6
                clr     RAM_2A.7
                clr     RAM_2A.2        ; RAM[0x2A] &= ~((1 << 6) | (1 << 7) | (1 << 2)
                mov     RAM_64, #0      ; RAM[0x64] = 0
                mov     A, RAM_73       ; A = RAM[0x73]
                jb      ACC.2, code_3A67 ; if (RAM[0x73] & (1 << 2)) jump ...
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A        ; XRAM[0xF7A3] = 0

code_3A67:                              ; CODE XREF: init_flags_and_values+B↑j
                mov     A, RAM_73       ; A = RAM[0x73]
                jb      ACC.1, code_3A73 ; if (RAM[0x73] & (1 << 1)) jump ...
                clr     RAM_2E.5        ; RAM[0x2E] &= ~(1 << 5)
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A        ; XRAM[0xF7A5] = 0

code_3A73:                              ; CODE XREF: init_flags_and_values+15↑j
                mov     DPTR, #8755h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8755]
                mov     B, A            ; B = FLASH[0x8755]
                clr     A
                mov     DPTR, #0F6F9h
                movx    @DPTR, A        ; XRAM[0xF6F9] = 0
                inc     DPTR
                mov     A, B            ; B-Register
                movx    @DPTR, A        ; XRAM[0xF6FA] = FLASH[0x8755]
                ret
; End of function init_flags_and_values

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_3A84:                              ; CODE XREF: power_on__ignition_key_turned_+16B9↑j
                mov     A, RAM_72
                jb      ACC.2, code_3A97 ; Accumulator
                mov     DPTR, #0F6BAh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0A4D1h
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                mov     RAM_5A, A

code_3A97:                              ; CODE XREF: power_on__ignition_key_turned_+16F4↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3AB4 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_3AB4 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_3AB4 ; Accumulator
                mov     DPTR, #0A2FDh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

code_3AB4:                              ; CODE XREF: power_on__ignition_key_turned_+170A↑j
                                        ; power_on__ignition_key_turned_+170F↑j ...
                lcall   init_flags_and_values
                setb    RAM_29.4
                setb    RAM_29.5
                ljmp    code_4358
; ---------------------------------------------------------------------------

code_3ABE:                              ; CODE XREF: power_on__ignition_key_turned_:code_3A51↑j
                mov     A, RAM_75
                jnb     ACC.2, code_3AC6 ; Accumulator
                clr     C
                sjmp    code_3ADD
; ---------------------------------------------------------------------------

code_3AC6:                              ; CODE XREF: power_on__ignition_key_turned_+172E↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jb      ACC.2, code_3AD1 ; Accumulator
                clr     C
                sjmp    code_3ADD
; ---------------------------------------------------------------------------

code_3AD1:                              ; CODE XREF: power_on__ignition_key_turned_+1739↑j
                mov     DPTR, #0A7F9h
                mov     A, RAM_53
                movc    A, @A+DPTR
                mov     C, RAM_2A.7
                anl     C, ACC.1        ; Accumulator
                orl     C, ACC.0        ; Accumulator

code_3ADD:                              ; CODE XREF: power_on__ignition_key_turned_+1732↑j
                                        ; power_on__ignition_key_turned_+173D↑j
                mov     RAM_2A.7, C
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.3, code_3AEE ; Accumulator
                ljmp    code_3B32
; ---------------------------------------------------------------------------

code_3AEA:                              ; CODE XREF: power_on__ignition_key_turned_+176D↓j
                clr     RAM_2E.5
                sjmp    code_3B24
; ---------------------------------------------------------------------------

code_3AEE:                              ; CODE XREF: power_on__ignition_key_turned_+1752↑j
                mov     A, RAM_73
                jb      ACC.1, code_3B32 ; Accumulator
                mov     DPTR, #8782h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jc      code_3AEA
                mov     DPTR, #8783h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6ACh
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jc      code_3B16
                jz      code_3B16
                jb      RAM_2E.5, code_3B24

code_3B16:                              ; CODE XREF: power_on__ignition_key_turned_+177D↑j
                                        ; power_on__ignition_key_turned_+177F↑j
                mov     DPTR, #0A7F9h
                mov     A, RAM_53
                movc    A, @A+DPTR
                mov     C, RAM_2E.5
                anl     C, ACC.5        ; Accumulator
                orl     C, ACC.4        ; Accumulator
                mov     RAM_2E.5, C

code_3B24:                              ; CODE XREF: power_on__ignition_key_turned_+175A↑j
                                        ; power_on__ignition_key_turned_+1781↑j
                clr     A
                jnb     RAM_2E.5, code_3B2E
                mov     DPTR, #0A4F9h
                mov     A, RAM_53
                movc    A, @A+DPTR

code_3B2E:                              ; CODE XREF: power_on__ignition_key_turned_+1793↑j
                mov     DPTR, #0F7A5h
                movx    @DPTR, A

code_3B32:                              ; CODE XREF: power_on__ignition_key_turned_+1755↑j
                                        ; power_on__ignition_key_turned_+175E↑j
                mov     DPTR, #945Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     DPTR, #0F6F7h
                movx    @DPTR, A
                mov     DPTR, #955Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     R1, A
                mov     DPTR, #0F6F7h
                movx    A, @DPTR
                mov     R0, A
                mov     DPTR, #9898h
                mov     A, RAM_3D
                lcall   code_6324
                mov     R2, A
                lcall   code_65FD
                mov     R0, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, code_3B79 ; Accumulator
                mov     DPTR, #985Ah
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #98DAh
                mov     A, RAM_3E
                lcall   code_6324
                mov     R2, A
                lcall   code_663A
                mov     R0, A

code_3B79:                              ; CODE XREF: power_on__ignition_key_turned_+17D0↑j
                mov     RAM_57, R0
                mov     DPTR, #0F6F7h
                movx    @DPTR, A
                mov     A, RAM_72
                jb      ACC.2, code_3BCC ; Accumulator
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                mov     C, ACC.3        ; Accumulator
                mov     DPTR, #9E1Ch
                jnc     code_3B93
                mov     DPTR, #9F1Ch

code_3B93:                              ; CODE XREF: power_on__ignition_key_turned_+17FC↑j
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CF
                mov     R0, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, code_3BB7 ; Accumulator
                mov     DPTR, #0A13Bh
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A1B9h
                mov     A, RAM_3E
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     R0, A

code_3BB7:                              ; CODE XREF: power_on__ignition_key_turned_+180E↑j
                mov     DPTR, #0A11Ch
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A198h
                mov     A, RAM_3D
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     RAM_5A, A

code_3BCC:                              ; CODE XREF: power_on__ignition_key_turned_+17EF↑j
                mov     A, RAM_72
                jb      ACC.1, code_3BF0 ; Accumulator
                mov     DPTR, #87CCh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                cjne    A, B, code_3BDF ; B-Register

code_3BDF:                              ; CODE XREF: power_on__ignition_key_turned_+184A↑j
                jc      code_3BE9
                mov     DPTR, #921Ch
                mov     A, RAM_53
                movc    A, @A+DPTR
                sjmp    code_3BEE
; ---------------------------------------------------------------------------

code_3BE9:                              ; CODE XREF: power_on__ignition_key_turned_:code_3BDF↑j
                mov     DPTR, #87CBh
                clr     A
                movc    A, @A+DPTR

code_3BEE:                              ; CODE XREF: power_on__ignition_key_turned_+1855↑j
                mov     RAM_59, A

code_3BF0:                              ; CODE XREF: power_on__ignition_key_turned_+183C↑j
                mov     A, RAM_72
                jb      ACC.6, code_3C52 ; Accumulator
                mov     DPTR, #0A21Ch
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R4, A
                mov     R0, #0
                mov     DPTR, #0F683h
                movx    A, @DPTR
                mov     R1, A
                lcall   adjust_temperature ; INPUT
                                        ;   R1:R0 - adjusted table value for A/D Converted value
                                        ;
                                        ; OUTPUT
                                        ;   X = (R1:R0 + 00:50) / 00:A0
                                        ;   X is Quotient. Reminder is not used.
                                        ;   if (X > 0xFF), 0xFF returned
                                        ;   if (R1:R0 + 00:50) overflow, 0xFF returned
                                        ;   otherwise - LOW(X).
                                        ;
                                        ;   Result returned in Acc
                                        ;
                xch     A, R4
                mov     R0, A
                mov     DPTR, #0B891h
                mov     A, R4
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R1, A
                mov     DPTR, #0B8B2h
                mov     A, R4
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                cjne    A, B, code_3C22 ; B-Register

code_3C22:                              ; CODE XREF: power_on__ignition_key_turned_+188D↑j
                jnc     code_3C2B
                mov     A, R0
                clr     C
                subb    A, R1
                jnc     code_3C2B
                mov     A, R1
                mov     R0, A

code_3C2B:                              ; CODE XREF: power_on__ignition_key_turned_:code_3C22↑j
                                        ; power_on__ignition_key_turned_+1895↑j
                mov     B, R0           ; B-Register
                mov     A, RAM_71
                jnb     ACC.2, code_3C36 ; Accumulator
                mov     C, RAM_2C.2
                sjmp    code_3C3A
; ---------------------------------------------------------------------------

code_3C36:                              ; CODE XREF: power_on__ignition_key_turned_+189D↑j
                mov     A, P7           ; Port 7, Analog/Digital Input
                mov     C, ACC.6        ; Accumulator

code_3C3A:                              ; CODE XREF: power_on__ignition_key_turned_+18A2↑j
                jnc     code_3C4A
                mov     DPTR, #87A6h
                clr     A
                movc    A, @A+DPTR
                clr     C
                subb    A, B            ; B-Register
                jc      code_3C4A
                add     A, B            ; B-Register
                mov     B, A            ; B-Register

code_3C4A:                              ; CODE XREF: power_on__ignition_key_turned_:code_3C3A↑j
                                        ; power_on__ignition_key_turned_+18B2↑j
                mov     DPTR, #0F783h
                movx    A, @DPTR
                add     A, B            ; B-Register
                sjmp    code_3C56
; ---------------------------------------------------------------------------

code_3C52:                              ; CODE XREF: power_on__ignition_key_turned_+1860↑j
                mov     DPTR, #0F77Dh
                movx    A, @DPTR

code_3C56:                              ; CODE XREF: power_on__ignition_key_turned_+18BE↑j
                mov     R0, A
                mov     B, A            ; B-Register
                mov     DPTR, #8768h
                clr     A
                movc    A, @A+DPTR
                mul     AB
                mov     A, R0
                add     A, B            ; B-Register
                jnc     code_3C66
                mov     A, #0FFh

code_3C66:                              ; CODE XREF: power_on__ignition_key_turned_+18D0↑j
                mov     DPTR, #0F77Bh
                movx    @DPTR, A
                mov     B, A            ; B-Register
                mov     DPTR, #8769h
                clr     A
                movc    A, @A+DPTR
                mul     AB
                mov     DPTR, #0F77Bh
                movx    A, @DPTR
                add     A, B            ; B-Register
                jnc     code_3C7C
                mov     A, #0FFh

code_3C7C:                              ; CODE XREF: power_on__ignition_key_turned_+18E6↑j
                mov     DPTR, #0F77Ch
                movx    @DPTR, A
                mov     A, RAM_72
                jb      ACC.6, code_3CA4 ; Accumulator
                mov     B, #0           ; B-Register
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.6, code_3C9D ; Accumulator
                jb      RAM_22.2, code_3C9D
                jnb     RAM_27.5, code_3C9D
                mov     DPTR, #878Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_3C9D:                              ; CODE XREF: power_on__ignition_key_turned_+18FB↑j
                                        ; power_on__ignition_key_turned_+18FE↑j ...
                mov     A, R0
                add     A, B            ; B-Register
                mov     DPTR, #0F77Dh
                movx    @DPTR, A

code_3CA4:                              ; CODE XREF: power_on__ignition_key_turned_+18F0↑j
                mov     DPTR, #0A25Ch
                mov     A, RAM_3D
                lcall   code_6324
                mov     B, A            ; B-Register
                mov     DPTR, #0A23Dh
                mov     A, RAM_4B
                movc    A, @A+DPTR
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_5B, A
                jnb     RAM_2A.6, code_3CC8
                jb      RAM_2E.3, code_3CC8
                mov     DPTR, #808Dh
                clr     A
                movc    A, @A+DPTR
                add     A, RAM_5B
                mov     RAM_5B, A

code_3CC8:                              ; CODE XREF: power_on__ignition_key_turned_+1927↑j
                                        ; power_on__ignition_key_turned_+192A↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3CEA ; Accumulator
                mov     DPTR, #0A2DEh
                mov     R2, RAM_4A
                lcall   get_value_from_table_no_negate ; Redirects call to table_lookup procedure
                mov     R0, A
                mov     R1, #0FFh
                mov     DPTR, #0A29Ch
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                lcall   code_5F97
                mov     DPTR, #0F778h
                movx    @DPTR, A

code_3CEA:                              ; CODE XREF: power_on__ignition_key_turned_+193B↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.0, code_3CF5 ; Accumulator
                ljmp    code_3D4A
; ---------------------------------------------------------------------------

code_3CF5:                              ; CODE XREF: power_on__ignition_key_turned_+195D↑j
                mov     A, RAM_71
                jnb     ACC.1, code_3CFD ; Accumulator
                ljmp    code_3D4A
; ---------------------------------------------------------------------------

code_3CFD:                              ; CODE XREF: power_on__ignition_key_turned_+1965↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3D4A ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_3D4A ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_3D4A ; Accumulator
                mov     DPTR, #879Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7CEh
                movx    A, @DPTR
                jnb     ACC.0, code_3D28 ; Accumulator
                mov     DPTR, #0F778h
                movx    A, @DPTR
                lcall   code_6107
                mov     DPTR, #0F778h
                movx    @DPTR, A

code_3D28:                              ; CODE XREF: power_on__ignition_key_turned_+1988↑j
                jnb     RAM_2A.2, code_3D4A
                mov     DPTR, #0F7CEh
                movx    A, @DPTR
                mov     C, ACC.1        ; Accumulator
                addc    A, #0
                jnb     ACC.0, code_3D4A ; Accumulator
                mov     DPTR, #0F7CEh
                movx    A, @DPTR
                mov     C, ACC.0        ; Accumulator
                mov     A, RAM_63
                jnc     code_3D45
                lcall   code_6107
                sjmp    code_3D48
; ---------------------------------------------------------------------------

code_3D45:                              ; CODE XREF: power_on__ignition_key_turned_+19AC↑j
                lcall   code_612E

code_3D48:                              ; CODE XREF: power_on__ignition_key_turned_+19B1↑j
                mov     RAM_63, A

code_3D4A:                              ; CODE XREF: power_on__ignition_key_turned_+1960↑j
                                        ; power_on__ignition_key_turned_+1968↑j ...
                mov     DPTR, #0F7CEh
                movx    A, @DPTR
                mov     C, ACC.0        ; Accumulator
                mov     ACC.1, C        ; Accumulator
                mov     DPTR, #0F7CEh
                movx    @DPTR, A
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.7, code_3D61 ; Accumulator
                ljmp    code_3DB6
; ---------------------------------------------------------------------------

code_3D61:                              ; CODE XREF: power_on__ignition_key_turned_+19C9↑j
                mov     A, RAM_71
                jnb     ACC.2, code_3D69 ; Accumulator
                ljmp    code_3DB6
; ---------------------------------------------------------------------------

code_3D69:                              ; CODE XREF: power_on__ignition_key_turned_+19D1↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3DB6 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_3DB6 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_3DB6 ; Accumulator
                mov     DPTR, #87A4h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7D0h
                movx    A, @DPTR
                jnb     ACC.0, code_3D94 ; Accumulator
                mov     DPTR, #0F778h
                movx    A, @DPTR
                lcall   code_6107
                mov     DPTR, #0F778h
                movx    @DPTR, A

code_3D94:                              ; CODE XREF: power_on__ignition_key_turned_+19F4↑j
                jnb     RAM_2A.2, code_3DB6
                mov     DPTR, #0F7D0h
                movx    A, @DPTR
                mov     C, ACC.1        ; Accumulator
                addc    A, #0
                jnb     ACC.0, code_3DB6 ; Accumulator
                mov     DPTR, #0F7D0h
                movx    A, @DPTR
                mov     C, ACC.0        ; Accumulator
                mov     A, RAM_63
                jnc     code_3DB1
                lcall   code_6107
                sjmp    code_3DB4
; ---------------------------------------------------------------------------

code_3DB1:                              ; CODE XREF: power_on__ignition_key_turned_+1A18↑j
                lcall   code_612E

code_3DB4:                              ; CODE XREF: power_on__ignition_key_turned_+1A1D↑j
                mov     RAM_63, A

code_3DB6:                              ; CODE XREF: power_on__ignition_key_turned_+19CC↑j
                                        ; power_on__ignition_key_turned_+19D4↑j ...
                mov     DPTR, #0F7D0h
                movx    A, @DPTR
                mov     C, ACC.0        ; Accumulator
                mov     ACC.1, C        ; Accumulator
                mov     DPTR, #0F7D0h
                movx    @DPTR, A
                mov     C, RAM_23.6
                orl     C, RAM_23.7
                orl     C, RAM_24.0
                orl     C, RAM_24.1
                jc      code_3DCF
                ljmp    code_3E70
; ---------------------------------------------------------------------------

code_3DCF:                              ; CODE XREF: power_on__ignition_key_turned_+1A38↑j
                mov     DPTR, #8785h
                clr     A
                movc    A, @A+DPTR
                mov     RAM_57, A
                mov     A, RAM_72
                jb      ACC.2, code_3DE7 ; Accumulator
                mov     DPTR, #0A6F9h
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CF
                mov     RAM_5A, A

code_3DE7:                              ; CODE XREF: power_on__ignition_key_turned_+1A46↑j
                mov     A, RAM_73
                jb      ACC.2, code_3DF1 ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_3DF1:                              ; CODE XREF: power_on__ignition_key_turned_+1A57↑j
                mov     A, RAM_73
                jb      ACC.1, code_3DFD ; Accumulator
                clr     RAM_2E.5
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A

code_3DFD:                              ; CODE XREF: power_on__ignition_key_turned_+1A61↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3E17 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_3E17 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_3E17 ; Accumulator
                mov     DPTR, #8787h
                clr     A
                movc    A, @A+DPTR
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

code_3E17:                              ; CODE XREF: power_on__ignition_key_turned_+1A70↑j
                                        ; power_on__ignition_key_turned_+1A75↑j ...
                jnb     RAM_29.3, code_3E2D
                mov     DPTR, #0B8D3h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jc      code_3E2D
                clr     RAM_29.3

code_3E2D:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E17↑j
                                        ; power_on__ignition_key_turned_+1A97↑j
                jnb     RAM_2A.2, code_3E40
                mov     DPTR, #876Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                clr     C
                subb    A, B            ; B-Register
                jc      code_3E50
                sjmp    code_3E6B
; ---------------------------------------------------------------------------

code_3E40:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E2D↑j
                mov     DPTR, #876Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                clr     C
                subb    A, B            ; B-Register
                jc      code_3E50
                sjmp    code_3E6B
; ---------------------------------------------------------------------------

code_3E50:                              ; CODE XREF: power_on__ignition_key_turned_+1AAA↑j
                                        ; power_on__ignition_key_turned_+1ABA↑j
                setb    RAM_2A.2
                mov     A, RAM_72
                jb      ACC.2, code_3E69 ; Accumulator
                mov     DPTR, #8786h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0A23Dh
                mov     A, RAM_4B
                movc    A, @A+DPTR
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_5A, A

code_3E69:                              ; CODE XREF: power_on__ignition_key_turned_+1AC2↑j
                sjmp    code_3E6D
; ---------------------------------------------------------------------------

code_3E6B:                              ; CODE XREF: power_on__ignition_key_turned_+1AAC↑j
                                        ; power_on__ignition_key_turned_+1ABC↑j
                clr     RAM_2A.2

code_3E6D:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E69↑j
                ljmp    code_42E9
; ---------------------------------------------------------------------------

code_3E70:                              ; CODE XREF: power_on__ignition_key_turned_+1A3A↑j
                jnb     RAM_2A.2, code_3EB9
                mov     DPTR, #876Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                clr     C
                subb    A, B            ; B-Register
                jc      code_3E84
                ljmp    code_3F0F
; ---------------------------------------------------------------------------

code_3E84:                              ; CODE XREF: power_on__ignition_key_turned_+1AED↑j
                mov     DPTR, #0F77Ch
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3E94
                ljmp    code_3F6A
; ---------------------------------------------------------------------------

code_3E94:                              ; CODE XREF: power_on__ignition_key_turned_+1AFD↑j
                jnb     RAM_2A.3, code_3E9A
                ljmp    code_3F6A
; ---------------------------------------------------------------------------

code_3E9A:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E94↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, code_3EA5 ; Accumulator
                ljmp    code_3F93
; ---------------------------------------------------------------------------

code_3EA5:                              ; CODE XREF: power_on__ignition_key_turned_+1B0D↑j
                mov     DPTR, #876Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3EB6
                ljmp    code_3F93
; ---------------------------------------------------------------------------

code_3EB6:                              ; CODE XREF: power_on__ignition_key_turned_+1B1F↑j
                ljmp    code_3FEA
; ---------------------------------------------------------------------------

code_3EB9:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E70↑j
                mov     DPTR, #0F783h
                movx    A, @DPTR
                jnb     ACC.7, code_3EC5 ; Accumulator
                clr     A
                mov     DPTR, #0F783h
                movx    @DPTR, A

code_3EC5:                              ; CODE XREF: power_on__ignition_key_turned_+1B2B↑j
                mov     A, RAM_64
                jz      code_3EF1
                mov     DPTR, #876Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3F0F
                mov     DPTR, #0F77Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jc      code_3F17
                mov     A, RAM_64
                clr     C
                subb    A, #2
                jnc     code_3EEE
                ljmp    code_3F9B
; ---------------------------------------------------------------------------

code_3EEE:                              ; CODE XREF: power_on__ignition_key_turned_+1B57↑j
                ljmp    code_3FF2
; ---------------------------------------------------------------------------

code_3EF1:                              ; CODE XREF: power_on__ignition_key_turned_+1B35↑j
                mov     DPTR, #876Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3F14
                mov     DPTR, #0F77Ch
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jc      code_3F17
                ljmp    code_3F93
; ---------------------------------------------------------------------------

code_3F0F:                              ; CODE XREF: power_on__ignition_key_turned_+1AEF↑j
                                        ; power_on__ignition_key_turned_+1B43↑j
                clr     RAM_2A.2
                mov     RAM_64, #0

code_3F14:                              ; CODE XREF: power_on__ignition_key_turned_+1B6B↑j
                ljmp    code_4090
; ---------------------------------------------------------------------------

code_3F17:                              ; CODE XREF: power_on__ignition_key_turned_+1B50↑j
                                        ; power_on__ignition_key_turned_+1B78↑j
                mov     RAM_64, #0
                setb    RAM_2A.2
                jbc     RAM_29.3, code_3F45
                mov     DPTR, #0F77Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                mov     DPTR, #0F77Eh
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3F38
                mov     DPTR, #0F77Dh
                movx    A, @DPTR
                mov     DPTR, #0F77Eh
                movx    @DPTR, A

code_3F38:                              ; CODE XREF: power_on__ignition_key_turned_+1B9C↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3F43 ; Accumulator
                lcall   code_6223

code_3F43:                              ; CODE XREF: power_on__ignition_key_turned_+1BAB↑j
                sjmp    code_3F6A
; ---------------------------------------------------------------------------

code_3F45:                              ; CODE XREF: power_on__ignition_key_turned_+1B8A↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3F62 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_3F62 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_3F62 ; Accumulator
                mov     DPTR, #0A2BDh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

code_3F62:                              ; CODE XREF: power_on__ignition_key_turned_+1BB8↑j
                                        ; power_on__ignition_key_turned_+1BBD↑j ...
                mov     DPTR, #0F77Dh
                movx    A, @DPTR
                mov     DPTR, #0F77Eh
                movx    @DPTR, A

code_3F6A:                              ; CODE XREF: power_on__ignition_key_turned_+1AFF↑j
                                        ; power_on__ignition_key_turned_+1B05↑j ...
                mov     A, RAM_73
                jb      ACC.2, code_3F74 ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_3F74:                              ; CODE XREF: power_on__ignition_key_turned_+1BDA↑j
                mov     A, RAM_73
                jb      ACC.1, code_3F80 ; Accumulator
                clr     RAM_2E.5
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A

code_3F80:                              ; CODE XREF: power_on__ignition_key_turned_+1BE4↑j
                clr     RAM_2A.7
                lcall   code_5BB5
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3F90 ; Accumulator
                lcall   code_5D9F

code_3F90:                              ; CODE XREF: power_on__ignition_key_turned_+1BF8↑j
                ljmp    code_409B
; ---------------------------------------------------------------------------

code_3F93:                              ; CODE XREF: power_on__ignition_key_turned_+1B10↑j
                                        ; power_on__ignition_key_turned_+1B21↑j ...
                mov     RAM_64, #1
                clr     RAM_2A.2
                mov     RAM_65, #0

code_3F9B:                              ; CODE XREF: power_on__ignition_key_turned_+1B59↑j
                mov     A, RAM_73
                jb      ACC.2, code_3FA5 ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_3FA5:                              ; CODE XREF: power_on__ignition_key_turned_+1C0B↑j
                mov     A, RAM_73
                jb      ACC.1, code_3FB1 ; Accumulator
                clr     RAM_2E.5
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A

code_3FB1:                              ; CODE XREF: power_on__ignition_key_turned_+1C15↑j
                clr     RAM_2A.7
                mov     A, RAM_72
                jb      ACC.2, code_3FBB ; Accumulator
                mov     RAM_5A, RAM_5B

code_3FBB:                              ; CODE XREF: power_on__ignition_key_turned_+1C23↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, code_3FC6 ; Accumulator
                ljmp    code_4090
; ---------------------------------------------------------------------------

code_3FC6:                              ; CODE XREF: power_on__ignition_key_turned_+1C2E↑j
                mov     DPTR, #876Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3FD7
                ljmp    code_4090
; ---------------------------------------------------------------------------

code_3FD7:                              ; CODE XREF: power_on__ignition_key_turned_+1C40↑j
                mov     DPTR, #876Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                inc     RAM_65
                mov     A, RAM_65
                clr     C
                subb    A, B            ; B-Register
                jnc     code_3FEA
                ljmp    code_4090
; ---------------------------------------------------------------------------

code_3FEA:                              ; CODE XREF: power_on__ignition_key_turned_:code_3EB6↑j
                                        ; power_on__ignition_key_turned_+1C53↑j
                mov     RAM_64, #4
                clr     RAM_2A.2
                mov     RAM_65, #0

code_3FF2:                              ; CODE XREF: power_on__ignition_key_turned_:code_3EEE↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_3FFD ; Accumulator
                lcall   code_6223

code_3FFD:                              ; CODE XREF: power_on__ignition_key_turned_+1C65↑j
                mov     A, RAM_73
                jb      ACC.2, code_4007 ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_4007:                              ; CODE XREF: power_on__ignition_key_turned_+1C6D↑j
                mov     A, RAM_73
                jb      ACC.1, code_4013 ; Accumulator
                clr     RAM_2E.5
                clr     A
                mov     DPTR, #0F7A5h
                movx    @DPTR, A

code_4013:                              ; CODE XREF: power_on__ignition_key_turned_+1C77↑j
                mov     A, RAM_72
                jb      ACC.2, code_401B ; Accumulator
                mov     RAM_5A, RAM_5B

code_401B:                              ; CODE XREF: power_on__ignition_key_turned_+1C83↑j
                mov     A, RAM_64
                cjne    A, #2, code_4023
                ljmp    code_4026
; ---------------------------------------------------------------------------

code_4023:                              ; CODE XREF: power_on__ignition_key_turned_+1C8B↑j
                cjne    A, #4, code_403B

code_4026:                              ; CODE XREF: power_on__ignition_key_turned_+1C8E↑j
                jnb     RAM_28.1, code_4048
                mov     DPTR, #876Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                inc     RAM_65
                mov     A, RAM_65
                clr     C
                subb    A, B            ; B-Register
                jc      code_4048
                inc     RAM_64

code_403B:                              ; CODE XREF: power_on__ignition_key_turned_:code_4023↑j
                mov     A, RAM_72
                jb      ACC.2, code_4048 ; Accumulator
                mov     DPTR, #0A27Dh
                mov     A, RAM_4B
                movc    A, @A+DPTR
                mov     RAM_5A, A

code_4048:                              ; CODE XREF: power_on__ignition_key_turned_:code_4026↑j
                                        ; power_on__ignition_key_turned_+1CA5↑j ...
                mov     A, RAM_64
                cjne    A, #2, code_4050
                ljmp    code_4053
; ---------------------------------------------------------------------------

code_4050:                              ; CODE XREF: power_on__ignition_key_turned_+1CB8↑j
                cjne    A, #3, code_4069

code_4053:                              ; CODE XREF: power_on__ignition_key_turned_+1CBB↑j
                mov     DPTR, #878Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4080
                mov     A, RAM_64
                add     A, #2
                mov     RAM_64, A
                sjmp    code_4090
; ---------------------------------------------------------------------------

code_4069:                              ; CODE XREF: power_on__ignition_key_turned_:code_4050↑j
                mov     DPTR, #878Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4079
                sjmp    code_4090
; ---------------------------------------------------------------------------

code_4079:                              ; CODE XREF: power_on__ignition_key_turned_+1CE3↑j
                mov     A, RAM_64
                clr     C
                subb    A, #2
                mov     RAM_64, A

code_4080:                              ; CODE XREF: power_on__ignition_key_turned_+1CCD↑j
                clr     RAM_2A.7
                clr     RAM_2A.6
                lcall   code_672F
                setb    RAM_2A.4
                clr     RAM_29.4
                setb    RAM_29.5
                ljmp    code_4474
; ---------------------------------------------------------------------------

code_4090:                              ; CODE XREF: power_on__ignition_key_turned_:code_3F14↑j
                                        ; power_on__ignition_key_turned_+1C31↑j ...
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_409B ; Accumulator
                lcall   code_6223

code_409B:                              ; CODE XREF: power_on__ignition_key_turned_:code_3F90↑j
                                        ; power_on__ignition_key_turned_+1D03↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, code_4121 ; Accumulator
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, code_4121 ; Accumulator
                mov     A, RAM_73
                jb      ACC.2, code_4121 ; Accumulator
                mov     DPTR, #8788h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jc      code_4121
                jnb     RAM_28.2, code_40CC
                mov     DPTR, #0F7A4h
                movx    A, @DPTR
                dec     A
                jz      code_40CC
                mov     DPTR, #0F7A4h
                movx    @DPTR, A

code_40CC:                              ; CODE XREF: power_on__ignition_key_turned_+1D2C↑j
                                        ; power_on__ignition_key_turned_+1D34↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, code_40D7 ; Accumulator
                jb      RAM_2B.2, code_4121

code_40D7:                              ; CODE XREF: power_on__ignition_key_turned_+1D3F↑j
                jnb     RAM_2B.0, code_410E
                mov     DPTR, #0F7A4h
                movx    A, @DPTR
                jnz     code_40F9
                mov     A, RAM_73
                jb      ACC.2, code_40EA ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_40EA:                              ; CODE XREF: power_on__ignition_key_turned_+1D50↑j
                mov     DPTR, #878Bh
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F7A4h
                movx    @DPTR, A
                clr     RAM_2B.0
                clr     RAM_2A.6
                sjmp    code_4121
; ---------------------------------------------------------------------------

code_40F9:                              ; CODE XREF: power_on__ignition_key_turned_+1D4C↑j
                mov     A, RAM_73
                jb      ACC.2, code_410C ; Accumulator
                mov     DPTR, #0A5F9h
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_410C:                              ; CODE XREF: power_on__ignition_key_turned_+1D69↑j
                sjmp    code_4121
; ---------------------------------------------------------------------------

code_410E:                              ; CODE XREF: power_on__ignition_key_turned_:code_40D7↑j
                mov     DPTR, #0F7A4h
                movx    A, @DPTR
                jnz     code_4121
                mov     DPTR, #878Ah
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0F7A4h
                movx    @DPTR, A
                clr     RAM_2A.6
                setb    RAM_2B.0

code_4121:                              ; CODE XREF: power_on__ignition_key_turned_+1D0E↑j
                                        ; power_on__ignition_key_turned_+1D16↑j ...
                mov     C, RAM_23.6
                orl     C, RAM_23.7
                orl     C, RAM_24.0
                orl     C, RAM_24.1
                jnc     code_4135
                mov     A, RAM_73
                jb      ACC.2, code_4135 ; Accumulator
                clr     A
                mov     DPTR, #0F7A3h
                movx    @DPTR, A

code_4135:                              ; CODE XREF: power_on__ignition_key_turned_+1D97↑j
                                        ; power_on__ignition_key_turned_+1D9B↑j
                mov     DPTR, #87BFh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                cjne    A, B, code_4141 ; B-Register

code_4141:                              ; CODE XREF: power_on__ignition_key_turned_+1DAC↑j
                jnc     code_4146
                ljmp    code_41FC
; ---------------------------------------------------------------------------

code_4146:                              ; CODE XREF: power_on__ignition_key_turned_:code_4141↑j
                mov     DPTR, #87C4h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F773h
                movx    A, @DPTR
                cjne    A, #3, code_4161
                mov     A, RAM_40
                cjne    A, B, code_4159 ; B-Register

code_4159:                              ; CODE XREF: power_on__ignition_key_turned_+1DC4↑j
                jnc     code_415E
                ljmp    code_41FC
; ---------------------------------------------------------------------------

code_415E:                              ; CODE XREF: power_on__ignition_key_turned_:code_4159↑j
                ljmp    code_4205
; ---------------------------------------------------------------------------

code_4161:                              ; CODE XREF: power_on__ignition_key_turned_+1DBF↑j
                cjne    A, #2, code_418B
                mov     A, RAM_40
                cjne    A, B, code_4169 ; B-Register

code_4169:                              ; CODE XREF: power_on__ignition_key_turned_+1DD4↑j
                jc      code_4174
                mov     A, #3
                mov     DPTR, #0F773h
                movx    @DPTR, A
                ljmp    code_4205
; ---------------------------------------------------------------------------

code_4174:                              ; CODE XREF: power_on__ignition_key_turned_:code_4169↑j
                mov     DPTR, #87C6h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F774h
                movx    A, @DPTR
                inc     A
                mov     DPTR, #0F774h
                movx    @DPTR, A
                cjne    A, B, code_4187 ; B-Register

code_4187:                              ; CODE XREF: power_on__ignition_key_turned_+1DF2↑j
                jc      code_4205
                sjmp    code_41FC
; ---------------------------------------------------------------------------

code_418B:                              ; CODE XREF: power_on__ignition_key_turned_:code_4161↑j
                mov     DPTR, #87C3h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                cjne    A, B, code_4197 ; B-Register

code_4197:                              ; CODE XREF: power_on__ignition_key_turned_+1E02↑j
                jc      code_41AC
                mov     DPTR, #0F773h
                movx    A, @DPTR
                jz      code_41FC
                mov     A, #2
                mov     DPTR, #0F773h
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0F774h
                movx    @DPTR, A
                sjmp    code_4205
; ---------------------------------------------------------------------------

code_41AC:                              ; CODE XREF: power_on__ignition_key_turned_:code_4197↑j
                mov     DPTR, #87C2h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_40
                cjne    A, B, code_41B8 ; B-Register

code_41B8:                              ; CODE XREF: power_on__ignition_key_turned_+1E23↑j
                jc      code_41FC
                mov     DPTR, #87C0h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                cjne    A, B, code_41C6 ; B-Register

code_41C6:                              ; CODE XREF: power_on__ignition_key_turned_+1E31↑j
                jc      code_41FC
                mov     DPTR, #87C1h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                cjne    A, B, code_41D4 ; B-Register

code_41D4:                              ; CODE XREF: power_on__ignition_key_turned_+1E3F↑j
                jnc     code_41FC
                mov     DPTR, #0F773h
                movx    A, @DPTR
                jnz     code_4205
                jnb     RAM_28.1, code_4205
                mov     DPTR, #87C5h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F774h
                movx    A, @DPTR
                inc     A
                mov     DPTR, #0F774h
                movx    @DPTR, A
                cjne    A, B, code_41F2 ; B-Register

code_41F2:                              ; CODE XREF: power_on__ignition_key_turned_+1E5D↑j
                jc      code_4205
                mov     A, #1
                mov     DPTR, #0F773h
                movx    @DPTR, A
                sjmp    code_4205
; ---------------------------------------------------------------------------

code_41FC:                              ; CODE XREF: power_on__ignition_key_turned_+1DB1↑j
                                        ; power_on__ignition_key_turned_+1DC9↑j ...
                clr     A
                mov     DPTR, #0F773h
                movx    @DPTR, A
                mov     DPTR, #0F774h
                movx    @DPTR, A

code_4205:                              ; CODE XREF: power_on__ignition_key_turned_:code_415E↑j
                                        ; power_on__ignition_key_turned_+1DDF↑j ...
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jb      ACC.1, code_4210 ; Accumulator
                ljmp    code_42E1
; ---------------------------------------------------------------------------

code_4210:                              ; CODE XREF: power_on__ignition_key_turned_+1E78↑j
                mov     DPTR, #8781h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4221
                ljmp    code_42E1
; ---------------------------------------------------------------------------

code_4221:                              ; CODE XREF: power_on__ignition_key_turned_+1E8A↑j
                mov     DPTR, #877Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F683h
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jnc     code_423A
                mov     DPTR, #877Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_4241
; ---------------------------------------------------------------------------

code_423A:                              ; CODE XREF: power_on__ignition_key_turned_+1E9D↑j
                mov     DPTR, #8780h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_4241:                              ; CODE XREF: power_on__ignition_key_turned_+1EA6↑j
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jnc     code_424D
                ljmp    code_42E1
; ---------------------------------------------------------------------------

code_424D:                              ; CODE XREF: power_on__ignition_key_turned_+1EB6↑j
                mov     DPTR, #935Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     RAM_57, A
                jb      RAM_2A.2, code_42A1
                mov     A, RAM_64
                jnz     code_42A1
                mov     A, RAM_72
                jb      ACC.2, code_42A1 ; Accumulator
                mov     DPTR, #9D1Ch
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CF
                mov     R0, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, code_428C ; Accumulator
                mov     DPTR, #0A13Bh
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A1B9h
                mov     A, RAM_3E
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     R0, A

code_428C:                              ; CODE XREF: power_on__ignition_key_turned_+1EE3↑j
                mov     DPTR, #0A11Ch
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A198h
                mov     A, RAM_3D
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     RAM_5A, A

code_42A1:                              ; CODE XREF: power_on__ignition_key_turned_+1EC7↑j
                                        ; power_on__ignition_key_turned_+1ECC↑j ...
                mov     DPTR, #0A7F9h
                mov     A, RAM_53
                movc    A, @A+DPTR
                jnb     ACC.2, code_42E1 ; Accumulator
                mov     C, RAM_22.6
                orl     C, RAM_22.7
                orl     C, RAM_23.0
                orl     C, RAM_23.1
                orl     C, RAM_2D.5
                orl     C, RAM_2D.6
                jc      code_42E1
                lcall   code_6693
                mov     DPTR, #935Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                cjne    A, RAM_57, code_42E4
                lcall   code_64E7
                jb      RAM_2A.5, code_42E7
                mov     A, RAM_75
                jnb     ACC.1, code_42D5 ; Accumulator
                clr     RAM_2A.6

code_42D5:                              ; CODE XREF: power_on__ignition_key_turned_+1F3E↑j
                mov     A, RAM_72
                jnb     ACC.4, code_42DC ; Accumulator
                clr     RAM_2A.6

code_42DC:                              ; CODE XREF: power_on__ignition_key_turned_+1F45↑j
                lcall   code_59B9
                sjmp    code_42E9
; ---------------------------------------------------------------------------

code_42E1:                              ; CODE XREF: power_on__ignition_key_turned_+1E7B↑j
                                        ; power_on__ignition_key_turned_+1E8C↑j ...
                lcall   code_6693

code_42E4:                              ; CODE XREF: power_on__ignition_key_turned_+1F33↑j
                lcall   code_64E7

code_42E7:                              ; CODE XREF: power_on__ignition_key_turned_+1F39↑j
                clr     RAM_2A.6

code_42E9:                              ; CODE XREF: power_on__ignition_key_turned_:code_3E6D↑j
                                        ; power_on__ignition_key_turned_+1F4D↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_430F ; Accumulator
                jnb     RAM_2A.7, code_42F9
                lcall   code_6783
                sjmp    code_430F
; ---------------------------------------------------------------------------

code_42F9:                              ; CODE XREF: power_on__ignition_key_turned_+1F5F↑j
                mov     B, #4           ; B-Register
                mov     DPTR, #0F7A9h
                mov     R0, #1

code_4301:                              ; CODE XREF: power_on__ignition_key_turned_+1F7A↓j
                mov     A, RAM_76
                anl     A, R0
                jnz     code_4308
                clr     A
                movx    @DPTR, A

code_4308:                              ; CODE XREF: power_on__ignition_key_turned_+1F72↑j
                mov     A, R0
                rl      A
                mov     R0, A
                inc     DPTR
                djnz    B, code_4301    ; B-Register

code_430F:                              ; CODE XREF: power_on__ignition_key_turned_+1F5C↑j
                                        ; power_on__ignition_key_turned_+1F65↑j
                lcall   code_66FA
                clr     RAM_2A.4
                clr     RAM_29.4
                setb    RAM_29.5
                mov     DPTR, #0F6FDh
                movx    A, @DPTR
                jz      code_4334
                jnb     RAM_28.1, code_4323
                dec     A
                movx    @DPTR, A

code_4323:                              ; CODE XREF: power_on__ignition_key_turned_+1F8C↑j
                mov     DPTR, #8756h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_57
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4332
                clr     A

code_4332:                              ; CODE XREF: power_on__ignition_key_turned_+1F9D↑j
                mov     RAM_57, A

code_4334:                              ; CODE XREF: power_on__ignition_key_turned_+1F8A↑j
                jnb     RAM_28.1, code_4358
                mov     DPTR, #0B870h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                mov     DPTR, #0F76Ah
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     DPTR, #0F76Ah
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                setb    IEN0.7          ; Interrupt Enable Register 0

code_4358:                              ; CODE XREF: power_on__ignition_key_turned_+1729↑j
                                        ; power_on__ignition_key_turned_:code_4334↑j
                mov     A, RAM_72
                jb      ACC.0, code_43CA ; Accumulator
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #1Fh, code_4379
                mov     DPTR, #0A9F9h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                anl     B, #7Fh         ; B-Register
                mov     DPTR, #0F798h
                movx    A, @DPTR
                inc     A
                mov     DPTR, #0F798h
                movx    @DPTR, A
                sjmp    code_4392
; ---------------------------------------------------------------------------

code_4379:                              ; CODE XREF: power_on__ignition_key_turned_+1FCF↑j
                cjne    A, #20h, code_43C7 ; ' '
                mov     DPTR, #87CAh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                anl     B, #7Fh         ; B-Register
                mov     DPTR, #0F798h
                movx    A, @DPTR
                jnb     RAM_28.1, code_4392
                inc     A
                mov     DPTR, #0F798h
                movx    @DPTR, A

code_4392:                              ; CODE XREF: power_on__ignition_key_turned_+1FE5↑j
                                        ; power_on__ignition_key_turned_+1FF8↑j
                cjne    A, B, code_4395 ; B-Register

code_4395:                              ; CODE XREF: power_on__ignition_key_turned_:code_4392↑j
                jnc     code_43A6
                mov     DPTR, #0AAF9h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_57
                add     A, B            ; B-Register
                mov     RAM_58, A
                sjmp    code_43CA
; ---------------------------------------------------------------------------

code_43A6:                              ; CODE XREF: power_on__ignition_key_turned_:code_4395↑j
                mov     A, B            ; B-Register
                rl      A
                mov     B, A            ; B-Register
                mov     DPTR, #0F798h
                movx    A, @DPTR
                cjne    A, B, code_43B7 ; B-Register
                clr     A
                mov     DPTR, #0F798h
                movx    @DPTR, A

code_43B7:                              ; CODE XREF: power_on__ignition_key_turned_+201D↑j
                mov     DPTR, #0AAF9h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_57
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_58, A
                sjmp    code_43CA
; ---------------------------------------------------------------------------

code_43C7:                              ; CODE XREF: power_on__ignition_key_turned_:code_4379↑j
                mov     RAM_58, RAM_57

code_43CA:                              ; CODE XREF: power_on__ignition_key_turned_+1FC8↑j
                                        ; power_on__ignition_key_turned_+2012↑j ...
                mov     DPTR, #9B1Ch
                mov     R2, RAM_4A
                mov     R3, RAM_43
                lcall   code_63CB
                add     A, #80h
                rrc     A
                mov     R2, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.1, code_4422 ; Accumulator
                mov     C, RAM_24.0
                orl     C, RAM_24.1
                orl     C, RAM_23.6
                orl     C, RAM_23.7
                orl     C, RAM_22.6
                orl     C, RAM_22.7
                orl     C, RAM_23.0
                orl     C, RAM_23.1
                orl     C, RAM_2D.5
                orl     C, RAM_2D.6
                jc      code_4422
                jb      RAM_2B.0, code_440B
                mov     DPTR, #0F500h
                mov     A, RAM_53
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                sjmp    code_441B
; ---------------------------------------------------------------------------

code_440B:                              ; CODE XREF: power_on__ignition_key_turned_+2064↑j
                mov     DPTR, #0F400h
                mov     A, RAM_53
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR

code_441B:                              ; CODE XREF: power_on__ignition_key_turned_+2077↑j
                jnb     RAM_2A.6, code_4458
                add     A, RAM_66
                sjmp    code_4458
; ---------------------------------------------------------------------------

code_4422:                              ; CODE XREF: power_on__ignition_key_turned_+204B↑j
                                        ; power_on__ignition_key_turned_+2062↑j
                mov     DPTR, #9C1Ch
                mov     A, RAM_53
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F681h
                movx    A, @DPTR
                lcall   multiply_signed ; Multiply signed bytes.
                                        ; Result - signed word.
                                        ;
                                        ; INPUT
                                        ;  - A - multiplicand #1
                                        ;  - B - multiplicand #2
                                        ;
                                        ; OUTPUT
                                        ;  - B:A - signed word B*A
                mov     DPTR, #0F682h
                movx    A, @DPTR
                add     A, B            ; B-Register
                jnb     PSW.2, code_4442 ; Program Status Word
                jc      code_4440
                mov     A, #7Fh
                sjmp    code_4442
; ---------------------------------------------------------------------------

code_4440:                              ; CODE XREF: power_on__ignition_key_turned_+20A8↑j
                mov     A, #80h

code_4442:                              ; CODE XREF: power_on__ignition_key_turned_+20A5↑j
                                        ; power_on__ignition_key_turned_+20AC↑j
                mov     B, A            ; B-Register
                mov     DPTR, #991Ch
                mov     A, RAM_53
                movc    A, @A+DPTR
                add     A, B            ; B-Register
                jb      B.7, code_4455  ; B-Register
                jnc     code_4458
                mov     A, #0FFh
                sjmp    code_4458
; ---------------------------------------------------------------------------

code_4455:                              ; CODE XREF: power_on__ignition_key_turned_+20BA↑j
                jc      code_4458
                clr     A

code_4458:                              ; CODE XREF: power_on__ignition_key_turned_:code_441B↑j
                                        ; power_on__ignition_key_turned_+208E↑j ...
                mov     B, R2           ; B-Register
                mul     AB
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jnc     code_4463
                mov     A, #0FFh

code_4463:                              ; CODE XREF: power_on__ignition_key_turned_+20CD↑j
                mov     R0, #0Fh
                mov     R1, #0F0h
                lcall   code_5F97
                mov     B, A            ; B-Register
                mov     A, RAM_72
                jb      ACC.4, code_4474 ; Accumulator
                mov     RAM_67, B       ; B-Register

code_4474:                              ; CODE XREF: power_on__ignition_key_turned_+1627↑j
                                        ; power_on__ignition_key_turned_+1CFB↑j ...
                mov     A, RAM_72
                jb      ACC.3, code_4481 ; Accumulator
                mov     DPTR, #0FF76h
                movx    A, @DPTR
                mov     DPTR, #0F770h
                movx    @DPTR, A

code_4481:                              ; CODE XREF: power_on__ignition_key_turned_+20E4↑j
                mov     A, RAM_72
                jb      ACC.2, code_4496 ; Accumulator
                jb      RAM_2A.2, code_4496
                mov     DPTR, #0F770h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_5A
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_5A, A

code_4496:                              ; CODE XREF: power_on__ignition_key_turned_+20F1↑j
                                        ; power_on__ignition_key_turned_+20F4↑j
                mov     DPTR, #8078h
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #8079h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                jnb     RAM_2A.0, code_44CD
                mov     A, RAM_59
                lcall   code_5FA8
                mov     RAM_59, A
                jnb     ACC.7, code_44B1 ; Accumulator
                add     A, #78h ; 'x'

code_44B1:                              ; CODE XREF: power_on__ignition_key_turned_+211A↑j
                clr     C
                subb    A, #65h ; 'e'
                jnc     code_44B8
                add     A, #78h ; 'x'

code_44B8:                              ; CODE XREF: power_on__ignition_key_turned_+2122↑j
                mov     B, #1Eh         ; B-Register
                div     AB
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     RAM_38, B       ; B-Register
                mov     RAM_36, B       ; B-Register
                mov     RAM_39, A
                mov     RAM_37, A
                setb    IEN0.7          ; Interrupt Enable Register 0
                ljmp    code_4542
; ---------------------------------------------------------------------------

code_44CD:                              ; CODE XREF: power_on__ignition_key_turned_+2110↑j
                mov     A, RAM_37
                cjne    A, #4, code_44D2

code_44D2:                              ; CODE XREF: power_on__ignition_key_turned_+213D↑j
                jc      code_44D7
                ljmp    power_on__ignition_key_turned_
; ---------------------------------------------------------------------------

code_44D7:                              ; CODE XREF: power_on__ignition_key_turned_:code_44D2↑j
                mov     A, RAM_36
                cjne    A, #1Eh, code_44DC

code_44DC:                              ; CODE XREF: power_on__ignition_key_turned_+2147↑j
                jc      code_44E1
                ljmp    power_on__ignition_key_turned_
; ---------------------------------------------------------------------------

code_44E1:                              ; CODE XREF: power_on__ignition_key_turned_:code_44DC↑j
                mov     A, RAM_36
                cjne    A, RAM_38, code_4522
                mov     A, RAM_59
                lcall   code_5FA8
                mov     RAM_59, A
                add     A, #3Ch ; '<'
                mov     R2, A
                mov     B, RAM_49       ; B-Register
                mov     DPTR, #874Dh
                clr     A
                movc    A, @A+DPTR
                mul     AB
                mov     A, B            ; B-Register
                add     A, #65h ; 'e'
                cjne    A, #78h, code_4500 ; 'x'

code_4500:                              ; CODE XREF: power_on__ignition_key_turned_+216B↑j
                jc      code_4505
                clr     C
                subb    A, #78h ; 'x'

code_4505:                              ; CODE XREF: power_on__ignition_key_turned_:code_4500↑j
                clr     C
                subb    A, #3Ch ; '<'
                jnc     code_450C
                add     A, #78h ; 'x'

code_450C:                              ; CODE XREF: power_on__ignition_key_turned_+2176↑j
                mov     R1, A
                mov     A, RAM_37
                mov     B, #1Eh         ; B-Register
                mul     AB
                add     A, RAM_36
                mov     R0, A
                add     A, R1
                cjne    A, #78h, code_451A ; 'x'

code_451A:                              ; CODE XREF: power_on__ignition_key_turned_+2185↑j
                jc      code_451F
                clr     C
                subb    A, #78h ; 'x'

code_451F:                              ; CODE XREF: power_on__ignition_key_turned_:code_451A↑j
                cjne    A, RAM_2, code_4524

code_4522:                              ; CODE XREF: power_on__ignition_key_turned_+2151↑j
                sjmp    code_4542
; ---------------------------------------------------------------------------

code_4524:                              ; CODE XREF: power_on__ignition_key_turned_:code_451F↑j
                jc      code_4529
                dec     R0
                sjmp    code_452A
; ---------------------------------------------------------------------------

code_4529:                              ; CODE XREF: power_on__ignition_key_turned_:code_4524↑j
                inc     R0

code_452A:                              ; CODE XREF: power_on__ignition_key_turned_+2195↑j
                mov     A, R0
                cjne    A, #0FFh, code_4530
                mov     A, #77h ; 'w'

code_4530:                              ; CODE XREF: power_on__ignition_key_turned_+2199↑j
                cjne    A, #78h, code_4535 ; 'x'
                mov     A, #0

code_4535:                              ; CODE XREF: power_on__ignition_key_turned_:code_4530↑j
                mov     B, #1Eh         ; B-Register
                div     AB
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     RAM_38, B       ; B-Register
                mov     RAM_39, A
                setb    IEN0.7          ; Interrupt Enable Register 0

code_4542:                              ; CODE XREF: power_on__ignition_key_turned_+2138↑j
                                        ; power_on__ignition_key_turned_:code_4522↑j
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     R0, RAM_1C
                mov     R1, RAM_1D
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     A, R0
                orl     A, R1
                jnz     code_4552
                mov     R0, #0FFh
                mov     R1, #0FFh

code_4552:                              ; CODE XREF: power_on__ignition_key_turned_+21BA↑j
                mov     DPTR, #87B2h
                clr     A
                movc    A, @A+DPTR
                mov     B, #1Fh         ; B-Register
                mul     AB
                mov     R2, A
                mov     R3, B           ; B-Register
                lcall   code_5FD6
                mov     R2, RAM_0
                mov     R3, RAM_1
                mov     DPTR, #8A5Bh
                mov     A, RAM_3F
                movc    A, @A+DPTR
                mov     B, #3Eh ; '>'   ; B-Register
                mul     AB
                clr     RAM_27.2

code_4571:                              ; CODE XREF: power_on__ignition_key_turned_+21F4↓j
                mov     MD0, A          ; Multiplication/Division Register 0
                mov     MD1, B          ; Multiplication/Division Register 1
                mov     MD4, R2         ; Multiplication/Division Register 4
                mov     MD5, R3         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     R4, MD4         ; Multiplication/Division Register 4
                mov     R4, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_4571
                setb    RAM_27.2
                mov     R2, #1
                mov     R3, #0
                lcall   code_5FCA
                mov     R2, #0B4h
                mov     R3, #0
                lcall   code_5FD6
                mov     DPTR, #0F65Eh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #8083h
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #8084h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                mov     A, RAM_5A
                lcall   code_5FA8
                mov     RAM_5A, A
                jnb     RAM_28.3, code_45E2
                jb      RAM_2A.2, code_45E2
                mov     A, RAM_72
                jb      ACC.2, code_45E2 ; Accumulator
                mov     DPTR, #8085h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_5A
                add     A, #80h
                mov     R0, A
                mov     DPTR, #0F771h
                movx    A, @DPTR
                add     A, #80h
                clr     C
                subb    A, R0
                jnc     code_45E2
                movx    A, @DPTR
                add     A, #80h
                add     A, B            ; B-Register
                clr     C
                subb    A, R0
                jnc     code_45E2
                add     A, RAM_5A
                mov     RAM_5A, A

code_45E2:                              ; CODE XREF: power_on__ignition_key_turned_+2222↑j
                                        ; power_on__ignition_key_turned_+2225↑j ...
                mov     A, RAM_5A
                mov     DPTR, #0F771h
                movx    @DPTR, A
                mov     B, RAM_49       ; B-Register
                mov     DPTR, #874Ch
                clr     A
                movc    A, @A+DPTR
                mul     AB
                mov     A, B            ; B-Register
                add     A, RAM_5A
                mov     R4, A
                mov     A, #99h
                push    ACC             ; Accumulator

code_45FA:                              ; CODE XREF: power_on__ignition_key_turned_+2304↓j
                pop     ACC             ; Accumulator
                push    ACC             ; Accumulator
                clr     C
                subb    A, #99h
                mov     B, #5Ah ; 'Z'   ; B-Register
                mul     AB
                mov     R0, A
                mov     R1, B           ; B-Register
                mov     B, #0           ; B-Register
                mov     A, R4
                jnb     ACC.7, code_4612 ; Accumulator
                mov     B, #0FFh        ; B-Register

code_4612:                              ; CODE XREF: power_on__ignition_key_turned_+227A↑j
                clr     C
                mov     A, R0
                subb    A, R4
                mov     R0, A
                mov     A, R1
                subb    A, B            ; B-Register
                mov     R1, A
                mov     DPSEL, #1       ; Data Pointer Select Register
                pop     ACC             ; Accumulator
                push    ACC             ; Accumulator
                clr     C
                subb    A, #99h
                rr      A
                rr      A
                mov     DPTR, #785h
                movc    A, @A+DPTR
                dec     A
                mov     DPTR, #0F7A9h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     B, A            ; B-Register
                mov     A, R0
                add     A, B            ; B-Register
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                jnb     B.7, code_464A  ; B-Register
                dec     R1

code_464A:                              ; CODE XREF: power_on__ignition_key_turned_+22B4↑j
                clr     C
                mov     A, R0
                subb    A, #0BCh
                mov     R0, A
                mov     A, R1
                subb    A, #4
                mov     R1, A
                mov     DPTR, #0F660h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F65Eh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                lcall   code_46E7
                mov     R3, RAM_1
                mov     R2, B           ; B-Register
                mov     DPTR, #0F660h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_46E7
                mov     A, R1
                mov     ACC.7, C        ; Accumulator
                mov     R1, A
                pop     RAM_0
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     @R0, RAM_3
                inc     R0
                mov     @R0, RAM_2
                inc     R0
                mov     @R0, RAM_1
                inc     R0
                mov     @R0, B          ; B-Register
                setb    IEN0.7          ; Interrupt Enable Register 0
                inc     R0
                cjne    R0, #0A9h, code_4694
                ljmp    code_4699
; ---------------------------------------------------------------------------

code_4694:                              ; CODE XREF: power_on__ignition_key_turned_+22FC↑j
                push    RAM_0
                ljmp    code_45FA
; ---------------------------------------------------------------------------

code_4699:                              ; CODE XREF: power_on__ignition_key_turned_+22FF↑j
                mov     A, #18h
                clr     C
                subb    A, R4
                mov     R0, A
                mov     R1, #7Fh
                mov     DPTR, #0ABB3h
                mov     A, RAM_4B
                movc    A, @A+DPTR
                lcall   code_5FA8
                mov     R3, A
                mov     A, #0A9h
                push    ACC             ; Accumulator

code_46AE:                              ; CODE XREF: power_on__ignition_key_turned_+2352↓j
                pop     ACC             ; Accumulator
                push    ACC             ; Accumulator
                clr     C
                subb    A, #0A9h
                rl      A
                mov     B, #5Ah ; 'Z'   ; B-Register
                mul     AB
                mov     R0, A
                mov     R1, B           ; B-Register
                mov     A, R0
                add     A, R3
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                clr     C
                mov     A, R0
                subb    A, #0BCh
                mov     R0, A
                mov     A, R1
                subb    A, #4
                mov     R1, A
                lcall   code_46E7
                pop     RAM_0
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     @R0, RAM_1
                inc     R0
                mov     @R0, B          ; B-Register
                setb    IEN0.7          ; Interrupt Enable Register 0
                inc     R0
                cjne    R0, #0ADh, code_46E2
                ljmp    code_4759
; ---------------------------------------------------------------------------

code_46E2:                              ; CODE XREF: power_on__ignition_key_turned_+234A↑j
                push    RAM_0
                ljmp    code_46AE
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

; =============== S U B R O U T I N E =======================================


code_46E7:                              ; CODE XREF: power_on__ignition_key_turned_+22D4↑p
                                        ; power_on__ignition_key_turned_+22E3↑p ...
                clr     PSW.5           ; Program Status Word
                mov     A, R1

code_46EA:                              ; CODE XREF: code_46E7+10↓j
                jnb     ACC.7, code_46F9 ; Accumulator
                cpl     PSW.5           ; Program Status Word
                mov     A, R0
                add     A, #0D0h
                mov     R0, A
                mov     A, R1
                addc    A, #2
                mov     R1, A
                sjmp    code_46EA
; ---------------------------------------------------------------------------

code_46F9:                              ; CODE XREF: code_46E7:code_46EA↑j
                                        ; code_46E7+22↓j
                clr     C
                mov     A, R0
                subb    A, #0D0h
                mov     B, A            ; B-Register
                mov     A, R1
                subb    A, #2
                jc      code_470B
                cpl     PSW.5           ; Program Status Word
                mov     R0, B           ; B-Register
                mov     R1, A
                sjmp    code_46F9
; ---------------------------------------------------------------------------

code_470B:                              ; CODE XREF: code_46E7+1B↑j
                mov     DPTR, #0F664h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     RAM_27.2

code_4715:                              ; CODE XREF: code_46E7+59↓j
                mov     DPTR, #0F664h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, #0Ch       ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     B, MD0          ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_4715
                setb    RAM_27.2
                mov     A, B            ; B-Register
                setb    C
                rrc     A
                mov     B, A            ; B-Register
                mov     A, R1
                clr     C
                subb    A, #1
                jnc     code_4755
                cpl     PSW.5           ; Program Status Word
                add     A, #3Ch ; '<'

code_4755:                              ; CODE XREF: code_46E7+68↑j
                mov     R1, A
                mov     C, PSW.5        ; Program Status Word
                ret
; End of function code_46E7

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_4759:                              ; CODE XREF: power_on__ignition_key_turned_+234D↑j
                jnb     RAM_2A.0, code_47A2
                mov     R1, #0FFh
                mov     R0, #99h
                mov     B, R0           ; B-Register

code_4762:                              ; CODE XREF: power_on__ignition_key_turned_+23DD↓j
                mov     A, @R0
                clr     C
                subb    A, R1
                jnc     code_476B
                mov     B, R0           ; B-Register
                mov     RAM_1, @R0

code_476B:                              ; CODE XREF: power_on__ignition_key_turned_+23D3↑j
                mov     A, R0
                add     A, #4
                mov     R0, A
                cjne    R0, #0A9h, code_4762
                mov     A, B            ; B-Register
                mov     R0, A
                clr     C
                subb    A, #99h
                rr      A
                rr      A
                mov     RAM_15, A
                mov     RAM_16, A
                mov     RAM_10, @R0
                inc     R0
                mov     RAM_11, @R0
                inc     R0
                mov     A, @R0
                mov     C, ACC.7        ; Accumulator
                mov     RAM_26.5, C
                anl     A, #7Fh
                mov     RAM_12, A
                inc     R0
                mov     RAM_13, @R0
                mov     A, RAM_16
                clr     C
                subb    A, #2
                jnc     code_4799
                add     A, #2

code_4799:                              ; CODE XREF: power_on__ignition_key_turned_+2403↑j
                rl      A
                add     A, #0A9h
                mov     R0, A
                mov     RAM_F, @R0
                inc     R0
                mov     RAM_14, @R0

code_47A2:                              ; CODE XREF: power_on__ignition_key_turned_:code_4759↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.0, code_47AD ; Accumulator
                ljmp    code_483F
; ---------------------------------------------------------------------------

code_47AD:                              ; CODE XREF: power_on__ignition_key_turned_+2415↑j
                mov     A, RAM_71
                jnb     ACC.1, code_47B5 ; Accumulator
                ljmp    code_4833
; ---------------------------------------------------------------------------

code_47B5:                              ; CODE XREF: power_on__ignition_key_turned_+241D↑j
                mov     C, RAM_23.2
                orl     C, RAM_23.3
                jnc     code_47D3
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.6, code_47EC ; Accumulator
                mov     DPTR, #87A1h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7A1h
                movx    A, @DPTR
                cjne    A, B, code_47D1 ; B-Register

code_47D1:                              ; CODE XREF: power_on__ignition_key_turned_+243C↑j
                sjmp    code_47EC
; ---------------------------------------------------------------------------

code_47D3:                              ; CODE XREF: power_on__ignition_key_turned_+2427↑j
                jnb     RAM_2C.1, code_47DF
                mov     DPTR, #879Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_47E6
; ---------------------------------------------------------------------------

code_47DF:                              ; CODE XREF: power_on__ignition_key_turned_:code_47D3↑j
                mov     DPTR, #879Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_47E6:                              ; CODE XREF: power_on__ignition_key_turned_+244B↑j
                mov     A, RAM_3A
                cjne    A, B, code_47EB ; B-Register

code_47EB:                              ; CODE XREF: power_on__ignition_key_turned_+2456↑j
                cpl     C

code_47EC:                              ; CODE XREF: power_on__ignition_key_turned_+242E↑j
                                        ; power_on__ignition_key_turned_:code_47D1↑j
                mov     DPTR, #0F7CEh
                movx    A, @DPTR
                mov     ACC.0, C        ; Accumulator
                mov     DPTR, #0F7CEh
                movx    @DPTR, A
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_4813 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_4813 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_4813 ; Accumulator
                jb      RAM_28.5, code_4813
                jnb     RAM_29.5, code_4813
                jb      RAM_29.4, code_4813
                jc      code_4818

code_4813:                              ; CODE XREF: power_on__ignition_key_turned_+2469↑j
                                        ; power_on__ignition_key_turned_+246E↑j ...
                mov     RAM_2C.1, C

code_4815:                              ; CODE XREF: power_on__ignition_key_turned_:code_4818↓j
                                        ; power_on__ignition_key_turned_+249A↓j
                clr     A
                sjmp    code_482F
; ---------------------------------------------------------------------------

code_4818:                              ; CODE XREF: power_on__ignition_key_turned_+247F↑j
                jb      RAM_2C.1, code_4815
                mov     DPTR, #879Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7CDh
                movx    A, @DPTR
                cjne    A, B, code_4829 ; B-Register

code_4829:                              ; CODE XREF: power_on__ignition_key_turned_+2494↑j
                cpl     C
                mov     RAM_2C.1, C
                jc      code_4815
                inc     A

code_482F:                              ; CODE XREF: power_on__ignition_key_turned_+2484↑j
                mov     DPTR, #0F7CDh
                movx    @DPTR, A

code_4833:                              ; CODE XREF: power_on__ignition_key_turned_+2420↑j
                mov     C, RAM_2C.1
                jnc     code_483C
                orl     RAM_7E, #2
                sjmp    code_483F
; ---------------------------------------------------------------------------

code_483C:                              ; CODE XREF: power_on__ignition_key_turned_+24A3↑j
                anl     RAM_7E, #0FDh

code_483F:                              ; CODE XREF: power_on__ignition_key_turned_+2418↑j
                                        ; power_on__ignition_key_turned_+24A8↑j
                mov     A, RAM_71
                jb      ACC.2, code_48A9 ; Accumulator
                mov     A, P7           ; Port 7, Analog/Digital Input
                mov     C, ACC.6        ; Accumulator
                jnc     code_4862
                jnb     RAM_2C.2, code_4856
                mov     DPTR, #87A3h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_485D
; ---------------------------------------------------------------------------

code_4856:                              ; CODE XREF: power_on__ignition_key_turned_+24B8↑j
                mov     DPTR, #87A2h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_485D:                              ; CODE XREF: power_on__ignition_key_turned_+24C2↑j
                mov     A, RAM_3A
                cjne    A, B, code_4862 ; B-Register

code_4862:                              ; CODE XREF: power_on__ignition_key_turned_+24B6↑j
                                        ; power_on__ignition_key_turned_+24CD↑j
                mov     DPTR, #0F7D0h
                movx    A, @DPTR
                mov     ACC.0, C        ; Accumulator
                mov     DPTR, #0F7D0h
                movx    @DPTR, A
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_4889 ; Accumulator
                mov     A, RAM_72
                jb      ACC.5, code_4889 ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_4889 ; Accumulator
                jb      RAM_28.5, code_4889
                jnb     RAM_29.5, code_4889
                jb      RAM_29.4, code_4889
                jc      code_488E

code_4889:                              ; CODE XREF: power_on__ignition_key_turned_+24DF↑j
                                        ; power_on__ignition_key_turned_+24E4↑j ...
                mov     RAM_2C.2, C

code_488B:                              ; CODE XREF: power_on__ignition_key_turned_:code_488E↓j
                                        ; power_on__ignition_key_turned_+2510↓j
                clr     A
                sjmp    code_48A5
; ---------------------------------------------------------------------------

code_488E:                              ; CODE XREF: power_on__ignition_key_turned_+24F5↑j
                jb      RAM_2C.2, code_488B
                mov     DPTR, #87A5h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7CFh
                movx    A, @DPTR
                cjne    A, B, code_489F ; B-Register

code_489F:                              ; CODE XREF: power_on__ignition_key_turned_+250A↑j
                cpl     C
                mov     RAM_2C.2, C
                jc      code_488B
                inc     A

code_48A5:                              ; CODE XREF: power_on__ignition_key_turned_+24FA↑j
                mov     DPTR, #0F7CFh
                movx    @DPTR, A

code_48A9:                              ; CODE XREF: power_on__ignition_key_turned_+24AF↑j
                mov     C, RAM_2C.2
                jnc     code_48B2
                orl     RAM_7E, #20h
                sjmp    code_48B5
; ---------------------------------------------------------------------------

code_48B2:                              ; CODE XREF: power_on__ignition_key_turned_+2519↑j
                anl     RAM_7E, #0DFh

code_48B5:                              ; CODE XREF: power_on__ignition_key_turned_+251E↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.2, code_48C0 ; Accumulator
                lcall   update_ram_63   ; get or set ram[0x63] based on ram[0x72]&0x20 ???

code_48C0:                              ; CODE XREF: power_on__ignition_key_turned_+2528↑j
                mov     DPTR, #8744h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.2, code_48CB ; Accumulator
                ljmp    code_4949
; ---------------------------------------------------------------------------

code_48CB:                              ; CODE XREF: power_on__ignition_key_turned_+2533↑j
                mov     A, RAM_5E
                clr     C
                subb    A, RAM_5D
                jc      code_48E9
                mov     DPTR, #8762h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_5E
                clr     C
                subb    A, B            ; B-Register
                jc      code_48E9
                clr     C
                subb    A, RAM_5D
                jc      code_48E9
                add     A, RAM_5D
                sjmp    code_48EB
; ---------------------------------------------------------------------------

code_48E9:                              ; CODE XREF: power_on__ignition_key_turned_+253E↑j
                                        ; power_on__ignition_key_turned_+254C↑j ...
                mov     A, RAM_5D

code_48EB:                              ; CODE XREF: power_on__ignition_key_turned_+2555↑j
                mov     RAM_5E, A
                mov     DPTR, #8ABBh
                mov     A, RAM_3F
                movc    A, @A+DPTR
                mov     B, RAM_5E       ; B-Register
                mul     AB
                rlc     A
                mov     A, B            ; B-Register
                rlc     A
                mov     B, A            ; B-Register
                mov     DPTR, #8ADBh
                mov     A, RAM_3F
                movc    A, @A+DPTR
                jc      code_4915
                jb      ACC.7, code_490E ; Accumulator
                add     A, B            ; B-Register
                jnc     code_491E
                sjmp    code_491C
; ---------------------------------------------------------------------------

code_490E:                              ; CODE XREF: power_on__ignition_key_turned_+2573↑j
                add     A, B            ; B-Register
                jc      code_491E
                clr     A
                sjmp    code_491E
; ---------------------------------------------------------------------------

code_4915:                              ; CODE XREF: power_on__ignition_key_turned_+2571↑j
                jnb     ACC.7, code_491C ; Accumulator
                add     A, B            ; B-Register
                jnc     code_491E

code_491C:                              ; CODE XREF: power_on__ignition_key_turned_+257A↑j
                                        ; power_on__ignition_key_turned_:code_4915↑j
                mov     A, #0FFh

code_491E:                              ; CODE XREF: power_on__ignition_key_turned_+2578↑j
                                        ; power_on__ignition_key_turned_+257E↑j ...
                mov     DPTR, #0F775h
                movx    @DPTR, A
                mov     R0, #0Ah
                mov     R1, #0F5h
                lcall   code_5F97
                mov     B, A            ; B-Register
                mov     R0, #41h ; 'A'
                mov     R1, #3
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     R2, RAM_0
                mov     R3, RAM_1
                mov     R0, #41h ; 'A'
                mov     R1, #3
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     RAM_5F, R2
                mov     RAM_60, R3
                mov     RAM_61, R0
                mov     RAM_62, R1
                setb    IEN0.7          ; Interrupt Enable Register 0

code_4949:                              ; CODE XREF: power_on__ignition_key_turned_+2536↑j
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.3, code_4954 ; Accumulator
                ljmp    code_495D
; ---------------------------------------------------------------------------

code_4954:                              ; CODE XREF: power_on__ignition_key_turned_+25BC↑j
                mov     DPTR, #0F7A5h
                movx    A, @DPTR
                mov     CMH5, A         ; Compare Register 5, High Byte (RMAP=0)
                mov     CML5, #0Fh      ; Compare Register 5, Low Byte (RMAP=0)

code_495D:                              ; CODE XREF: power_on__ignition_key_turned_+25BF↑j
                mov     DPTR, #0F7A3h
                movx    A, @DPTR
                mov     B, #3Eh ; '>'   ; B-Register
                mul     AB
                rlc     A
                mov     A, B            ; B-Register
                addc    A, #0
                mov     RAM_6B, A
                jb      RAM_2A.1, code_497D
                mov     DPTR, #8749h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_49
                clr     C
                subb    A, B            ; B-Register
                jnc     code_497F

code_497D:                              ; CODE XREF: power_on__ignition_key_turned_+25DA↑j
                sjmp    code_497F
; ---------------------------------------------------------------------------

code_497F:                              ; CODE XREF: power_on__ignition_key_turned_+25E9↑j
                                        ; power_on__ignition_key_turned_:code_497D↑j
                mov     DPTR, #874Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, RAM_49       ; B-Register
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_27.4, C
                jb      RAM_28.1, code_4992
                ljmp    code_4A32
; ---------------------------------------------------------------------------

code_4992:                              ; CODE XREF: power_on__ignition_key_turned_+25FA↑j
                jnb     RAM_2A.4, code_499B
                mov     R0, #0
                mov     R1, #0
                sjmp    code_49F2
; ---------------------------------------------------------------------------

code_499B:                              ; CODE XREF: power_on__ignition_key_turned_:code_4992↑j
                clr     RAM_27.2

code_499D:                              ; CODE XREF: power_on__ignition_key_turned_+2641↓j
                mov     DPTR, #0F6D0h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     B, RAM_49       ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, RAM_58
                add     A, #80h
                mov     R2, A
                clr     A
                addc    A, #0
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R2         ; Multiplication/Division Register 4
                mov     MD5, A          ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_499D
                setb    RAM_27.2
                mov     B, RAM_67       ; B-Register
                mov     R2, RAM_0
                mov     R3, RAM_1
                cpl     B.7             ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, RAM_67
                jnb     ACC.7, code_49EC ; Accumulator
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;

code_49EC:                              ; CODE XREF: power_on__ignition_key_turned_+2654↑j
                mov     B, #2Fh ; '/'   ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)

code_49F2:                              ; CODE XREF: power_on__ignition_key_turned_+2607↑j
                mov     DPTR, #0F79Eh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     B, #0CDh        ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     RAM_27.2

code_4A02:                              ; CODE XREF: power_on__ignition_key_turned_+2692↓j
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, #54h ; 'T' ; Multiplication/Division Register 4
                mov     MD5, #1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     A, MD0          ; Multiplication/Division Register 0
                mov     R2, MD1         ; Multiplication/Division Register 1
                mov     R2, MD2         ; Multiplication/Division Register 2
                mov     R2, MD3         ; Multiplication/Division Register 3
                mov     R2, MD4         ; Multiplication/Division Register 4
                mov     R2, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_4A02
                setb    RAM_27.2
                add     A, #1Ah
                mov     B, #7Dh ; '}'   ; B-Register
                mul     AB
                mov     RAM_69, B       ; B-Register

code_4A32:                              ; CODE XREF: power_on__ignition_key_turned_+25FD↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.6, code_4AB8 ; Accumulator
                mov     DPTR, #0F7A0h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, #1Eh, code_4A73
                clr     A
                movx    @DPTR, A
                clr     TCON.6          ; Timer Control Register
                mov     B, TL1          ; Timer 1, Low Byte
                mov     A, TH1          ; Timer 1, High Byte
                mov     TL1, #0         ; Timer 1, Low Byte
                mov     TH1, #0         ; Timer 1, High Byte
                setb    TCON.6          ; Timer Control Register
                jz      code_4A59
                mov     B, #0FFh        ; B-Register

code_4A59:                              ; CODE XREF: power_on__ignition_key_turned_+26C2↑j
                mov     A, B            ; B-Register
                mov     DPTR, #0F7A1h
                movx    @DPTR, A
                mov     B, A            ; B-Register
                mov     DPTR, #8797h
                clr     A
                movc    A, @A+DPTR
                jb      RAM_27.5, code_4A6E
                mov     DPTR, #8798h
                clr     A
                movc    A, @A+DPTR

code_4A6E:                              ; CODE XREF: power_on__ignition_key_turned_+26D4↑j
                clr     C
                subb    A, B            ; B-Register
                mov     RAM_27.5, C

code_4A73:                              ; CODE XREF: power_on__ignition_key_turned_+26AE↑j
                jnb     RAM_27.5, code_4A7A
                clr     RAM_22.2
                sjmp    code_4A99
; ---------------------------------------------------------------------------

code_4A7A:                              ; CODE XREF: power_on__ignition_key_turned_:code_4A73↑j
                jb      RAM_22.2, code_4AB8
                mov     DPTR, #8799h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_4C
                cjne    A, B, code_4A89 ; B-Register

code_4A89:                              ; CODE XREF: power_on__ignition_key_turned_+26F4↑j
                jc      code_4A99
                mov     DPTR, #879Ah
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_52
                cjne    A, B, code_4A97 ; B-Register

code_4A97:                              ; CODE XREF: power_on__ignition_key_turned_+2702↑j
                jnc     code_4AA0

code_4A99:                              ; CODE XREF: power_on__ignition_key_turned_+26E6↑j
                                        ; power_on__ignition_key_turned_:code_4A89↑j
                clr     A
                mov     DPTR, #0F7A2h
                movx    @DPTR, A
                sjmp    code_4AB8
; ---------------------------------------------------------------------------

code_4AA0:                              ; CODE XREF: power_on__ignition_key_turned_:code_4A97↑j
                jnb     RAM_28.1, code_4AB8
                mov     DPTR, #879Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7A2h
                movx    A, @DPTR
                inc     A
                mov     DPTR, #0F7A2h
                movx    @DPTR, A
                cjne    A, B, code_4AB8 ; B-Register
                setb    RAM_22.2

code_4AB8:                              ; CODE XREF: power_on__ignition_key_turned_+26A5↑j
                                        ; power_on__ignition_key_turned_:code_4A7A↑j ...
                jb      RAM_2B.2, code_4ABE
                ljmp    code_4B41
; ---------------------------------------------------------------------------

code_4ABE:                              ; CODE XREF: power_on__ignition_key_turned_:code_4AB8↑j
                mov     DPTR, #0F79Bh
                movx    A, @DPTR
                mov     R0, A
                anl     A, #0Fh
                mov     B, A            ; B-Register
                mov     DPTR, #0F79Dh
                movx    A, @DPTR
                mov     R1, A
                anl     A, #0Fh
                clr     C
                subb    A, B            ; B-Register
                lcall   code_61B1
                mov     B, A            ; B-Register
                mov     A, R0
                anl     A, #0F0h
                swap    A
                mov     R0, A
                mov     A, R1
                anl     A, #0F0h
                swap    A
                clr     C
                subb    A, R0
                lcall   code_61B1
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4AEA
                clr     A

code_4AEA:                              ; CODE XREF: power_on__ignition_key_turned_+2755↑j
                add     A, B            ; B-Register
                mov     B, A            ; B-Register
                mov     DPTR, #808Fh
                clr     A
                movc    A, @A+DPTR
                mul     AB
                mov     B, A            ; B-Register
                mov     DPTR, #0F79Ch
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jnc     code_4B01
                mov     A, #0

code_4B01:                              ; CODE XREF: power_on__ignition_key_turned_+276B↑j
                mov     R0, A
                mov     DPTR, #0F79Ch
                movx    A, @DPTR
                add     A, B            ; B-Register
                jnc     code_4B0C
                mov     A, #0FFh

code_4B0C:                              ; CODE XREF: power_on__ignition_key_turned_+2776↑j
                mov     R1, A
                mov     DPTR, #0F79Bh
                movx    A, @DPTR
                mov     DPTR, #0F500h
                mov     DPL, A          ; Data Pointer, Low Byte
                jnb     RAM_2D.3, code_4B1B
                dec     DPH             ; Data Pointer, High Byte

code_4B1B:                              ; CODE XREF: power_on__ignition_key_turned_+2784↑j
                movx    A, @DPTR
                mov     R2, A
                lcall   code_5F97
                mov     R0, #40h ; '@'
                mov     R1, #0C0h
                lcall   code_5F97
                movx    @DPTR, A
                mov     B, A            ; B-Register
                mov     A, DPL          ; Data Pointer, Low Byte
                cjne    A, RAM_53, code_4B37
                mov     A, R2
                clr     C
                subb    A, B            ; B-Register
                add     A, RAM_66
                mov     RAM_66, A

code_4B37:                              ; CODE XREF: power_on__ignition_key_turned_+279A↑j
                mov     DPTR, #0F79Bh
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                jnz     code_4B41
                clr     RAM_2B.2

code_4B41:                              ; CODE XREF: power_on__ignition_key_turned_+2729↑j
                                        ; power_on__ignition_key_turned_+27AB↑j
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #7Eh ; '~'
                mov     A, R1
                push    ACC             ; Accumulator
                mov     R1, #7Ch ; '|'
                anl     P6, #0BFh       ; Port 6 (PDIR=0)

code_4B4E:                              ; CODE XREF: power_on__ignition_key_turned_+27E8↓j
                mov     A, @R1
                cpl     A
                anl     A, @R0
                inc     R0
                mov     DPL, @R0        ; Data Pointer, Low Byte
                mov     @R0, A
                mov     B, #8           ; B-Register

code_4B58:                              ; CODE XREF: power_on__ignition_key_turned_+27CF↓j
                rrc     A
                mov     P5.5, C         ; Port 5 (PDIR=0)
                setb    P5.6            ; Port 5 (PDIR=0)
                mov     C, P5.7         ; Port 5 (PDIR=0)
                clr     P5.6            ; Port 5 (PDIR=0)
                djnz    B, code_4B58    ; B-Register
                rrc     A
                cpl     A
                xrl     A, DPL          ; Data Pointer, Low Byte
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, DPL          ; Data Pointer, Low Byte
                anl     A, DPH          ; Data Pointer, High Byte
                orl     A, @R1
                mov     @R1, A
                inc     R1
                mov     A, DPL          ; Data Pointer, Low Byte
                cpl     A
                anl     A, DPH          ; Data Pointer, High Byte
                orl     A, @R1
                mov     @R1, A
                inc     R1
                inc     R0
                cjne    R0, #80h, code_4B4E
                orl     P6, #40h        ; Port 6 (PDIR=0)
                pop     ACC             ; Accumulator
                mov     R1, A
                pop     ACC             ; Accumulator
                mov     R0, A
                clr     C
                orl     C, /RAM_28.3
                orl     C, /RAM_28.4
                jnc     code_4B97
                clr     A
                mov     DPTR, #0F67Ch
                movx    @DPTR, A
                setb    RAM_2C.0
                ljmp    code_4FAC
; ---------------------------------------------------------------------------

code_4B97:                              ; CODE XREF: power_on__ignition_key_turned_+27F9↑j
                mov     A, P6           ; Port 6 (PDIR=0)
                anl     A, #10h
                jnz     code_4B9F
                clr     RAM_22.0

code_4B9F:                              ; CODE XREF: power_on__ignition_key_turned_+2809↑j
                mov     C, RAM_2D.4
                mov     RAM_22.1, C
                mov     C, RAM_2B.7
                orl     C, RAM_2A.1
                jnc     code_4BAB
                clr     RAM_22.1

code_4BAB:                              ; CODE XREF: power_on__ignition_key_turned_+2815↑j
                mov     R0, #22h ; '"'
                mov     R1, #80h
                mov     R2, #3

code_4BB1:                              ; CODE XREF: power_on__ignition_key_turned_+2824↓j
                mov     A, @R0
                orl     A, @R1
                mov     @R1, A
                inc     R0
                inc     R1
                djnz    R2, code_4BB1
                mov     DPTR, #0F67Ch
                movx    A, @DPTR
                cjne    A, #0Fh, code_4BBF

code_4BBF:                              ; CODE XREF: power_on__ignition_key_turned_+282A↑j
                jc      code_4BC3
                mov     A, #0Fh

code_4BC3:                              ; CODE XREF: power_on__ignition_key_turned_:code_4BBF↑j
                mov     B, A            ; B-Register
                rl      A
                add     A, B            ; B-Register
                mov     DPTR, #4BCCh
                jmp     @A+DPTR
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_
; ---------------------------------------------------------------------------
                db    2
                db  4Bh ; K
                db 0FCh
                db    2
                db  4Bh ; K
                db 0FFh
                db    2
                db  4Ch ; L
                db    2
                db    2
                db  4Ch ; L
                db  82h
                db    2
                db  4Dh ; M
                db    5
                db    2
                db  4Dh ; M
                db    8
                db    2
                db  4Dh ; M
                db  0Bh
                db    2
                db  4Dh ; M
                db  0Eh
                db    2
                db  4Dh ; M
                db  11h
                db    2
                db  4Dh ; M
                db  24h ; $
                db    2
                db  4Dh ; M
                db 0AFh
                db    2
                db  4Dh ; M
                db 0F9h
                db    2
                db  4Eh ; N
                db  69h ; i
                db    2
                db  4Eh ; N
                db 0EBh
                db    2
                db  4Eh ; N
                db 0EEh
                db    2
                db  4Fh ; O
                db  7Eh ; ~
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db  78h ; x
                db  83h
                db  79h ; y
                db  7Ch ; |
                db  7Ah ; z
                db    0
                db 0C2h
                db 0AFh
                db 0E7h
                db  77h ; w
                db    0
                db    9
                db  87h
                db 0F0h
                db  77h ; w
                db    0
                db 0D2h
                db 0AFh
                db    9
                db  30h ; 0
                db 0E0h
                db    3
                db  43h ; C
                db    2
                db    3
                db  30h ; 0
                db 0F0h
                db    3
                db  43h ; C
                db    2
                db    3
                db  30h ; 0
                db 0E1h
                db    3
                db  43h ; C
                db    2
                db    4
                db  30h ; 0
                db 0F1h
                db    3
                db  43h ; C
                db    2
                db    8
                db  30h ; 0
                db 0E2h
                db    3
                db  43h ; C
                db    2
                db  10h
                db  30h ; 0
                db 0F2h
                db    3
                db  43h ; C
                db    2
                db  20h
                db  30h ; 0
                db 0E3h
                db    3
                db  43h ; C
                db    2
                db  40h ; @
                db  30h ; 0
                db 0F3h
                db    3
                db  43h ; C
                db    2
                db  80h
                db 0A6h
                db    2
                db    8
                db  7Ah ; z
                db    0
                db  30h ; 0
                db 0E4h
                db    3
                db  43h ; C
                db    2
                db    3
                db  30h ; 0
                db 0F4h
                db    3
                db  43h ; C
                db    2
                db    3
                db  30h ; 0
                db 0E5h
                db    3
                db  43h ; C
                db    2
                db    4
                db  30h ; 0
                db 0F5h
                db    3
                db  43h ; C
                db    2
                db    8
                db  30h ; 0
                db 0E6h
                db    3
                db  43h ; C
                db    2
                db  10h
                db  30h ; 0
                db 0F6h
                db    3
                db  43h ; C
                db    2
                db  20h
                db  30h ; 0
                db 0E7h
                db    3
                db  43h ; C
                db    2
                db  40h ; @
                db  30h ; 0
                db 0F7h
                db    3
                db  43h ; C
                db    2
                db  80h
                db 0A6h
                db    2
                db    8
                db  7Ah ; z
                db    0
                db    2
                db  4Fh ; O
                db  9Dh
                db  78h ; x
                db  85h
                db  30h ; 0
                db 0EFh
                db  43h ; C
                db  53h ; S
                db 0FAh
                db  7Fh ; 
                db    0
                db 0D2h
                db 0EEh
                db    0
                db 0C2h
                db 0EEh
                db    0
                db 0C2h
                db 0D5h
                db  20h
                db 0D5h
                db  0Ch
                db  79h ; y
                db    8
                db 0A2h
                db 0EFh
                db 0D2h
                db 0EEh
                db  13h
                db 0C2h
                db 0EEh
                db 0D9h
                db 0F7h
                db 0F9h
                db 0B2h
                db 0D5h
                db 0E9h
                db  23h ; #
                db  23h ; #
                db 0F9h
                db 0F4h
                db  54h ; T
                db    3
                db 0A2h
                db 0E0h
                db  82h
                db 0E1h
                db  34h ; 4
                db    0
                db 0F5h
                db 0F0h
                db 0E9h
                db  23h ; #
                db  23h ; #
                db 0F9h
                db 0F4h
                db  54h ; T
                db    3
                db 0A2h
                db 0E0h
                db  82h
                db 0E1h
                db  34h ; 4
                db    0
                db 0C4h
                db  45h ; E
                db 0F0h
                db 0F6h
                db    8
                db 0B8h
                db  89h
                db 0CBh
                db  80h
                db  35h ; 5
                db  53h ; S
                db 0FAh
                db  7Fh ; 
                db  79h ; y
                db    2
                db 0A2h
                db 0EFh
                db 0D2h
                db 0EEh
                db  33h ; 3
                db 0C2h
                db 0EEh
                db 0D9h
                db 0F7h
                db 0F4h
                db  54h ; T
                db    3
                db 0A2h
                db 0E0h
                db  82h
                db 0E1h
                db  34h ; 4
                db    0
                db 0F5h
                db 0F0h
                db  79h ; y
                db    2
                db 0A2h
                db 0EFh
                db 0D2h
                db 0EEh
                db  33h ; 3
                db 0C2h
                db 0EEh
                db 0D9h
                db 0F7h
                db 0F4h
                db  54h ; T
                db    3
                db 0A2h
                db 0E0h
                db  82h
                db 0E1h
                db  34h ; 4
                db    0
                db 0C4h
                db  45h ; E
                db 0F0h
                db 0F6h
                db    8
                db 0B8h
                db  89h
                db 0CEh
                db  43h ; C
                db 0FAh
                db  80h
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db 0A2h
                db  6Dh ; m
                db  92h
                db  0Ah
                db 0A2h
                db  6Eh ; n
                db  92h
                db  0Bh
                db 0E5h
                db 0FAh
                db  54h ; T
                db  10h
                db  70h ; p
                db    2
                db 0C2h
                db    7
                db    2
                db  4Fh ; O
                db  9Dh
                db  90h
                db  87h
                db  3Fh ; ?
                db 0E4h
                db  93h
                db  20h
                db 0E0h
                db    2
                db 0C2h
                db    7
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E6h
                db    6
                db  78h ; x
                db  83h
                db 0E6h
                db  54h ; T
                db 0FCh
                db 0F6h
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E0h
                db    6
                db  78h ; x
                db  84h
                db 0E6h
                db  54h ; T
                db  3Fh ; ?
                db 0F6h
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E1h
                db    6
                db  78h ; x
                db  83h
                db 0E6h
                db  54h ; T
                db  3Fh ; ?
                db 0F6h
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E5h
                db    6
                db  78h ; x
                db  84h
                db 0E6h
                db  54h ; T
                db 0FCh
                db 0F6h
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E7h
                db    6
                db  78h ; x
                db  84h
                db 0E6h
                db  54h ; T
                db 0F3h
                db 0F6h
                db  90h
                db  87h
                db  3Fh ; ?
                db 0E4h
                db  93h
                db  30h ; 0
                db 0E1h
                db    8
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E4h
                db    6
                db  78h ; x
                db  87h
                db 0E6h
                db  54h ; T
                db  8Fh
                db 0F6h
                db  90h
                db  87h
                db  44h ; D
                db 0E4h
                db  93h
                db  20h
                db 0E0h
                db    6
                db  78h ; x
                db  83h
                db 0E6h
                db  54h ; T
                db 0F3h
                db 0F6h
                db  90h
                db  87h
                db  43h ; C
                db 0E4h
                db  93h
                db  20h
                db 0E3h
                db    6
                db  78h ; x
                db  88h
                db 0E6h
                db  54h ; T
                db  8Fh
                db 0F6h
                db  78h ; x
                db  84h
                db 0E6h
                db  54h ; T
                db 0CFh
                db 0F6h
                db    2
                db  4Fh ; O
                db  9Dh
                db  90h
                db 0F6h
                db    5
                db  79h ; y
                db  20h
                db  7Ah ; z
                db    2
                db  74h ; t
                db  20h
                db 0C3h
                db  99h
                db  23h ; #
                db  23h ; #
                db  23h ; #
                db  54h ; T
                db 0F8h
                db  24h ; $
                db  0Fh
                db 0B4h
                db    8
                db    0
                db  40h ; @
                db    2
                db  74h ; t
                db    8
                db 0F5h
                db 0F0h
                db 0C2h
                db 0AFh
                db 0E4h
                db 0C7h
                db 0D2h
                db 0AFh
                db  12h
                db  6Dh ; m
                db  0Ah
                db    9
                db 0DAh
                db 0E0h
                db  79h ; y
                db  80h
                db  7Ah ; z
                db    3
                db  74h ; t
                db  80h
                db 0C3h
                db  99h
                db  23h ; #
                db  23h ; #
                db  23h ; #
                db  54h ; T
                db 0F8h
                db  24h ; $
                db  16h
                db 0B4h
                db    8
                db    0
                db  40h ; @
                db    2
                db  74h ; t
                db    8
                db 0F5h
                db 0F0h
                db 0E4h
                db 0C7h
                db  12h
                db  6Dh ; m
                db  0Ah
                db    9
                db 0DAh
                db 0E4h
                db    2
                db  4Fh ; O
                db  9Dh
                db 0C2h
                db 0D5h
                db  20h
                db  14h
                db  0Fh
                db  90h
                db 0F6h
                db  79h ; y
                db 0E0h
                db 0B4h
                db    2
                db    0
                db  40h ; @
                db    6
                db  20h
                db  50h ; P
                db    5
                db  30h ; 0
                db  51h ; Q
                db    2
                db 0D2h
                db 0D5h
                db  90h
                db 0F6h
                db  2Ah ; *
                db  79h ; y
                db  83h
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db    9
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  13h
                db  13h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db    9
                db    2
                db  4Fh ; O
                db  9Dh
                db 0C2h
                db 0D5h
                db  20h
                db  14h
                db  0Fh
                db  90h
                db 0F6h
                db  79h ; y
                db 0E0h
                db 0B4h
                db    2
                db    0
                db  40h ; @
                db    6
                db  20h
                db  50h ; P
                db    5
                db  30h ; 0
                db  51h ; Q
                db    2
                db 0D2h
                db 0D5h
                db  90h
                db 0F6h
                db  38h ; 8
                db  79h ; y
                db  85h
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db    9
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db    9
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db    9
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    3
                db  12h
                db  6Dh ; m
                db  0Ah
                db  13h
                db    9
                db    2
                db  4Fh ; O
                db  9Dh
                db    2
                db  4Fh ; O
                db  9Dh
                db  20h
                db  50h ; P
                db    3
                db    2
                db  4Fh ; O
                db  3Ah ; :
                db 0F5h
                db 0F0h
                db  75h ; u
                db 0DCh
                db    5
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0E5h
                db 0D9h
                db 0B4h
                db  14h
                db    0
                db  50h ; P
                db  0Ch
                db 0E8h
                db 0C0h
                db 0E0h
                db  78h ; x
                db  89h
                db  74h ; t
                db    8
                db  46h ; F
                db 0F6h
                db 0D0h
                db 0E0h
                db 0F8h
                db 0E5h
                db 0F0h
                db 0F5h
                db 0F0h
                db  75h ; u
                db 0DCh
                db    4
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0E5h
                db 0D9h
                db 0B4h
                db  14h
                db    0
                db  50h ; P
                db  0Ch
                db 0E8h
                db 0C0h
                db 0E0h
                db  78h ; x
                db  89h
                db  74h ; t
                db    2
                db  46h ; F
                db 0F6h
                db 0D0h
                db 0E0h
                db 0F8h
                db 0E5h
                db 0F0h
                db 0C2h
                db 0D5h
                db  20h
                db  14h
                db  0Fh
                db  90h
                db 0F6h
                db  79h ; y
                db 0E0h
                db 0B4h
                db    2
                db    0
                db  40h ; @
                db    6
                db  20h
                db  50h ; P
                db    5
                db  30h ; 0
                db  51h ; Q
                db    2
                db 0D2h
                db 0D5h
                db  90h
                db 0F6h
                db  50h ; P
                db  79h ; y
                db  89h
                db 0E4h
                db 0C7h
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  33h ; 3
                db  33h ; 3
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  30h ; 0
                db 0D5h
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db  33h ; 3
                db  33h ; 3
                db  75h ; u
                db 0F0h
                db    2
                db  12h
                db  6Dh ; m
                db  0Ah
                db    2
                db  4Fh ; O
                db  9Dh
                db  90h
                db 0F6h
                db  7Ch ; |
                db 0E0h
                db 0C3h
                db  94h
                db  0Fh
                db  70h ; p
                db    4
                db  90h
                db 0F7h
                db 0C1h
                db 0F0h
                db  75h ; u
                db 0F0h
                db    3
                db 0A4h
                db 0F8h
                db 0B4h
                db  53h ; S
                db    0
                db  50h ; P
                db    8
                db  7Ah ; z
                db    3
                db  12h
                db  6Ch ; l
                db  5Dh ; ]
                db    2
                db  4Fh ; O
                db  9Dh
                db  90h
                db 0F6h
                db  7Ch ; |
                db 0E0h
                db    4
                db 0B4h
                db  32h ; 2
                db    1
                db 0E4h
                db 0F0h
                db 0E5h
                db  71h ; q
                db  30h ; 0
                db 0E0h
                db    5
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_4FAC:                              ; CODE XREF: power_on__ignition_key_turned_+2802↑j
                mov     A, #3
                ljmp    code_50BC
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_
; ---------------------------------------------------------------------------
                db  90h
                db 0F7h
                db 0BEh
                db 0E0h
                db 0B4h
                db    3
                db  11h
                db 0C3h
                db  90h
                db 0F7h
                db 0C0h
                db 0E0h
                db  60h ; `
                db    1
                db 0D3h
                db 0A0h
                db  43h ; C
                db 0A0h
                db  44h ; D
                db  92h
                db  60h ; `
                db    2
                db  50h ; P
                db 0B8h
                db 0B4h
                db    0
                db    2
                db  80h
                db    3
                db    2
                db  50h ; P
                db 0B8h
                db  20h
                db  50h ; P
                db    7
                db 0A2h
                db  72h ; r
                db  92h
                db  60h ; `
                db    2
                db  50h ; P
                db 0B8h
                db  90h
                db 0F7h
                db 0BFh
                db 0E0h
                db 0B4h
                db    0
                db    2
                db  80h
                db  17h
                db  74h ; t
                db 0FFh
                db  90h
                db 0F7h
                db 0C2h
                db 0F0h
                db 0E4h
                db  90h
                db 0F7h
                db 0C4h
                db 0F0h
                db  90h
                db 0F7h
                db 0C5h
                db 0F0h
                db  90h
                db 0F7h
                db 0C6h
                db 0F0h
                db 0C2h
                db  60h ; `
                db  80h
                db  47h ; G
                db  90h
                db 0F7h
                db 0C3h
                db 0E0h
                db  14h
                db 0F0h
                db  60h ; `
                db    3
                db    2
                db  50h ; P
                db 0B8h
                db 0B2h
                db  60h ; `
                db  20h
                db  60h ; `
                db  11h
                db  90h
                db 0F7h
                db 0C6h
                db 0E0h
                db  14h
                db 0F0h
                db  60h ; `
                db  19h
                db  74h ; t
                db  19h
                db  90h
                db 0F7h
                db 0C3h
                db 0F0h
                db    2
                db  50h ; P
                db 0B8h
                db  90h
                db 0F7h
                db 0C5h
                db 0E0h
                db 0B4h
                db    3
                db 0F0h
                db  74h ; t
                db  32h ; 2
                db  90h
                db 0F7h
                db 0C3h
                db 0F0h
                db    2
                db  50h ; P
                db 0B8h
                db  90h
                db 0F7h
                db 0C5h
                db 0E0h
                db  14h
                db 0F0h
                db  60h ; `
                db    8
                db  74h ; t
                db  4Bh ; K
                db  90h
                db 0F7h
                db 0C3h
                db 0F0h
                db  80h
                db  28h ; (
                db  90h
                db 0F7h
                db 0C4h
                db 0E0h
                db  14h
                db 0F0h
                db  74h ; t
                db    3
                db  90h
                db 0F7h
                db 0C5h
                db 0F0h
                db  74h ; t
                db 0C8h
                db  90h
                db 0F7h
                db 0C3h
                db 0F0h
                db  90h
                db 0F7h
                db 0C4h
                db 0E0h
                db  70h ; p
                db  10h
                db  74h ; t
                db    3
                db 0F0h
                db  90h
                db 0F7h
                db 0C2h
                db 0E0h
                db    4
                db 0F0h
                db 0B4h
                db  54h ; T
                db  0Ah
                db 0E4h
                db 0F0h
                db  80h
                db  16h
                db  90h
                db 0F7h
                db 0C2h
                db 0E0h
                db  60h ; `
                db  10h
                db  90h
                db 0F6h
                db    4
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  34h ; 4
                db    0
                db 0F5h
                db  83h
                db 0E0h
                db  60h ; `
                db 0DDh
                db  90h
                db 0F7h
                db 0C2h
                db 0E0h
                db  75h ; u
                db 0F0h
                db    4
                db 0A4h
                db  90h
                db    6
                db  38h ; 8
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  35h ; 5
                db 0F0h
                db 0F5h
                db  83h
                db 0E4h
                db  93h
                db 0F5h
                db 0F0h
                db  90h
                db 0F7h
                db 0C5h
                db 0E0h
                db 0C5h
                db 0F0h
                db  30h ; 0
                db 0F1h
                db  12h
                db  30h ; 0
                db 0F0h
                db  0Bh
                db  75h ; u
                db 0F0h
                db  64h ; d
                db  84h
                db  70h ; p
                db  0Fh
                db  74h ; t
                db    2
                db 0F0h
                db 0E5h
                db 0F0h
                db  75h ; u
                db 0F0h
                db  0Ah
                db  84h
                db  75h ; u
                db 0F0h
                db  0Ah
                db  84h
                db 0E5h
                db 0F0h
                db  90h
                db 0F7h
                db 0C6h
                db 0F0h
                db  90h
                db 0F7h
                db 0BEh
                db 0E0h
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_50BC:                              ; CODE XREF: power_on__ignition_key_turned_+2C1C↑j
                mov     DPTR, #0F7BFh
                movx    @DPTR, A
                mov     C, RAM_2C.0
                jnc     code_50C9
                orl     RAM_7E, #80h
                sjmp    code_50CC
; ---------------------------------------------------------------------------

code_50C9:                              ; CODE XREF: power_on__ignition_key_turned_+2D30↑j
                anl     RAM_7E, #7Fh

code_50CC:                              ; CODE XREF: power_on__ignition_key_turned_+2D35↑j
                jb      RAM_27.3, code_50DE
                mov     DPTR, #0F7C7h
                movx    A, @DPTR
                cjne    A, #55h, code_50DB ; 'U'
                anl     P6, #0EFh       ; Port 6 (PDIR=0)
                sjmp    code_50DE
; ---------------------------------------------------------------------------

code_50DB:                              ; CODE XREF: power_on__ignition_key_turned_+2D41↑j
                orl     P6, #10h        ; Port 6 (PDIR=0)

code_50DE:                              ; CODE XREF: power_on__ignition_key_turned_:code_50CC↑j
                                        ; power_on__ignition_key_turned_+2D47↑j
                mov     B, #20h ; ' '   ; B-Register
                mov     A, RAM_75
                jb      ACC.6, code_50ED ; Accumulator
                mov     A, RAM_75
                jb      ACC.7, code_5102 ; Accumulator
                sjmp    code_5118
; ---------------------------------------------------------------------------

code_50ED:                              ; CODE XREF: power_on__ignition_key_turned_+2D51↑j
                mov     A, RAM_75
                jb      ACC.7, code_5118 ; Accumulator
                orl     RAM_75, #80h
                anl     RAM_75, #0BFh
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #5       ; Data Pointer Select Register
                mov     DPTR, #8000h
                sjmp    code_5107
; ---------------------------------------------------------------------------

code_5102:                              ; CODE XREF: power_on__ignition_key_turned_+2D56↑j
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #5       ; Data Pointer Select Register

code_5107:                              ; CODE XREF: power_on__ignition_key_turned_+2D6E↑j
                                        ; power_on__ignition_key_turned_+2D79↓j
                clr     A
                movc    A, @A+DPTR
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_5107    ; B-Register
                mov     A, DPH          ; Data Pointer, High Byte
                cjne    A, #0F4h, code_5116
                orl     RAM_75, #40h

code_5116:                              ; CODE XREF: power_on__ignition_key_turned_+2D7E↑j
                pop     DPSEL           ; Data Pointer Select Register

code_5118:                              ; CODE XREF: power_on__ignition_key_turned_+2D59↑j
                                        ; power_on__ignition_key_turned_+2D5D↑j
                mov     DPTR, #0F7C8h
                movx    A, @DPTR
                jz      code_5121
                ljmp    code_518F
; ---------------------------------------------------------------------------

code_5121:                              ; CODE XREF: power_on__ignition_key_turned_+2D8A↑j
                mov     A, RAM_75
                jnb     ACC.5, code_5143 ; Accumulator
                anl     RAM_75, #0DFh
                mov     A, #10h
                mov     DPTR, #0F7C8h
                movx    @DPTR, A
                mov     R0, #0CDh
                mov     R1, #0F8h
                mov     DPTR, #0F7C9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F7CBh
                movx    @DPTR, A
                sjmp    code_518F
; ---------------------------------------------------------------------------

code_5143:                              ; CODE XREF: power_on__ignition_key_turned_+2D91↑j
                mov     A, RAM_75
                jnb     ACC.4, code_5165 ; Accumulator
                anl     RAM_75, #0EFh
                mov     A, #20h ; ' '
                mov     DPTR, #0F7C8h
                movx    @DPTR, A
                mov     R0, #0
                mov     R1, #0F5h
                mov     DPTR, #0F7C9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, #80h
                mov     DPTR, #0F7CBh
                movx    @DPTR, A
                sjmp    code_518F
; ---------------------------------------------------------------------------

code_5165:                              ; CODE XREF: power_on__ignition_key_turned_+2DB3↑j
                mov     A, RAM_75
                jnb     ACC.3, code_5192 ; Accumulator
                anl     RAM_75, #0F7h
                mov     A, #0Ah
                mov     DPTR, #0F7C8h
                movx    @DPTR, A
                mov     R0, #5
                mov     R1, #0F6h
                mov     DPTR, #0F7C9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F7CBh
                movx    @DPTR, A
                mov     B, #3           ; B-Register
                sjmp    code_518A
; ---------------------------------------------------------------------------

code_518A:                              ; CODE XREF: power_on__ignition_key_turned_+2DF6↑j
                lcall   code_69A2
                sjmp    code_5192
; ---------------------------------------------------------------------------

code_518F:                              ; CODE XREF: power_on__ignition_key_turned_+2D8C↑j
                                        ; power_on__ignition_key_turned_+2DAF↑j ...
                lcall   code_6977

code_5192:                              ; CODE XREF: power_on__ignition_key_turned_+2DD5↑j
                                        ; power_on__ignition_key_turned_+2DFB↑j
                sjmp    code_51A3
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_
; ---------------------------------------------------------------------------
                db 0E4h
                db 0F5h
                db  2Ch ; ,
                db 0F5h
                db  71h ; q
                db 0F5h
                db  72h ; r
                db 0F5h
                db  73h ; s
                db 0F5h
                db  74h ; t
                db 0F5h
                db  76h ; v
                db 0F5h
                db  75h ; u
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

code_51A3:                              ; CODE XREF: power_on__ignition_key_turned_:code_5192↑j
                clr     C
                lcall   code_C54D
                jb      RAM_27.4, code_51FD
                mov     DPTR, #0F7D1h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F7D3h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     DPL, R2         ; Data Pointer, Low Byte
                mov     DPH, R3         ; Data Pointer, High Byte
                mov     B, #4           ; B-Register

code_51C1:                              ; CODE XREF: power_on__ignition_key_turned_+2E39↓j
                clr     A
                movc    A, @A+DPTR
                add     A, R0
                mov     R0, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                addc    A, R1
                mov     R1, A
                inc     DPTR
                djnz    B, code_51C1    ; B-Register
                mov     R2, DPL         ; Data Pointer, Low Byte
                mov     R3, DPH         ; Data Pointer, High Byte
                mov     DPTR, #0F7D3h
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     DPTR, #0F7D1h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, R2
                jnz     code_51FD
                mov     A, R3
                cjne    A, #0, code_51FD
                mov     A, R0
                orl     A, R1
                clr     RAM_22.0
                jz      code_51F1
                setb    RAM_22.0

code_51F1:                              ; CODE XREF: power_on__ignition_key_turned_+2E5B↑j
                clr     A
                mov     DPTR, #0F7D1h
                mov     B, #4           ; B-Register

code_51F8:                              ; CODE XREF: power_on__ignition_key_turned_+2E68↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_51F8    ; B-Register

code_51FD:                              ; CODE XREF: power_on__ignition_key_turned_+2E15↑j
                                        ; power_on__ignition_key_turned_+2E51↑j ...
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jb      ACC.0, code_5208 ; Accumulator
                ljmp    code_5305
; ---------------------------------------------------------------------------

code_5208:                              ; CODE XREF: power_on__ignition_key_turned_+2E70↑j
                mov     DPTR, #0F97Eh
                movx    A, @DPTR
                jz      code_5211
                ljmp    code_52D2
; ---------------------------------------------------------------------------

code_5211:                              ; CODE XREF: power_on__ignition_key_turned_+2E7A↑j
                mov     DPTR, #0F972h
                movx    A, @DPTR
                jnz     code_521A
                ljmp    code_5233
; ---------------------------------------------------------------------------

code_521A:                              ; CODE XREF: power_on__ignition_key_turned_+2E83↑j
                clr     A
                mov     DPTR, #0F972h
                movx    @DPTR, A
                mov     DPTR, #0FF00h
                mov     R2, #42h ; 'B'
                lcall   code_6C0A
                mov     DPTR, #0FF00h
                mov     R0, #0
                mov     R1, #0
                mov     R2, #42h ; 'B'
                ljmp    code_52A2
; ---------------------------------------------------------------------------

code_5233:                              ; CODE XREF: power_on__ignition_key_turned_+2E85↑j
                mov     DPTR, #0F973h
                movx    A, @DPTR
                jnz     code_523C
                ljmp    code_5255
; ---------------------------------------------------------------------------

code_523C:                              ; CODE XREF: power_on__ignition_key_turned_+2EA5↑j
                clr     A
                mov     DPTR, #0F973h
                movx    @DPTR, A
                mov     DPTR, #0FF42h
                mov     R2, #32h ; '2'
                lcall   code_6C0A
                mov     DPTR, #0FF42h
                mov     R0, #42h ; 'B'
                mov     R1, #0
                mov     R2, #32h ; '2'
                ljmp    code_52A2
; ---------------------------------------------------------------------------

code_5255:                              ; CODE XREF: power_on__ignition_key_turned_+2EA7↑j
                mov     DPTR, #0F974h
                movx    A, @DPTR
                jnz     code_525E
                ljmp    code_5305
; ---------------------------------------------------------------------------

code_525E:                              ; CODE XREF: power_on__ignition_key_turned_+2EC7↑j
                mov     DPTR, #0F974h
                movx    A, @DPTR
                cjne    A, #1, code_526F
                mov     DPTR, #0F681h
                movx    A, @DPTR
                mov     DPTR, #0FF74h
                movx    @DPTR, A
                sjmp    code_5289
; ---------------------------------------------------------------------------

code_526F:                              ; CODE XREF: power_on__ignition_key_turned_+2ED0↑j
                cjne    A, #2, code_527C
                mov     DPTR, #0F682h
                movx    A, @DPTR
                mov     DPTR, #0FF75h
                movx    @DPTR, A
                sjmp    code_5289
; ---------------------------------------------------------------------------

code_527C:                              ; CODE XREF: power_on__ignition_key_turned_:code_526F↑j
                cjne    A, #3, code_5289
                mov     DPTR, #0F770h
                movx    A, @DPTR
                mov     DPTR, #0FF76h
                movx    @DPTR, A
                sjmp    code_5289
; ---------------------------------------------------------------------------

code_5289:                              ; CODE XREF: power_on__ignition_key_turned_+2EDB↑j
                                        ; power_on__ignition_key_turned_+2EE8↑j ...
                clr     A
                mov     DPTR, #0F974h
                movx    @DPTR, A
                mov     DPTR, #0FF74h
                mov     R2, #0Ch
                lcall   code_6C0A
                mov     DPTR, #0FF74h
                mov     R0, #74h ; 't'
                mov     R1, #0
                mov     R2, #0Ch
                ljmp    code_52A2
; ---------------------------------------------------------------------------

code_52A2:                              ; CODE XREF: power_on__ignition_key_turned_+2E9E↑j
                                        ; power_on__ignition_key_turned_+2EC0↑j ...
                mov     A, DPL          ; Data Pointer, Low Byte
                mov     B, DPH          ; Data Pointer, High Byte
                mov     DPTR, #0F975h
                movx    @DPTR, A
                mov     DPTR, #0F97Ah
                movx    @DPTR, A
                mov     A, B            ; B-Register
                mov     DPTR, #0F976h
                movx    @DPTR, A
                mov     DPTR, #0F97Bh
                movx    @DPTR, A
                mov     DPTR, #0F977h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F97Ch
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     A, R2
                mov     DPTR, #0F979h
                movx    @DPTR, A
                mov     DPTR, #0F97Eh
                movx    @DPTR, A

code_52D2:                              ; CODE XREF: power_on__ignition_key_turned_+2E7C↑j
                lcall   code_6B91
                jc      code_52FE
                mov     DPTR, #0F97Eh
                movx    A, @DPTR
                jnz     code_5305
                mov     DPTR, #0F977h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F979h
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F976h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F975h
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, B          ; Data Pointer, High Byte
                lcall   compare_eeprom_and_xram
                jnc     code_5305

code_52FE:                              ; CODE XREF: power_on__ignition_key_turned_+2F43↑j
                setb    RAM_21.1
                clr     A
                mov     DPTR, #0F97Eh
                movx    @DPTR, A

code_5305:                              ; CODE XREF: power_on__ignition_key_turned_+2E73↑j
                                        ; power_on__ignition_key_turned_+2EC9↑j ...
                mov     A, P1           ; Port 1 (PDIR=0)
                mov     DPTR, #0F66Eh
                movx    @DPTR, A
                mov     A, P3           ; Port 3 (PDIR=0)
                inc     DPTR
                movx    @DPTR, A
                mov     A, P4           ; Port 4 (PDIR=0)
                inc     DPTR
                movx    @DPTR, A
                mov     A, P5           ; Port 5 (PDIR=0)
                inc     DPTR
                movx    @DPTR, A
                mov     A, P6           ; Port 6 (PDIR=0)
                inc     DPTR
                movx    @DPTR, A
                mov     A, P7           ; Port 7, Analog/Digital Input
                inc     DPTR
                movx    @DPTR, A
                mov     A, P8           ; Port 8, Analog/Digital Input
                inc     DPTR
                movx    @DPTR, A
                mov     DPTR, #0F96Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F96Fh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_5FCA
                mov     DPTR, #0F96Fh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     R0, #0F7h
                mov     R1, #0Ah
                mov     DPTR, #0F96Dh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                jnb     RAM_28.1, code_536C
                mov     DPTR, #0F96Fh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     R2, #0
                mov     R3, #0
                mov     DPTR, #0F96Fh
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                mov     B, #17h         ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R0
                mov     DPTR, #0F971h
                movx    @DPTR, A

code_536C:                              ; CODE XREF: power_on__ignition_key_turned_+2FB8↑j
                jnb     RAM_28.0, code_5371
                setb    RAM_20.5

code_5371:                              ; CODE XREF: power_on__ignition_key_turned_:code_536C↑j
                ljmp    MAIN_LOOP
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

; =============== S U B R O U T I N E =======================================

; Select operating mode.
;
; A/D Convert and prepare for calculus:
;  - Coolant temperature
;  - Intake Air Temperature
;  - CO Potentiometer
;  - Ignition Voltage

inputs_part1:                           ; CODE XREF: power_on__ignition_key_turned_+47E↑p
                                        ; power_on__ignition_key_turned_+1363↑p
                clr     RAM_26.6        ; RAM[0x26] &= ~(1 << 6)
COOLANT TEMP
                mov     B, #7           ; B = 7, P7.7, wants to A/D convert Coolant Temperature
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     A, R1           ; R1 = ADC(P7.7) = ADC(Coolant temperature)
                mov     DPTR, #0F686h
                movx    @DPTR, A        ; XRAM[0xF686] = ADC(P7.7) = ADC(Coolant temperature)
                mov     DPTR, #805Dh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x805D] = 0, fallback value ?
                jnz     coolant_temp_in_valid_range ; if (FLASH[0x805D]) jump ...
                mov     DPTR, #8057h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8057] = 0x64, min A/D converted voltage of coolant temperature for diagnosis
                mov     A, R1           ; A = ADC(P7.7) = ADC(Coolant temperature)
                cjne    A, B, code_5393 ; B-Register

code_5393:                              ; CODE XREF: inputs_part1+1C↑j
                jc      coolant_temp_less_than_low_limit ; if (ADC(Coolant temperature) < FLASH[0x8057]) jump ...
Coolant temperature above lower limit (which is that?)
                mov     DPTR, #8058h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8058] = 0xF0, max A/D converted voltage of coolant temperature for diagnosis
                cjne    A, RAM_1, code_539D

code_539D:                              ; CODE XREF: inputs_part1+26↑j
                jc      coolant_temp_larger_than_high_limit ; if (FLASH[0x8058] < ADC(Coolant temperature)) jump ...
Coolant temperature is in valid range

coolant_temp_in_valid_range:            ; CODE XREF: inputs_part1+12↑j
                clr     RAM_23.2        ; RAM[0x23] &= ~(1 << 2)
                clr     RAM_23.3        ; RAM[0x23] &= ~(1 << 3)
                mov     DPTR, #831Fh    ; DPTR = 0x831F
R1:R0 = ADC(P7.7) = ADC(Coolant temperature)
10-bit value,
R1[7..0] - highest 8 bits
R0[7..6] - lowest 2 bits
R0[5..0] - unused

                lcall   get_adc_value_from_table_and_adjust_for_calculus ; Find ADC value in table and adjust for calculus
                                        ;
                                        ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;   R1:R0 - adjusted table value
                                        ;   Acc = R1
                mov     RAM_3A, A       ; RAM[0x3A] = A, high byte of adjusted table lookup A/D Converted value of coolant temperature
                sjmp    code_53C4
; ---------------------------------------------------------------------------

coolant_temp_less_than_low_limit:       ; CODE XREF: inputs_part1:code_5393↑j
                setb    RAM_23.2        ; RAM[0x23] |= (1 << 2)
                clr     RAM_23.3        ; RAM[0x23] &= ~(1 << 3)
                sjmp    coolant_temp_not_in_limits
; ---------------------------------------------------------------------------

coolant_temp_larger_than_high_limit:    ; CODE XREF: inputs_part1:code_539D↑j
                clr     RAM_23.2        ; RAM[0x23] &= ~(1 << 2)
                setb    RAM_23.3        ; RAM[0x23] |= (1 << 3)

coolant_temp_not_in_limits:             ; CODE XREF: inputs_part1+3D↑j
                mov     B, #0           ; B-Register
                mov     DPTR, #8A4Bh    ; DPTR = 0x8A4B
                mov     A, B            ; B = A = 0
                movc    A, @A+DPTR
                mov     RAM_3A, A       ; RAM[0x3A] = FLASH[0x8A4B], fallback coolant temperature
                mov     R0, #0          ; R0 = 0

code_53C4:                              ; CODE XREF: inputs_part1+37↑j
                mov     R1, RAM_3A      ; R1 = RAM[0x3A], coolant temperature
                lcall   adjust_temperature ; INPUT
                                        ;   R1:R0 - adjusted table value for A/D Converted value
                                        ;
                                        ; OUTPUT
                                        ;   X = (R1:R0 + 00:50) / 00:A0
                                        ;   X is Quotient. Reminder is not used.
                                        ;   if (X > 0xFF), 0xFF returned
                                        ;   if (R1:R0 + 00:50) overflow, 0xFF returned
                                        ;   otherwise - LOW(X).
                                        ;
                                        ;   Result returned in Acc
                                        ;
                mov     RAM_3D, A       ; RAM[0x3D] = Adjusted coolant temperature
COOLANT TEMP FINISHED
INTAKE AIR TEMP
                mov     B, #0Eh         ; Wants to A/D convert P8.6 - Intake air temperature
                lcall   convert_analog_to_digital_10bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - R1:R0 - converted value
                                        ;    R1 - high (bits 7..0)
                                        ;    R0 - low (bits 7..6), bits 5..0 - not used
                mov     A, R1           ; A = R1, HIGH(ADC(IntaikeAirTemp))
                mov     DPTR, #0F687h
                movx    @DPTR, A        ; XRAM[0xF687] = ADC(IntakeAirTemp)
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F], kitting bits
                jnb     ACC.3, use_default_intake_air_temp ; if (!(FLASH[0x873F] & (1 << 3))) jump ...
                                        ; // if there is no intake air temperature sensor
                mov     DPTR, #8060h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8060]
                jnz     intake_air_temp_in_limits ; if (FLASH[0x8060]) jump ...
                mov     DPTR, #805Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x805E], Intake air temperature low limit
                mov     A, R1           ; A = R1, HIGH(ADC(IntakeAirTemp))
                cjne    A, B, code_53F0 ; B-Register

code_53F0:                              ; CODE XREF: inputs_part1+79↑j
                jc      intake_air_temp_below_low_limit ; if (HIGH(ADC(IntakeAirTemp)) < FLASH[0x805E]) jump ...
                mov     DPTR, #805Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x805F], Intake air temperature high limit
                cjne    A, RAM_1, code_53FA

code_53FA:                              ; CODE XREF: inputs_part1+83↑j
                jc      intake_air_temp_above_high_limit ; if (FLASH[0x805F] < HIGH(ADC(IntakeAirTemp))) jump ...

intake_air_temp_in_limits:              ; CODE XREF: inputs_part1+6F↑j
                clr     RAM_24.4
                clr     RAM_24.5
                mov     DPTR, #8341h
                lcall   get_adc_value_from_table_and_adjust_for_calculus ; Find ADC value in table and adjust for calculus
                                        ;
                                        ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;   R1:R0 - adjusted table value
                                        ;   Acc = R1
                mov     RAM_3B, A       ; RAM[0x3B] = adjusted table value for intake air temperature
                sjmp    code_541D
; ---------------------------------------------------------------------------

intake_air_temp_below_low_limit:        ; CODE XREF: inputs_part1:code_53F0↑j
                setb    RAM_24.4        ; set error flags
                clr     RAM_24.5
                sjmp    use_default_intake_air_temp
; ---------------------------------------------------------------------------

intake_air_temp_above_high_limit:       ; CODE XREF: inputs_part1:code_53FA↑j
                clr     RAM_24.4        ; set error flags
                setb    RAM_24.5

use_default_intake_air_temp:            ; CODE XREF: inputs_part1+67↑j
                                        ; inputs_part1+9A↑j
                mov     DPTR, #8061h
                clr     A
                movc    A, @A+DPTR
                mov     RAM_3B, A       ; RAM[0x3B] = FLASH[0x8061], default intake air temperature
                mov     R0, #0          ; R0 = 0

code_541D:                              ; CODE XREF: inputs_part1+94↑j
                mov     R1, RAM_3B      ; R1 = adjusted intake air temp
                lcall   adjust_temperature ; INPUT
                                        ;   R1:R0 - adjusted table value for A/D Converted value
                                        ;
                                        ; OUTPUT
                                        ;   X = (R1:R0 + 00:50) / 00:A0
                                        ;   X is Quotient. Reminder is not used.
                                        ;   if (X > 0xFF), 0xFF returned
                                        ;   if (R1:R0 + 00:50) overflow, 0xFF returned
                                        ;   otherwise - LOW(X).
                                        ;
                                        ;   Result returned in Acc
                                        ;
                mov     RAM_3E, A       ; RAM[0x3E] = adjusted intake air temp
INTAKE AIR TEMP FINISHED
MODE SELECTION START
                mov     A, P9           ; A = P9
                anl     A, #20h
                jnz     LO_set_diagnostic ; if ((P9 & 0x20)) jump ...
                                        ;
                                        ; test LO @ MC33199 (ISO9141)
                mov     A, #0           ; A = 0, mode ?
                sjmp    code_5430
; ---------------------------------------------------------------------------

LO_set_diagnostic:                      ; CODE XREF: inputs_part1+B4↑j
                mov     A, #3           ; A = 3, mode?

code_5430:                              ; CODE XREF: inputs_part1+B8↑j
                mov     DPTR, #0F7BEh
                movx    @DPTR, A        ; XRAM[0xF7BE] = A (current operating mode?)
MODE SELECTION FINISHED
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F]
                jb      ACC.7, has_CO_potentiometer ; if (FLASH[0x873F] & (1 << 7)) jump ...
                                        ; // check if there is CO potentiometer
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8741]
                jb      ACC.0, has_IROM ; if (FLASH[0x8741] & (1 << 0)) jump ...
                                        ; // check if there is IROM
                clr     RAM_23.4        ; set status bits
                clr     RAM_23.5
                sjmp    CO_pot_not_in_limits
; ---------------------------------------------------------------------------
CO POTENTIOMETER START

has_CO_potentiometer:                   ; CODE XREF: inputs_part1+C5↑j
                mov     B, #8           ; B = 8, P8.0, wants to see CO potentiometer
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                mov     DPTR, #0F689h
                movx    @DPTR, A
                mov     R1, A           ; R1 = XRAM[0xF689] = ADC(CO Potentiometer)
                mov     DPTR, #8067h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8067], CO pot low limit
                mov     A, R1
                cjne    A, B, code_5460 ; B-Register

code_5460:                              ; CODE XREF: inputs_part1+E9↑j
                jnc     CO_pot_above_low_limit ; if (ADC(CO Potentiometer) >= FLASH[0x8067]) jump ...
                setb    RAM_23.4        ; set error flags
                clr     RAM_23.5
                sjmp    CO_pot_not_in_limits
; ---------------------------------------------------------------------------

CO_pot_above_low_limit:                 ; CODE XREF: inputs_part1:code_5460↑j
                mov     DPTR, #8068h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8068], CO pot high limit
                cjne    A, RAM_1, code_5470

code_5470:                              ; CODE XREF: inputs_part1+F9↑j
                jnc     CO_pot_in_limits ; if (FLASH[0x8068] >= ADC(CO Potentiometer)) jump ...
                clr     RAM_23.4        ; set error flags
                setb    RAM_23.5
                sjmp    CO_pot_not_in_limits
; ---------------------------------------------------------------------------

CO_pot_in_limits:                       ; CODE XREF: inputs_part1:code_5470↑j
                clr     RAM_23.4        ; clear error flags
                clr     RAM_23.5
                mov     A, R1
                rlc     A               ; A = RLC(ADC(CO pot))
                                        ;
                                        ; y = RLC(x)
                                        ; y[n+1] = x[n], n = 0..6
                                        ; y[0] = CY
                                        ; CY = x[7]
                                        ;
                                        ; roughly: A = 2*ADC(CO pot)
                jnc     code_5482       ; if (!(ADC(CO pot) & 0x80)) jump ...
                                        ; if (ADC(CO pot) < 0x80) jump ...
                mov     A, #0FFh        ; A = 0xFF, saturate

code_5482:                              ; CODE XREF: inputs_part1+10A↑j
                clr     C               ; CY = 0
                subb    A, #50h ; 'P'   ; A = ADC(CO pot) - 0x50
                mov     B, #0C0h        ; B = 0xC0
                lcall   multiply_signed ; Multiply signed bytes.
                                        ; Result - signed word.
                                        ;
                                        ; INPUT
                                        ;  - A - multiplicand #1
                                        ;  - B - multiplicand #2
                                        ;
                                        ; OUTPUT
                                        ;  - B:A - signed word B*A
                sjmp    code_5494
; ---------------------------------------------------------------------------

CO_pot_not_in_limits:                   ; CODE XREF: inputs_part1+D4↑j
                                        ; inputs_part1+F2↑j ...
                mov     DPTR, #8069h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_5494:                              ; CODE XREF: inputs_part1+117↑j
                mov     A, RAM_73       ; A = RAM[0x73], some status byte
                jb      ACC.3, code_549F ; if (RAM[0x73] & (1 << 3)) jump ...
                mov     A, B            ; A = B
                mov     DPTR, #0F681h
                movx    @DPTR, A        ; XRAM[0xF681] = B (high byte of multiplication)

code_549F:                              ; CODE XREF: inputs_part1+122↑j
                sjmp    xram_F681_initialized
; ---------------------------------------------------------------------------

has_IROM:                               ; CODE XREF: inputs_part1+CD↑j
                clr     RAM_23.4        ; clear error flags
                clr     RAM_23.5
                mov     A, RAM_73
                jb      ACC.3, xram_F681_initialized ; if (RAM[0x73] & (1 << 3)) jump ...
                mov     DPTR, #0FF74h
                movx    A, @DPTR        ; A = XRAM[0xFF74]
                mov     DPTR, #0F681h
                movx    @DPTR, A        ; XRAM[0xF681] = XRAM[0xFF74]

xram_F681_initialized:                  ; CODE XREF: inputs_part1:code_549F↑j
                                        ; inputs_part1+133↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8741], kitting bits
                jb      ACC.0, code_54CA ; if (has IROM) jump ...
                mov     A, RAM_73
                jb      ACC.4, xram_F682_initialized ; Accumulator
                mov     DPTR, #806Ah
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x806A]
                mov     DPTR, #0F682h
                movx    @DPTR, A        ; XRAM[0xF682] = FLASH[0x806A]
                sjmp    xram_F682_initialized
; ---------------------------------------------------------------------------

code_54CA:                              ; CODE XREF: inputs_part1+143↑j
                mov     A, RAM_73
                jb      ACC.4, xram_F682_initialized ; Accumulator
                mov     DPTR, #0FF75h
                movx    A, @DPTR
                mov     DPTR, #0F682h
                movx    @DPTR, A        ; XRAM[0xF682] = XRAM[0xFF75]
CO POTENTIOMETER FINISH
IGNITION VOLTAGE START

xram_F682_initialized:                  ; CODE XREF: inputs_part1+148↑j
                                        ; inputs_part1+154↑j ...
                mov     B, #9           ; P8.1, wants to see if ignition is turned on
                lcall   convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                mov     DPTR, #0F688h
                movx    @DPTR, A        ; XRAM[0xF866] = ADC(Ignition Voltage)
                clr     C
                subb    A, #0
                jnc     code_54E7       ; if (ADC(Ignition Voltage) >= 0) jump ...
                clr     A               ; A = 0

code_54E7:                              ; CODE XREF: inputs_part1+170↑j
                mov     B, #75h         ; B-Register
                mul     AB              ; B:A = ADC(Ignition Voltage) * 0x75
                rlc     A
                mov     A, B            ; B-Register
                rlc     A               ; A = (B << 1) | (A & (1 << 7))
                                        ; CY = !!(B & (1 << 7))
                jnc     code_54F3       ; if (!(B & (1 << 7))) jump ...
                mov     A, #0FFh        ; saturate

code_54F3:                              ; CODE XREF: inputs_part1+17B↑j
                mov     R1, A           ; R1 = A, filtered Ignition Voltage
                mov     DPTR, #8062h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B = FLASH[0x8062]
                mov     A, R1
                cjne    A, B, code_54FF ; B-Register

code_54FF:                              ; CODE XREF: inputs_part1+188↑j
                mov     RAM_22.4, C     ; if (R1 < FLASH[0x8062])
                                        ;   RAM[0x22] |= (1 << 4)
                                        ; else
                                        ;   RAM[0x22] &= ~(1 << 4)
                mov     DPTR, #8063h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8063]
                cjne    A, RAM_1, code_5509

code_5509:                              ; CODE XREF: inputs_part1+192↑j
                mov     RAM_22.5, C     ; if (FLASH[0x8063] < R1)
                                        ;   RAM[0x22] |= (1 << 5)
                                        ; else
                                        ;   RAM[0x22] &= ~(1 << 5)
                mov     A, R1
                mov     RAM_3C, A       ; RAM[0x3C] = R1
                mov     A, RAM_3C
                clr     C
                subb    A, #36h ; '6'
                jnc     code_5516       ; if (RAM[0x3C] >= 0x36) jump ...
                clr     A               ; A = 0, saturate if RAM[0x3C] < 0x36

code_5516:                              ; CODE XREF: inputs_part1+19F↑j
                mov     B, #40h ; '@'   ; B-Register
                mul     AB              ; B:A = A * 0x40
                mov     A, B            ; A = HIGH(A * 0x40)
                cjne    A, #1Fh, code_551F

code_551F:                              ; CODE XREF: inputs_part1+1A8↑j
                jc      code_5523       ; if (A < 0x1F) jump ...
                mov     A, #1Fh         ; saturate
                                        ; A = maximum value, which is 0x1F

code_5523:                              ; CODE XREF: inputs_part1:code_551F↑j
                mov     RAM_3F, A       ; RAM[0x3F] = A
                ret
; End of function inputs_part1


; =============== S U B R O U T I N E =======================================

; A/D convert value at requested pin
;
; Input
;  - B, only low nibble to be set: 0x00 .. 0x0F
;       pin selector
;
; Output
;  - A = R0 - converted value
;

convert_analog_to_digital_8bit:         ; CODE XREF: power_on__ignition_key_turned_+7DB↑p
                                        ; power_on__ignition_key_turned_+7EB↑p ...
                mov     ADCON1, B       ; A/D Converter Control Register 1
                orl     ADCON1, #40h    ; A/D Converter Control Register 1
                mov     ADDATL, #0      ; A/D Converter Data Register, Low Byte

code_552F:                              ; CODE XREF: convert_analog_to_digital_8bit:code_552F↓j
                jb      ADCON0.4, code_552F ; A/D Converter Control Register 0
                mov     R0, ADDATH      ; A/D Converter Data Register, High Byte
                mov     A, ADCON1       ; A/D Converter Control Register 1
                anl     A, #0Fh
                cjne    A, B, convert_analog_to_digital_8bit ; A/D convert value at requested pin
                                        ;
                                        ; Input
                                        ;  - B, only low nibble to be set: 0x00 .. 0x0F
                                        ;       pin selector
                                        ;
                                        ; Output
                                        ;  - A = R0 - converted value
                                        ;
                mov     A, R0
                ret
; End of function convert_analog_to_digital_8bit


; =============== S U B R O U T I N E =======================================

; A/D convert value at requested pin
;
; Input
;  - B, only low nibble to be set: 0x00 .. 0x0F
;       pin selector
;
; Output
;  - R1:R0 - converted value
;    R1 - high (bits 7..0)
;    R0 - low (bits 7..6), bits 5..0 - not used

convert_analog_to_digital_10bit:        ; CODE XREF: power_on__ignition_key_turned_+7AD↑p
                                        ; power_on__ignition_key_turned_+7C4↑p ...
                mov     ADCON1, B       ; ADCON1 = B
                orl     ADCON1, #40h    ; ADCON1 |= 0x40, ADCL0 = 1
                                        ;
                                        ; other scaling bits are 0: ADCL1, ADST0, ADST1
                                        ; f_ADC (convertion freq) prescaler ratio = divide by 8 => f_osc / 8
                                        ; f_SC (sampler freq) prescaler ratio = divide by 2 => f_ADC / 2 = f_osc / 16
                mov     ADDATL, #0      ; ADDATL = 0, trigger A/D convertion start

code_5546:                              ; CODE XREF: convert_analog_to_digital_10bit:code_5546↓j
                jb      ADCON0.4, code_5546 ; while (ADCON[0] & (1 << 4)) { ; }
                                        ; while (AD_conv_inprogress()) { ; }
                mov     R1, ADDATH      ; R1 = ADDATH
                mov     R0, ADDATL      ; R0 = ADDATL
                mov     A, ADCON1       ; A = ADCON1
                anl     A, #0Fh         ; A = ADCON1 & 0x0F
                cjne    A, B, convert_analog_to_digital_10bit ; if (A != B) jump ...
                ret
; End of function convert_analog_to_digital_10bit


; =============== S U B R O U T I N E =======================================


code_5555:                              ; CODE XREF: code_55DE↓p
                                        ; code_5783+8↓p
                mov     DPTR, #856Ch
                lcall   interpolate_table_value ; INPUT:
                                        ;  - R1 - index in table
                                        ;  - R0 - factor to scale difference
                                        ;  - DPTR - table ptr in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Acc - table value
                push    ACC             ; Accumulator
                mov     R3, A
                mov     R2, RAM_4A
                mov     DPTR, #8C0Bh
                lcall   code_63CB
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60CB
                pop     B               ; B-Register
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     R3, B           ; B-Register
                mov     R2, RAM_4A
                mov     DPTR, #8D0Bh
                lcall   code_63CB
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60CB
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, ACC         ; Accumulator
                ret
; End of function code_5555


; =============== S U B R O U T I N E =======================================


code_55BA:                              ; CODE XREF: code_5649+2B↓p
                mov     A, #0Fh
                sjmp    code_55C0
; End of function code_55BA


; =============== S U B R O U T I N E =======================================


code_55BE:                              ; CODE XREF: code_55DE:code_5619↓p
                                        ; code_5783+27↓p
                mov     A, RAM_41

code_55C0:                              ; CODE XREF: code_55BA+2↑j
                swap    A
                add     A, RAM_4C
                mov     DPTR, #8E0Bh
                clr     C
                rlc     A
                jnc     code_55CC
                inc     DPH             ; Data Pointer, High Byte

code_55CC:                              ; CODE XREF: code_55BE+A↑j
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                ret
; End of function code_55BE


; =============== S U B R O U T I N E =======================================


code_55DE:                              ; CODE XREF: IE0_0+2BD↑p
                                        ; power_on__ignition_key_turned_+DC8↑p ...
                lcall   code_5555
                mov     DPTR, #0F602h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F779h
                movx    A, @DPTR
                add     A, B            ; B-Register
                jb      B.7, code_55FF  ; B-Register
                mov     B, A            ; B-Register
                jnc     code_55F7
                lcall   add_word_R3_R2

code_55F7:                              ; CODE XREF: code_55DE+14↑j
                                        ; code_55DE+25↓j
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                sjmp    code_5619
; ---------------------------------------------------------------------------

code_55FF:                              ; CODE XREF: code_55DE+F↑j
                jnc     code_5605
                mov     B, A            ; B-Register
                sjmp    code_55F7
; ---------------------------------------------------------------------------

code_5605:                              ; CODE XREF: code_55DE:code_55FF↑j
                cpl     A
                inc     A
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                lcall   code_6058
                jnb     ACC.7, code_5619 ; Accumulator
                mov     R0, #0
                mov     R1, #0

code_5619:                              ; CODE XREF: code_55DE+1F↑j
                                        ; code_55DE+34↑j
                lcall   code_55BE
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                ret
; End of function code_55DE


; =============== S U B R O U T I N E =======================================


code_5620:                              ; CODE XREF: IE0_0+2E6↑p
                                        ; IE0_0+327↑p ...
                mov     DPTR, #8071h
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                clr     A
                jc      code_5648
                mov     DPTR, #8073h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   shr_word_3_times ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 3
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R1
                jnz     code_5646
                mov     A, R0
                cjne    A, #0F0h, code_5644

code_5644:                              ; CODE XREF: code_5620+21↑j
                jc      code_5648

code_5646:                              ; CODE XREF: code_5620+1E↑j
                mov     A, #0F0h

code_5648:                              ; CODE XREF: code_5620+E↑j
                                        ; code_5620:code_5644↑j
                ret
; End of function code_5620


; =============== S U B R O U T I N E =======================================


code_5649:                              ; CODE XREF: power_on__ignition_key_turned_+FD8↑p
                                        ; power_on__ignition_key_turned_+FE4↑p
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     A, RAM_4A
                mov     DPTR, #8CFBh
                lcall   code_62EF
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60CB
                lcall   code_55BA
                lcall   add_word_R3_R2
                pop     ACC             ; Accumulator
                mov     R1, A
                pop     ACC             ; Accumulator
                mov     R0, A
                mov     B, #0F0h        ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     RAM_27.2

code_5688:                              ; CODE XREF: code_5649+61↓j
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R2         ; Multiplication/Division Register 4
                mov     MD5, R3         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     DPL, MD0        ; Data Pointer, Low Byte
                mov     DPH, MD1        ; Data Pointer, High Byte
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_5688
                setb    RAM_27.2
                mov     A, DPH          ; Data Pointer, High Byte
                jnz     code_56BA
                mov     A, DPL          ; Data Pointer, Low Byte
                cjne    A, #0F0h, code_56B8

code_56B8:                              ; CODE XREF: code_5649+6C↑j
                jc      code_56BC

code_56BA:                              ; CODE XREF: code_5649+68↑j
                mov     A, #0F0h

code_56BC:                              ; CODE XREF: code_5649:code_56B8↑j
                push    ACC             ; Accumulator
                mov     DPTR, #0B2DEh
                lcall   code_62EF
                pop     B               ; B-Register
                ret
; End of function code_5649


; =============== S U B R O U T I N E =======================================


code_56C7:                              ; CODE XREF: IE0_0:code_1651↑p
                mov     DPTR, #8784h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mul     AB
                mov     R0, A
                mov     R1, B           ; B-Register
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60EB
                ret
; End of function code_56C7


; =============== S U B R O U T I N E =======================================


code_56EB:                              ; CODE XREF: IE0_0+2DB↑p
                                        ; code_5D9F+190↓p
                clr     RAM_27.2

code_56ED:                              ; CODE XREF: code_56EB+21↓j
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     A, RAM_44
                mov     B, RAM_45       ; B-Register
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     MD0, A          ; Multiplication/Division Register 0
                mov     MD4, R0         ; Multiplication/Division Register 4
                mov     MD1, B          ; Multiplication/Division Register 1
                mov     MD5, R1         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                mov     A, MD0          ; Multiplication/Division Register 0
                mov     B, MD1          ; Multiplication/Division Register 1
                mov     R2, MD2         ; Multiplication/Division Register 2
                mov     R3, MD3         ; Multiplication/Division Register 3
                jbc     RAM_27.2, code_56ED
                setb    RAM_27.2
                clr     RAM_27.2

code_5713:                              ; CODE XREF: code_56EB+49↓j
                mov     MD0, A          ; Multiplication/Division Register 0
                mov     MD1, B          ; Multiplication/Division Register 1
                mov     MD2, R2         ; Multiplication/Division Register 2
                mov     MD3, R3         ; Multiplication/Division Register 3
                mov     MD4, #0E8h      ; Multiplication/Division Register 4
                mov     MD5, #3         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     R4, MD2         ; Multiplication/Division Register 2
                mov     R4, MD3         ; Multiplication/Division Register 3
                mov     R4, MD4         ; Multiplication/Division Register 4
                mov     R4, MD5         ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_5713
                setb    RAM_27.2
                ret
; End of function code_56EB

; ---------------------------------------------------------------------------
                db  75h ; u
                db 0F0h
                db    4
                db  12h
                db  5Fh ; _
                db 0FBh
                db 0E9h
                db  70h ; p
                db    6
                db 0A9h
                db    0
                db 0A8h
                db 0F0h
                db  80h
                db    4
                db  78h ; x
                db 0FFh
                db  79h ; y
                db 0FFh
                db  85h
                db  49h ; I
                db 0F0h
                db  12h
                db  5Fh ; _
                db 0FBh
                db 0C2h
                db  3Ah ; :
                db  75h ; u
                db 0E9h
                db    0
                db  85h
                db 0F0h
                db 0EAh
                db  88h
                db 0EBh
                db  89h
                db 0ECh
                db  75h ; u
                db 0EDh
                db 0F4h
                db  75h ; u
                db 0EEh
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0AAh
                db 0E9h
                db 0ABh
                db 0EAh
                db 0ACh
                db 0EBh
                db 0E5h
                db 0ECh
                db 0E5h
                db 0EDh
                db 0E5h
                db 0EEh
                db  10h
                db  3Ah ; :
                db 0DBh
                db 0D2h
                db  3Ah ; :
                db  8Ah
                db 0F0h
                db 0EBh
                db 0F8h
                db 0ECh
                db 0F9h
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_5783:                              ; CODE XREF: code_5D9F+1A4↓p
                mov     DPTR, #0F65Ah
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                lcall   code_5555
                mov     A, R0
                orl     A, R1
                jz      code_57C5
                mov     DPTR, #0F65Ch
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F65Ah
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F65Ah
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                mov     A, R3
                movx    @DPTR, A
                lcall   code_55BE
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     A, R1
                jb      ACC.7, code_57C1 ; Accumulator
                mov     DPTR, #0F65Ah
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_57C6

code_57C1:                              ; CODE XREF: code_5783+2E↑j
                mov     R0, #0
                mov     R1, #0

code_57C5:                              ; CODE XREF: code_5783+D↑j
                ret
; ---------------------------------------------------------------------------

code_57C6:                              ; CODE XREF: code_5783+3C↑j
                clr     RAM_27.2

code_57C8:                              ; CODE XREF: code_5783+6D↓j
                mov     DPTR, #0F65Ch
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     MD0, #0         ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, R2         ; Multiplication/Division Register 4
                mov     MD5, R3         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R2, MD0         ; Multiplication/Division Register 0
                mov     R3, MD1         ; Multiplication/Division Register 1
                mov     A, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_57C8
                setb    RAM_27.2
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A
                ret
; End of function code_5783


; =============== S U B R O U T I N E =======================================


code_57FA:                              ; CODE XREF: IE0_0+67B↑p
                mov     DPTR, #0A21Ch
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     R1, A
                mov     DPTR, #0B8B2h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                jz      code_581B
                mov     DPTR, #0B891h
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                clr     C
                subb    A, R1
                jc      code_581B
                add     A, R1
                mov     R1, A

code_581B:                              ; CODE XREF: code_57FA+11↑j
                                        ; code_57FA+1D↑j
                mov     R0, #0
                lcall   shr_word_twice  ; INPUT:
                                        ;   R1:R0
                                        ;
                                        ; OUTPUT:
                                        ;   R1:R0 >>= 2
                mov     DPTR, #83B0h
                lcall   interpolate_table_value ; INPUT:
                                        ;  - R1 - index in table
                                        ;  - R0 - factor to scale difference
                                        ;  - DPTR - table ptr in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Acc - table value
                push    ACC             ; Accumulator
                mov     R2, A
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #856Ch
                lcall   interpolate_table_value ; INPUT:
                                        ;  - R1 - index in table
                                        ;  - R0 - factor to scale difference
                                        ;  - DPTR - table ptr in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Acc - table value
                push    ACC             ; Accumulator
                mov     R3, A
                mov     DPTR, #8C0Bh
                lcall   code_63CB
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60CB
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, A
                push    ACC             ; Accumulator
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     DPTR, #8D0Bh
                lcall   code_63CB
                mov     DPTR, #900Bh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     DPTR, #0B80Dh
                mov     A, RAM_3E
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   code_60CB
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, ACC         ; Accumulator
                mov     DPTR, #0A2BDh
                mov     A, RAM_3D
                lcall   table_lookup_0  ; INPUT:
                                        ;  - DPTR - flash location of table
                                        ;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator - holds high byte of table lookup routine
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                pop     ACC             ; Accumulator
                add     A, #8
                swap    A
                anl     A, #0Fh
                mov     B, A            ; B-Register
                mov     A, RAM_41
                swap    A
                add     A, B            ; B-Register
                mov     DPTR, #8E0Bh
                clr     C
                rlc     A
                jnc     code_58BC
                inc     DPH             ; Data Pointer, High Byte

code_58BC:                              ; CODE XREF: code_57FA+BE↑j
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                ret
; End of function code_57FA


; =============== S U B R O U T I N E =======================================


code_58D1:                              ; CODE XREF: IE0_0:code_22C6↑p
                mov     DPTR, #0F705h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                jnb     RAM_29.4, code_58E4
                mov     DPTR, #0F6FFh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A

code_58E4:                              ; CODE XREF: code_58D1+8↑j
                mov     A, RAM_71
                jnb     ACC.5, code_5913 ; Accumulator
                mov     DPTR, #785h
                mov     A, RAM_34
                movc    A, @A+DPTR
                dec     A
                mov     DPTR, #0F707h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                push    ACC             ; Accumulator
                mov     B, A            ; B-Register
                mov     A, R0
                mov     R2, A
                mov     A, R1
                mov     R3, A
                cpl     B.7             ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                pop     ACC             ; Accumulator
                jnb     ACC.7, code_5913 ; Accumulator
                lcall   code_615A

code_5913:                              ; CODE XREF: code_58D1+15↑j
                                        ; code_58D1+3C↑j
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.4, code_5921 ; Accumulator
                mov     C, RAM_2D.4
                mov     RAM_29.0, C
                jnc     code_5926

code_5921:                              ; CODE XREF: code_58D1+47↑j
                setb    RAM_29.0
                lcall   code_60CB

code_5926:                              ; CODE XREF: code_58D1+4E↑j
                mov     A, R0
                mov     R2, A
                mov     A, R1
                mov     R3, A
                mov     B, RAM_67       ; B-Register
                cpl     B.7             ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, RAM_67
                jnb     ACC.7, code_593A ; Accumulator
                lcall   code_615A

code_593A:                              ; CODE XREF: code_58D1+63↑j
                mov     DPTR, #874Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                jb      RAM_29.4, code_594A
                lcall   code_60CB

code_594A:                              ; CODE XREF: code_58D1+73↑j
                mov     A, R0
                orl     A, R1
                jz      code_5965
                mov     A, RAM_3F
                rl      A
                mov     DPTR, #8A7Bh
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                mov     A, RAM_3F
                rl      A
                movc    A, @A+DPTR
                mov     C, ACC.7        ; Accumulator
                rrc     A
                mov     R3, A
                mov     A, R2
                rrc     A
                mov     R2, A
                lcall   add_signed_word_with_saturation ; employ "sign and magnitude" representation

code_5965:                              ; CODE XREF: code_58D1+7B↑j
                mov     DPTR, #0F76Eh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                lcall   code_6076
                mov     DPTR, #0F76Ch
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                clr     RAM_27.2

code_597A:                              ; CODE XREF: code_58D1+DA↓j
                mov     DPTR, #0F76Eh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     B, #80h         ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     MD0, B          ; Multiplication/Division Register 0
                mov     MD1, R0         ; Multiplication/Division Register 1
                mov     MD2, R1         ; Multiplication/Division Register 2
                mov     MD3, #0         ; Multiplication/Division Register 3
                mov     MD4, #60h ; '`' ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     B, MD2          ; Multiplication/Division Register 2
                mov     A, MD3          ; Multiplication/Division Register 3
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_597A
                setb    RAM_27.2
                mov     A, B            ; B-Register
                jz      code_59B8
                mov     R0, #0FFh
                mov     R1, #0FFh

code_59B8:                              ; CODE XREF: code_58D1+E1↑j
                ret
; End of function code_58D1


; =============== S U B R O U T I N E =======================================


code_59B9:                              ; CODE XREF: power_on__ignition_key_turned_:code_42DC↑p
                mov     DPTR, #0AAF9h
                mov     A, RAM_55
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #87CAh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                cjne    A, B, code_59CE ; B-Register

code_59CE:                              ; CODE XREF: code_59B9+12↑j
                jc      code_59DA
                mov     DPTR, #0A7F9h
                mov     A, RAM_53
                movc    A, @A+DPTR
                rl      A
                rl      A
                sjmp    code_59E0
; ---------------------------------------------------------------------------

code_59DA:                              ; CODE XREF: code_59B9:code_59CE↑j
                mov     DPTR, #0A8F9h
                mov     A, RAM_53
                movc    A, @A+DPTR

code_59E0:                              ; CODE XREF: code_59B9+1F↑j
                anl     A, #3
                mov     B, A            ; B-Register
                jb      RAM_2A.6, code_5A22
                clr     A
                mov     DPTR, #0F795h
                movx    @DPTR, A
                mov     A, #1
                mov     DPTR, #0F798h
                movx    @DPTR, A
                mov     A, #1
                mov     DPTR, #0F799h
                movx    @DPTR, A
                mov     A, #1
                mov     DPTR, #0F79Ah
                movx    @DPTR, A
                setb    RAM_2A.6
                mov     C, RAM_2E.2
                mov     RAM_2E.3, C
                cpl     C
                mov     RAM_2D.0, C
                mov     RAM_66, #0
                clr     A
                mov     C, B.1          ; B-Register
                rlc     A
                mov     C, RAM_2E.2
                addc    A, #0
                anl     A, #1
                jz      code_5A44
                mov     A, R1
                clr     C
                rrc     A
                jb      RAM_2E.2, code_5A1E
                cpl     A
                inc     A

code_5A1E:                              ; CODE XREF: code_59B9+60↑j
                mov     RAM_66, A
                sjmp    code_5A44
; ---------------------------------------------------------------------------

code_5A22:                              ; CODE XREF: code_59B9+2B↑j
                mov     DPTR, #808Eh
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #0F796h
                movx    A, @DPTR
                clr     C
                subb    A, RAM_4B
                lcall   code_61B1
                clr     C
                subb    A, R0
                jnc     code_5A44
                mov     DPTR, #0F797h
                movx    A, @DPTR
                clr     C
                subb    A, RAM_51
                lcall   code_61B1
                clr     C
                subb    A, R0
                jc      code_5A59

code_5A44:                              ; CODE XREF: code_59B9+5B↑j
                                        ; code_59B9+67↑j ...
                mov     A, RAM_4B
                mov     DPTR, #0F796h
                movx    @DPTR, A
                mov     A, RAM_51
                mov     DPTR, #0F797h
                movx    @DPTR, A
                clr     A
                jnb     RAM_2E.2, code_5A55
                cpl     A

code_5A55:                              ; CODE XREF: code_59B9+98↑j
                mov     DPTR, #0F792h
                movx    @DPTR, A

code_5A59:                              ; CODE XREF: code_59B9+89↑j
                mov     DPTR, #0F798h
                movx    A, @DPTR
                jz      code_5AC4
                dec     A
                movx    @DPTR, A
                jz      code_5A64
                ret
; ---------------------------------------------------------------------------

code_5A64:                              ; CODE XREF: code_59B9+A8↑j
                clr     A
                mov     C, RAM_2E.2
                rlc     A
                mov     C, RAM_2D.0
                addc    A, #0
                anl     A, #1
                jnz     code_5A78
                clr     A
                mov     DPTR, #0F795h
                movx    @DPTR, A
                ljmp    code_5AF8
; ---------------------------------------------------------------------------

code_5A78:                              ; CODE XREF: code_59B9+B5↑j
                                        ; code_59B9+12D↓j
                mov     DPTR, #0AB18h
                mov     A, RAM_55
                movc    A, @A+DPTR
                mov     DPTR, #0F795h
                movx    @DPTR, A
                cpl     RAM_2D.0
                mov     C, RAM_2E.2
                cpl     C
                mov     RAM_2E.3, C
                jb      RAM_2E.2, code_5A9E
                mov     DPTR, #0F799h
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A
                jnz     code_5A9E
                mov     DPTR, #0AB75h
                mov     A, RAM_55
                movc    A, @A+DPTR
                mov     DPTR, #0F799h
                movx    @DPTR, A

code_5A9E:                              ; CODE XREF: code_59B9+D0↑j
                                        ; code_59B9+D9↑j
                mov     DPTR, #0AB75h
                mov     A, RAM_55
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #0F799h
                movx    A, @DPTR
                clr     C
                subb    A, R0
                jnz     code_5AC1
                jb      RAM_2E.2, code_5AB5
                jb      B.1, code_5AC1  ; B-Register
                sjmp    code_5AB8
; ---------------------------------------------------------------------------

code_5AB5:                              ; CODE XREF: code_59B9+F4↑j
                jnb     B.1, code_5AC1  ; B-Register

code_5AB8:                              ; CODE XREF: code_59B9+FA↑j
                mov     DPTR, #0AB94h
                mov     A, RAM_55
                movc    A, @A+DPTR
                add     A, R1
                sjmp    code_5B10
; ---------------------------------------------------------------------------

code_5AC1:                              ; CODE XREF: code_59B9+F2↑j
                                        ; code_59B9+F7↑j ...
                mov     A, R1
                sjmp    code_5B10
; ---------------------------------------------------------------------------

code_5AC4:                              ; CODE XREF: code_59B9+A4↑j
                mov     DPTR, #0A9F9h
                mov     A, RAM_53
                movc    A, @A+DPTR
                jnb     RAM_2E.2, code_5AD2
                jnb     RAM_2D.0, code_5ADC
                sjmp    code_5AE9
; ---------------------------------------------------------------------------

code_5AD2:                              ; CODE XREF: code_59B9+111↑j
                jnb     RAM_2D.0, code_5AE9
                jnb     ACC.7, code_5ADF ; Accumulator
                cpl     A
                inc     A
                sjmp    code_5AE0
; ---------------------------------------------------------------------------

code_5ADC:                              ; CODE XREF: code_59B9+114↑j
                jnb     ACC.7, code_5AE0 ; Accumulator

code_5ADF:                              ; CODE XREF: code_59B9+11C↑j
                clr     A

code_5AE0:                              ; CODE XREF: code_59B9+121↑j
                                        ; code_59B9:code_5ADC↑j
                mov     DPTR, #0F798h
                movx    @DPTR, A
                jnz     code_5AEC
                ljmp    code_5A78
; ---------------------------------------------------------------------------

code_5AE9:                              ; CODE XREF: code_59B9+117↑j
                                        ; code_59B9:code_5AD2↑j
                jbc     RAM_25.6, code_5AED

code_5AEC:                              ; CODE XREF: code_59B9+12B↑j
                ret
; ---------------------------------------------------------------------------

code_5AED:                              ; CODE XREF: code_59B9:code_5AE9↑j
                mov     DPTR, #0F795h
                movx    A, @DPTR
                clr     C
                subb    A, #1
                jc      code_5AF8
                movx    @DPTR, A
                ret
; ---------------------------------------------------------------------------

code_5AF8:                              ; CODE XREF: code_59B9+BC↑j
                                        ; code_59B9+13B↑j
                mov     DPTR, #0F79Ah
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A
                jnz     code_5B26
                mov     DPTR, #0AB37h
                mov     A, RAM_55
                movc    A, @A+DPTR
                mov     DPTR, #0F79Ah
                movx    @DPTR, A
                mov     DPTR, #0AB56h
                mov     A, RAM_55
                movc    A, @A+DPTR

code_5B10:                              ; CODE XREF: code_59B9+106↑j
                                        ; code_59B9+109↑j
                jnb     RAM_2E.2, code_5B15
                cpl     A
                inc     A

code_5B15:                              ; CODE XREF: code_59B9:code_5B10↑j
                add     A, RAM_66
                mov     RAM_66, A
                jb      ACC.7, code_5B22 ; Accumulator
                add     A, #0B0h
                jc      code_5B7E
                sjmp    code_5B26
; ---------------------------------------------------------------------------

code_5B22:                              ; CODE XREF: code_59B9+160↑j
                add     A, #50h ; 'P'
                jnc     code_5B6A

code_5B26:                              ; CODE XREF: code_59B9+145↑j
                                        ; code_59B9+167↑j
                mov     DPTR, #0F792h
                movx    A, @DPTR
                mov     C, RAM_2E.2
                rlc     A
                mov     DPTR, #0F792h
                movx    @DPTR, A
                jb      RAM_2B.2, code_5B69
                mov     DPTR, #0F792h
                movx    A, @DPTR
                anl     A, #0Fh
                cjne    A, #5, code_5B69
                mov     A, R1
                clr     C
                rrc     A
                mov     R1, A
                mov     DPTR, #0F500h
                mov     A, RAM_53
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                add     A, RAM_66
                add     A, R1
                mov     DPTR, #0F79Ch
                movx    @DPTR, A
                mov     A, RAM_53
                mov     DPTR, #0F79Dh
                movx    @DPTR, A
                mov     C, RAM_2B.0
                mov     RAM_2D.3, C
                clr     A
                mov     DPTR, #0F79Bh
                movx    @DPTR, A
                setb    RAM_2B.2

code_5B69:                              ; CODE XREF: code_59B9+178↑j
                                        ; code_59B9+181↑j
                ret
; ---------------------------------------------------------------------------

code_5B6A:                              ; CODE XREF: code_59B9+16B↑j
                mov     DPTR, #8090h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F793h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, B, code_5B90 ; B-Register
                setb    RAM_2D.5
                sjmp    code_5B90
; ---------------------------------------------------------------------------

code_5B7E:                              ; CODE XREF: code_59B9+165↑j
                mov     DPTR, #8090h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F794h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                cjne    A, B, code_5B90 ; B-Register
                setb    RAM_2D.6

code_5B90:                              ; CODE XREF: code_59B9+1BE↑j
                                        ; code_59B9+1C3↑j ...
                mov     RAM_66, #0
                clr     RAM_2A.6
                lcall   init_xram_ego
                ret
; End of function code_59B9


; =============== S U B R O U T I N E =======================================


init_xram_ego:                          ; CODE XREF: power_on__ignition_key_turned_+393↑p
                                        ; code_59B9+1DC↑p
                mov     DPTR, #991Ch    ; DPTR[0] = 0x991C
                mov     DPSEL, #2       ; Data Pointer Select Register
                mov     DPTR, #0F500h   ; DPTR[2] = 0xF500
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     R0, #0          ; R0 = 0

copy_256_byters_for_ego:                ; CODE XREF: init_xram_ego+19↓j
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     DPSEL, #2       ; Data Pointer Select Register
                movx    @DPTR, A        ; XRAM[DPTR[2]++] = FLASH[DPTR[0]++]
                inc     DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                djnz    R0, copy_256_byters_for_ego
                ret
; End of function init_xram_ego


; =============== S U B R O U T I N E =======================================


code_5BB5:                              ; CODE XREF: power_on__ignition_key_turned_+1BF0↑p
                jb      RAM_2D.1, code_5BC9
                clr     A
                mov     DPTR, #0F782h
                movx    @DPTR, A
                mov     DPTR, #0F776h
                movx    @DPTR, A
                mov     A, #80h
                mov     DPTR, #0F777h
                movx    @DPTR, A
                sjmp    code_5C06
; ---------------------------------------------------------------------------

code_5BC9:                              ; CODE XREF: code_5BB5↑j
                mov     DPTR, #0F77Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F77Eh
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jc      code_5BE1
                mov     DPTR, #876Fh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_5BE8
; ---------------------------------------------------------------------------

code_5BE1:                              ; CODE XREF: code_5BB5+21↑j
                mov     DPTR, #8770h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_5BE8:                              ; CODE XREF: code_5BB5+2A↑j
                mov     DPTR, #0F782h
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                movx    @DPTR, A
                jnc     code_5C06
                mov     DPTR, #0F77Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F77Eh
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A
                clr     C
                subb    A, B            ; B-Register
                jnc     code_5C06
                mov     A, B            ; B-Register
                movx    @DPTR, A

code_5C06:                              ; CODE XREF: code_5BB5+12↑j
                                        ; code_5BB5+3B↑j ...
                mov     DPTR, #0F77Eh
                movx    A, @DPTR
                mov     B, RAM_48       ; B-Register
                lcall   code_6121
                mov     DPTR, #0F780h
                movx    @DPTR, A
                jb      RAM_2D.1, code_5C1F
                mov     DPTR, #0F780h
                movx    A, @DPTR
                mov     DPTR, #0F781h
                movx    @DPTR, A

code_5C1F:                              ; CODE XREF: code_5BB5+5F↑j
                mov     A, RAM_72
                jb      ACC.2, code_5C9A ; Accumulator
                mov     DPTR, #87C9h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F6BFh
                movx    A, @DPTR
                cjne    A, B, code_5C32 ; B-Register

code_5C32:                              ; CODE XREF: code_5BB5+7A↑j
                jnc     code_5C3D
                mov     DPTR, #87C8h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_5C44
; ---------------------------------------------------------------------------

code_5C3D:                              ; CODE XREF: code_5BB5:code_5C32↑j
                mov     DPTR, #8776h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_5C44:                              ; CODE XREF: code_5BB5+86↑j
                mov     DPTR, #0F780h
                movx    A, @DPTR
                jb      ACC.7, code_5C52 ; Accumulator
                clr     C
                subb    A, B            ; B-Register
                jc      code_5C6F
                sjmp    code_5C5B
; ---------------------------------------------------------------------------

code_5C52:                              ; CODE XREF: code_5BB5+93↑j
                cpl     A
                inc     A
                clr     C
                subb    A, B            ; B-Register
                jc      code_5C6F
                cpl     A
                inc     A

code_5C5B:                              ; CODE XREF: code_5BB5+9B↑j
                mov     R0, A
                lcall   code_6190
                lcall   code_60AE
                mov     A, R1
                jb      ACC.7, code_5C72 ; Accumulator
                mov     DPTR, #8774h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                sjmp    code_5C79
; ---------------------------------------------------------------------------

code_5C6F:                              ; CODE XREF: code_5BB5+99↑j
                                        ; code_5BB5+A2↑j
                clr     A
                sjmp    code_5C92
; ---------------------------------------------------------------------------

code_5C72:                              ; CODE XREF: code_5BB5+AE↑j
                mov     DPTR, #8775h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register

code_5C79:                              ; CODE XREF: code_5BB5+B8↑j
                lcall   code_600D
                lcall   code_619A
                mov     B, A            ; B-Register
                mov     DPTR, #8777h
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #8778h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                mov     A, B            ; B-Register
                lcall   code_5FA8

code_5C92:                              ; CODE XREF: code_5BB5+BB↑j
                mov     B, A            ; B-Register
                mov     A, RAM_5B
                add     A, B            ; B-Register
                mov     RAM_5A, A

code_5C9A:                              ; CODE XREF: code_5BB5+6C↑j
                mov     A, RAM_72
                jnb     ACC.5, code_5CA0 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5CA0:                              ; CODE XREF: code_5BB5+E7↑j
                mov     A, RAM_73
                jnb     ACC.7, code_5CA6 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5CA6:                              ; CODE XREF: code_5BB5+ED↑j
                mov     DPTR, #0F781h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F780h
                movx    A, @DPTR
                mov     DPTR, #0F781h
                movx    @DPTR, A
                lcall   code_6134
                mov     B, A            ; B-Register
                mov     DPTR, #8771h
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                clr     A
                jnb     B.7, code_5CC5  ; B-Register
                clr     C
                subb    A, R0

code_5CC5:                              ; CODE XREF: code_5BB5+10B↑j
                mov     R1, A
                mov     A, R0
                mul     AB
                mov     R2, A
                mov     A, B            ; B-Register
                add     A, R1
                mov     R3, A
                mov     DPTR, #8773h
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                cpl     A
                inc     A
                mov     R0, A
                mov     DPTR, #0F780h
                movx    A, @DPTR
                lcall   code_5FA8
                mov     R0, A
                lcall   code_6190
                mov     DPTR, #8772h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   code_600D
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                anl     B, #0F0h        ; B-Register
                mov     A, R0
                anl     A, #0Fh
                orl     A, B            ; B-Register
                swap    A
                mov     B, A            ; B-Register
                lcall   code_60EB
                mov     A, R1
                jnb     ACC.3, code_5D03 ; Accumulator
                orl     A, #0F0h
                mov     R1, A

code_5D03:                              ; CODE XREF: code_5BB5+148↑j
                mov     R2, B           ; B-Register
                mov     DPTR, #0A31Eh
                mov     A, RAM_53
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                lcall   code_600D
                mov     DPTR, #0F777h
                movx    A, @DPTR
                add     A, B            ; B-Register
                movx    @DPTR, A
                mov     A, R0
                addc    A, #0
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                mov     DPTR, #0A31Eh
                mov     A, RAM_53
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R2
                mul     AB
                mov     R2, A
                mov     DPTR, #0F776h
                movx    A, @DPTR
                add     A, R2
                movx    @DPTR, A
                mov     DPTR, #0F777h
                movx    A, @DPTR
                addc    A, B            ; B-Register
                movx    @DPTR, A
                mov     A, RAM_63
                addc    A, R0
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                mov     DPTR, #8763h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                jb      ACC.7, code_5D58 ; Accumulator
                jz      code_5D52
                mov     A, #0FFh
                mov     B, A            ; B-Register
                sjmp    code_5D59
; ---------------------------------------------------------------------------

code_5D52:                              ; CODE XREF: code_5BB5+195↑j
                mov     A, R0
                cjne    A, B, code_5D56 ; B-Register

code_5D56:                              ; CODE XREF: code_5BB5+19E↑j
                jnc     code_5D63

code_5D58:                              ; CODE XREF: code_5BB5+192↑j
                clr     A

code_5D59:                              ; CODE XREF: code_5BB5+19B↑j
                mov     DPTR, #0F776h
                movx    @DPTR, A
                mov     DPTR, #0F777h
                movx    @DPTR, A
                mov     A, B            ; B-Register

code_5D63:                              ; CODE XREF: code_5BB5:code_5D56↑j
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)
                mov     DPTR, #0F778h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #8765h
                clr     A
                movc    A, @A+DPTR
                xch     A, B            ; B-Register
                lcall   code_6116
                mov     R0, A
                mov     DPTR, #0F778h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #8766h
                clr     A
                movc    A, @A+DPTR
                xch     A, B            ; B-Register
                lcall   code_6116
                mov     R1, A
                mov     A, RAM_63
                lcall   code_5F97
                mov     RAM_63, A
                mov     DPTR, #0F778h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_63
                lcall   code_6121
                mov     DPTR, #0F77Ah
                movx    @DPTR, A
                ret
; End of function code_5BB5


; =============== S U B R O U T I N E =======================================


code_5D9F:                              ; CODE XREF: power_on__ignition_key_turned_+1BFB↑p
                mov     A, RAM_72
                jnb     ACC.5, code_5DA5 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5DA5:                              ; CODE XREF: code_5D9F+2↑j
                mov     A, RAM_73
                jnb     ACC.7, code_5DAB ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5DAB:                              ; CODE XREF: code_5D9F+8↑j
                jnb     RAM_2D.1, code_5DDE
                mov     DPTR, #877Eh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_3A
                cjne    A, B, code_5DBA ; B-Register

code_5DBA:                              ; CODE XREF: code_5D9F+18↑j
                jc      code_5DDE
                mov     DPTR, #0F77Eh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F77Fh
                movx    A, @DPTR
                clr     C
                subb    A, B            ; B-Register
                jnz     code_5DDE
                mov     DPTR, #877Dh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F780h
                movx    A, @DPTR
                lcall   code_61B1
                clr     C
                subb    A, B            ; B-Register
                jc      code_5DEE

code_5DDE:                              ; CODE XREF: code_5D9F:code_5DAB↑j
                                        ; code_5D9F:code_5DBA↑j ...
                mov     DPTR, #0F77Eh
                movx    A, @DPTR
                mov     DPTR, #0F77Fh
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0F7CCh
                movx    @DPTR, A
                lcall   code_5F8C

code_5DEE:                              ; CODE XREF: code_5D9F+3D↑j
                jnb     RAM_28.1, code_5DF9
                mov     DPTR, #0F7CCh
                movx    A, @DPTR
                inc     A
                jz      code_5DF9
                movx    @DPTR, A

code_5DF9:                              ; CODE XREF: code_5D9F:code_5DEE↑j
                                        ; code_5D9F+57↑j
                mov     DPTR, #0F78Ah
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F780h
                movx    A, @DPTR
                mov     R2, A
                lcall   cast_signed_R2_to_R3R2 ; INPUT:
                                        ;  - R2
                                        ;
                                        ; OUTPUT:
                                        ;  - R3 = 0xFF if (R2 & 0x80); 0x00 otherwise.
                                        ;
                                        ; USES: Acc
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     DPTR, #0F78Ah
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F780h
                movx    A, @DPTR
                lcall   code_61B1
                mov     B, A            ; B-Register
                mul     AB
                mov     R0, A
                mov     DPTR, #0F78Ch
                movx    A, @DPTR
                add     A, R0
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, B            ; B-Register
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0F779h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F785h
                movx    A, @DPTR
                add     A, B            ; B-Register
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0F67Dh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F787h
                movx    A, @DPTR
                add     A, R0
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, R1
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F78Fh
                movx    A, @DPTR
                add     A, R0
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, R1
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0F784h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                clr     C
                subb    A, #80h
                jz      code_5E7B
                ret
; ---------------------------------------------------------------------------

code_5E7B:                              ; CODE XREF: code_5D9F+D9↑j
                mov     A, RAM_72
                jnb     ACC.5, code_5E81 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5E81:                              ; CODE XREF: code_5D9F+DE↑j
                mov     A, RAM_73
                jnb     ACC.7, code_5E87 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_5E87:                              ; CODE XREF: code_5D9F+E4↑j
                mov     DPTR, #8767h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F7CCh
                movx    A, @DPTR
                cjne    A, B, code_5E95 ; B-Register

code_5E95:                              ; CODE XREF: code_5D9F+F3↑j
                jnc     code_5E9A
                ljmp    code_5F88
; ---------------------------------------------------------------------------

code_5E9A:                              ; CODE XREF: code_5D9F:code_5E95↑j
                mov     DPTR, #0F78Ah
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                jnb     ACC.7, code_5EA8 ; Accumulator
                lcall   code_6058

code_5EA8:                              ; CODE XREF: code_5D9F+103↑j
                mov     A, R1
                clr     C
                rlc     A
                mov     B, A            ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                clr     C
                mov     DPTR, #0F78Ch
                movx    A, @DPTR
                subb    A, B            ; B-Register
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                subb    A, R0
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                subb    A, R1
                jnz     code_5ED0
                mov     A, R0
                anl     A, #0E0h
                jnz     code_5ED0
                mov     R1, RAM_0
                mov     R0, B           ; B-Register
                lcall   shl_word_3_times ; INPUT:
                                        ;   R1:R0
                                        ; OUTPUT:
                                        ;   R1:R0 = (R1:R0) << 3, or FF:FF (if overflow happens)
                                        ;
                sjmp    code_5ED2
; ---------------------------------------------------------------------------

code_5ED0:                              ; CODE XREF: code_5D9F+121↑j
                                        ; code_5D9F+126↑j
                mov     R1, #0FFh

code_5ED2:                              ; CODE XREF: code_5D9F+12F↑j
                mov     DPTR, #8741h
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.7, code_5F18 ; Accumulator
                mov     DPTR, #877Bh
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                clr     C
                subb    A, B            ; B-Register
                jnc     code_5EEE
                mov     DPTR, #0F783h
                movx    A, @DPTR
                dec     A
                sjmp    code_5F01
; ---------------------------------------------------------------------------

code_5EEE:                              ; CODE XREF: code_5D9F+146↑j
                mov     DPTR, #877Ch
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                clr     C
                subb    A, B            ; B-Register
                jc      code_5F18
                mov     DPTR, #0F783h
                movx    A, @DPTR
                inc     A
                inc     A

code_5F01:                              ; CODE XREF: code_5D9F+14D↑j
                mov     B, A            ; B-Register
                mov     DPTR, #8779h
                clr     A
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #877Ah
                clr     A
                movc    A, @A+DPTR
                mov     R1, A
                mov     A, B            ; B-Register
                lcall   code_5FA8
                mov     DPTR, #0F783h
                movx    @DPTR, A

code_5F18:                              ; CODE XREF: code_5D9F+138↑j
                                        ; code_5D9F+15A↑j
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                cjne    A, #29h, code_5F22 ; ')'
                ljmp    code_5F74
; ---------------------------------------------------------------------------

code_5F22:                              ; CODE XREF: code_5D9F+17D↑j
                mov     DPTR, #0F787h
                movx    A, @DPTR
                rlc     A
                inc     DPTR
                movx    A, @DPTR
                rlc     A
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                rlc     A
                mov     R1, A
                lcall   code_56EB
                mov     R2, RAM_0
                mov     R3, RAM_1
                mov     DPTR, #0F78Fh
                movx    A, @DPTR
                rlc     A
                inc     DPTR
                movx    A, @DPTR
                rlc     A
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                rlc     A
                mov     R1, A
                lcall   code_5783
                mov     DPTR, #0F785h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_6084
                mov     A, R3
                mov     R2, A
                mov     R3, #0
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                lcall   code_619A
                mov     B, A            ; B-Register
                mov     DPTR, #0F602h
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F602h
                movx    @DPTR, A
                lcall   code_6134
                mov     B, A            ; B-Register
                mov     A, RAM_63
                lcall   code_6116
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

code_5F74:                              ; CODE XREF: code_5D9F+180↑j
                mov     DPTR, #0F77Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_48
                clr     C
                subb    A, B            ; B-Register
                jnc     code_5F88
                clr     RAM_2A.3
                clr     A
                mov     DPTR, #0F603h
                movx    @DPTR, A

code_5F88:                              ; CODE XREF: code_5D9F+F8↑j
                                        ; code_5D9F+1E0↑j
                lcall   code_5F8C
                ret
; End of function code_5D9F


; =============== S U B R O U T I N E =======================================


code_5F8C:                              ; CODE XREF: code_5D9F+4C↑p
                                        ; code_5D9F:code_5F88↑p
                clr     A
                mov     DPTR, #0F784h
                mov     R1, #0Eh

code_5F92:                              ; CODE XREF: code_5F8C+8↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    R1, code_5F92
                ret
; End of function code_5F8C


; =============== S U B R O U T I N E =======================================


code_5F97:                              ; CODE XREF: power_on__ignition_key_turned_+1951↑p
                                        ; power_on__ignition_key_turned_+20D5↑p ...
                clr     C
                subb    A, R0
                jnc     code_5F9D
                mov     A, R0
                ret
; ---------------------------------------------------------------------------

code_5F9D:                              ; CODE XREF: code_5F97+2↑j
                add     A, R0
                clr     C
                subb    A, R1
                jc      code_5FA5
                mov     A, R1
                setb    C
                ret
; ---------------------------------------------------------------------------

code_5FA5:                              ; CODE XREF: code_5F97+9↑j
                add     A, R1
                clr     C
                ret
; End of function code_5F97


; =============== S U B R O U T I N E =======================================


code_5FA8:                              ; CODE XREF: power_on__ignition_key_turned_+2115↑p
                                        ; power_on__ignition_key_turned_+2156↑p ...
                xch     A, R0
                add     A, #80h
                xch     A, R0
                xch     A, R1
                add     A, #80h
                xch     A, R1
                add     A, #80h
                clr     C
                subb    A, R0
                jnc     code_5FBB
                mov     A, R0
                add     A, #80h
                setb    C
                ret
; ---------------------------------------------------------------------------

code_5FBB:                              ; CODE XREF: code_5FA8+C↑j
                add     A, R0
                clr     C
                subb    A, R1
                jc      code_5FC5
                mov     A, R1
                add     A, #80h
                setb    C
                ret
; ---------------------------------------------------------------------------

code_5FC5:                              ; CODE XREF: code_5FA8+16↑j
                add     A, R1
                add     A, #80h
                clr     C
                ret
; End of function code_5FA8


; =============== S U B R O U T I N E =======================================


code_5FCA:                              ; CODE XREF: power_on__ignition_key_turned_+21FD↑p
                                        ; power_on__ignition_key_turned_+2FA1↑p ...
                clr     C
                mov     A, R0
                subb    A, R2
                mov     A, R1
                subb    A, R3
                jnc     code_5FD5
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A

code_5FD5:                              ; CODE XREF: code_5FCA+5↑j
                ret
; End of function code_5FCA


; =============== S U B R O U T I N E =======================================


code_5FD6:                              ; CODE XREF: IE0_0+50C↑p
                                        ; power_on__ignition_key_turned_+21CC↑p ...
                clr     C
                mov     A, R2
                subb    A, R0
                mov     A, R3
                subb    A, R1
                jnc     code_5FE1
                mov     A, R2
                mov     R0, A
                mov     A, R3
                mov     R1, A

code_5FE1:                              ; CODE XREF: code_5FD6+5↑j
                ret
; End of function code_5FD6


; =============== S U B R O U T I N E =======================================

; Multiply signed bytes.
; Result - signed word.
;
; INPUT
;  - A - multiplicand #1
;  - B - multiplicand #2
;
; OUTPUT
;  - B:A - signed word B*A

multiply_signed:                        ; CODE XREF: power_on__ignition_key_turned_+9F3↑p
                                        ; power_on__ignition_key_turned_+209C↑p ...
                jb      ACC.7, code_5FE7 ; if (A & 0x80) jump ...
                                        ; if (A < 0) jump ...
                mul     AB              ; B:A = B * A
                ret
; ---------------------------------------------------------------------------

code_5FE7:                              ; CODE XREF: multiply_signed↑j
                cpl     A
                inc     A               ; A = -A
                mul     AB              ; B:A = B * (-A)
                cpl     A
                inc     A               ; A = -A
                jz      code_5FF4       ; if (!A) jump ...
                xch     A, B            ; B-Register
                cpl     A
                xch     A, B            ; B = ~B
                ret
; ---------------------------------------------------------------------------

code_5FF4:                              ; CODE XREF: multiply_signed+A↑j
                xch     A, B            ; B-Register
                cpl     A
                inc     A
                xch     A, B            ; B = -B
                ret
; End of function multiply_signed


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - B - factor
;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
;
; OUTPUT:
;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)

scale_ADC_10bit_value:                  ; CODE XREF: IE0_0+AA↑p
                                        ; IE0_0+2FF↑p ...
                mov     A, B            ; A = B
                xch     A, R1           ; Store value of B in R1
                mul     AB              ; Prod_MSB = B * R1
                xch     A, R0
                xch     A, B            ; B-Register
                xch     A, R1           ; R0 = LOW(Prod_MSB), R1 = HIGH(Prod_MSB)
                mul     AB              ; Prod_LSB = R0 * B
                xch     A, B            ; B-Register
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A           ; R1:R0 = Prod_MSB + HIGH(Prod_LSB)
                ret
; End of function scale_ADC_10bit_value


; =============== S U B R O U T I N E =======================================


code_600D:                              ; CODE XREF: IE0_0+38D↑p
                                        ; IE0_0+3DE↑p ...
                mov     A, B            ; B-Register
                xch     A, R1
                jb      ACC.7, code_6019 ; Accumulator
                mul     AB
                xch     A, R0
                xch     A, B            ; B-Register
                sjmp    code_601F
; ---------------------------------------------------------------------------

code_6019:                              ; CODE XREF: code_600D+3↑j
                mul     AB
                xch     A, R0
                xch     A, B            ; B-Register
                clr     C
                subb    A, R1

code_601F:                              ; CODE XREF: code_600D+A↑j
                xch     A, R1
                mul     AB
                xch     A, B            ; B-Register
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                ret
; End of function code_600D


; =============== S U B R O U T I N E =======================================


code_602A:                              ; CODE XREF: IE0_0+780↑p
                                        ; IE0_0+839↑p ...
                mov     A, R0
                mov     B, R2           ; B-Register
                mul     AB
                push    ACC             ; Accumulator
                mov     A, B            ; B-Register
                xch     A, R0
                mov     B, R3           ; B-Register
                mul     AB
                add     A, R0
                mov     R0, A
                mov     A, B            ; B-Register
                addc    A, #0
                xch     A, R2
                mov     B, R1           ; B-Register
                mul     AB
                add     A, R0
                xch     A, R1
                mov     R0, A
                mov     A, B            ; B-Register
                addc    A, R2
                mov     R2, A
                clr     A
                addc    A, #0
                xch     A, R3
                mov     B, R0           ; B-Register
                mul     AB
                add     A, R2
                mov     R2, A
                mov     A, B            ; B-Register
                addc    A, R3
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R0, A
                ret
; End of function code_602A


; =============== S U B R O U T I N E =======================================


code_6058:                              ; CODE XREF: IE0_0:code_1D0E↑p
                                        ; power_on__ignition_key_turned_+EDE↑p ...
                clr     C
                clr     A
                subb    A, R0
                mov     R0, A
                clr     A
                subb    A, R1
                mov     R1, A
                ret
; End of function code_6058


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - R1:R0 - input word
;
; OUTPUT:
;  - R1:R0
;
; if (R1 & (1<<7)) return R1:R0
;
; R0 = 0 - R0
; R1 = 0 - R1
;

abs_word_by_msb:                        ; CODE XREF: power_on__ignition_key_turned_+D40↑p
                                        ; power_on__ignition_key_turned_+E9A↑p ...
                mov     A, R1
                jnb     ACC.7, code_606B ; Accumulator
                clr     C
                clr     A
                subb    A, R0
                mov     R0, A
                clr     A
                subb    A, R1
                mov     R1, A

code_606B:                              ; CODE XREF: abs_word_by_msb+1↑j
                ret
; End of function abs_word_by_msb


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - R2
;
; OUTPUT:
;  - R3 = 0xFF if (R2 & 0x80); 0x00 otherwise.
;
; USES: Acc

cast_signed_R2_to_R3R2:                 ; CODE XREF: code_5D9F+67↑p
                                        ; update_ram_63+29↓p ...
                mov     A, R2           ; A = R2
                jnb     ACC.7, code_6073 ; Accumulator
                mov     R3, #0FFh
                ret
; ---------------------------------------------------------------------------

code_6073:                              ; CODE XREF: cast_signed_R2_to_R3R2+1↑j
                mov     R3, #0
                ret
; End of function cast_signed_R2_to_R3R2


; =============== S U B R O U T I N E =======================================


code_6076:                              ; CODE XREF: IE0_0+4A8↑p
                                        ; IE0_0+648↑p ...
                mov     A, R0
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, R1
                jc      saturate_r0_r1_to_ff_ff
                mov     R1, A
                ret
; ---------------------------------------------------------------------------

saturate_r0_r1_to_ff_ff:                ; CODE XREF: code_6076+5↑j
                                        ; shl_word_twice+7↓j ...
                mov     R0, #0FFh
                mov     R1, #0FFh
                ret
; End of function code_6076


; =============== S U B R O U T I N E =======================================


code_6084:                              ; CODE XREF: code_5D9F+1AF↑p
                mov     A, R2
                add     A, R2
                mov     R2, A
                mov     A, R3
                addc    A, R3
                jc      code_608D
                mov     R3, A
                ret
; ---------------------------------------------------------------------------

code_608D:                              ; CODE XREF: code_6084+5↑j
                mov     R2, #0FFh
                mov     R3, #0FFh
                ret
; End of function code_6084


; =============== S U B R O U T I N E =======================================

; INPUT:
;   R1:R0
; OUTPUT:
;   R1:R0 = (R1:R0) << 2, or FF:FF (if overflow happens)
;   R1 - value for RAM[0x48]
;

shl_word_twice:                         ; CODE XREF: power_on__ignition_key_turned_:code_2AD1↑p
                mov     A, R0           ; A = R0
                mov     R0, #2          ; R0 = 2
                clr     C               ; CY = 0

code_6096:                              ; CODE XREF: shl_word_twice+A↓j
                rlc     A
                xch     A, R1
                rlc     A
                jc      saturate_r0_r1_to_ff_ff
                xch     A, R1
                djnz    R0, code_6096
                mov     R0, A
                ret
; End of function shl_word_twice


; =============== S U B R O U T I N E =======================================

; INPUT:
;   R1:R0
; OUTPUT:
;   R1:R0 = (R1:R0) << 3, or FF:FF (if overflow happens)
;

shl_word_3_times:                       ; CODE XREF: power_on__ignition_key_turned_+9BD↑p
                                        ; power_on__ignition_key_turned_+12C7↑p ...
                mov     A, R0           ; A = R0
                mov     R0, #3          ; R0 = 3
                clr     C               ; CY = 0

code_60A4:                              ; CODE XREF: shl_word_3_times+A↓j
                rlc     A               ; CY = !!(A & (1 << 7)), A = (A << 1) | CY_old
                xch     A, R1
                rlc     A
                jc      saturate_r0_r1_to_ff_ff
                xch     A, R1
                djnz    R0, code_60A4
                mov     R0, A
                ret
; End of function shl_word_3_times


; =============== S U B R O U T I N E =======================================


code_60AE:                              ; CODE XREF: code_5BB5+AA↑p
                mov     A, R0
                mov     R0, #3
                clr     C

code_60B2:                              ; CODE XREF: code_60AE+8↓j
                rlc     A
                xch     A, R1
                rlc     A
                xch     A, R1
                djnz    R0, code_60B2
                mov     R0, A
                ret
; End of function code_60AE


; =============== S U B R O U T I N E =======================================


code_60BA:                              ; CODE XREF: IE0_0+370↑p
                                        ; power_on__ignition_key_turned_+DF5↑p ...
                mov     A, R1
                anl     A, #0F0h
                jnz     saturate_r0_r1_to_ff_ff
                mov     A, R0
                anl     A, #0F0h
                orl     A, R1
                swap    A
                mov     R1, A
                mov     A, R0
                anl     A, #0Fh
                swap    A
                mov     R0, A
                ret
; End of function code_60BA


; =============== S U B R O U T I N E =======================================


code_60CB:                              ; CODE XREF: code_5555+2B↑p
                                        ; code_5555+5A↑p ...
                clr     C
                mov     A, R1
                rrc     A
                mov     R1, A
                mov     A, R0
                rrc     A
                mov     R0, A
                ret
; End of function code_60CB


; =============== S U B R O U T I N E =======================================

; INPUT:
;   R1:R0
;
; OUTPUT:
;   R1:R0 >>= 2

shr_word_twice:                         ; CODE XREF: IE0_0+556↑p
                                        ; IE0_0+75B↑p ...
                mov     A, R1           ; A = R1
                mov     R1, #2          ; R1 = 2

code_60D6:                              ; CODE XREF: shr_word_twice+8↓j
                clr     C
                rrc     A
                xch     A, R0
                rrc     A
                xch     A, R0
                djnz    R1, code_60D6
                mov     R1, A
                ret
; End of function shr_word_twice


; =============== S U B R O U T I N E =======================================

; INPUT:
;   R1:R0
;
; OUTPUT:
;   R1:R0 >>= 3

shr_word_3_times:                       ; CODE XREF: code_5620+17↑p
                mov     A, R1
                mov     R1, #3

code_60E2:                              ; CODE XREF: shr_word_3_times+8↓j
                clr     C
                rrc     A
                xch     A, R0
                rrc     A
                xch     A, R0
                djnz    R1, code_60E2
                mov     R1, A
                ret
; End of function shr_word_3_times


; =============== S U B R O U T I N E =======================================


code_60EB:                              ; CODE XREF: IE0_0+AD↑p
                                        ; code_56C7+20↑p ...
                mov     A, R0
                anl     A, #0F0h
                mov     R0, A
                mov     A, R1
                anl     A, #0Fh
                orl     A, R0
                swap    A
                mov     R0, A
                mov     A, R1
                anl     A, #0F0h
                swap    A
                mov     R1, A
                ret
; End of function code_60EB

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_6107
;   ADDITIONAL PARENT FUNCTION code_6116

code_60FB:                              ; CODE XREF: code_6107+2↓j
                                        ; code_6116+5↓j
                mov     A, #0FFh
                ret
; END OF FUNCTION CHUNK FOR code_6107
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_6116
;   ADDITIONAL PARENT FUNCTION code_612E

code_60FE:                              ; CODE XREF: code_6116:code_611E↓j
                                        ; code_612E+3↓j
                mov     A, #0
                ret
; END OF FUNCTION CHUNK FOR code_6116
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_6121

code_6101:                              ; CODE XREF: code_6121+5↓j
                                        ; code_6134+8↓j
                mov     A, #7Fh
                ret
; ---------------------------------------------------------------------------

code_6104:                              ; CODE XREF: code_6121:code_612A↓j
                                        ; code_6134+6↓j
                mov     A, #80h
                ret
; END OF FUNCTION CHUNK FOR code_6121

; =============== S U B R O U T I N E =======================================


code_6107:                              ; CODE XREF: power_on__ignition_key_turned_+198F↑p
                                        ; power_on__ignition_key_turned_+19AE↑p ...

; FUNCTION CHUNK AT 60FB SIZE 00000003 BYTES

                add     A, B            ; B-Register
                jc      code_60FB
                ret
; End of function code_6107

; ---------------------------------------------------------------------------
                db  25h ; %
                db 0F0h
                db  30h ; 0
                db 0D2h
                db    4
                db  40h ; @
                db 0F1h
                db  80h
                db 0ECh
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_6116:                              ; CODE XREF: code_5BB5+1BE↑p
                                        ; code_5BB5+1CF↑p ...

; FUNCTION CHUNK AT 60FB SIZE 00000003 BYTES
; FUNCTION CHUNK AT 60FE SIZE 00000003 BYTES

                add     A, B            ; B-Register
                jb      B.7, code_611E  ; B-Register
                jc      code_60FB
                ret
; ---------------------------------------------------------------------------

code_611E:                              ; CODE XREF: code_6116+2↑j
                jnc     code_60FE
                ret
; End of function code_6116


; =============== S U B R O U T I N E =======================================


code_6121:                              ; CODE XREF: code_5BB5+58↑p
                                        ; code_5BB5+1E2↑p

; FUNCTION CHUNK AT 6101 SIZE 00000006 BYTES

                clr     C
                subb    A, B            ; B-Register
                jc      code_612A
                jb      ACC.7, code_6101 ; Accumulator
                ret
; ---------------------------------------------------------------------------

code_612A:                              ; CODE XREF: code_6121+3↑j
                jnb     ACC.7, code_6104 ; Accumulator
                ret
; End of function code_6121


; =============== S U B R O U T I N E =======================================


code_612E:                              ; CODE XREF: power_on__ignition_key_turned_:code_3D45↑p
                                        ; power_on__ignition_key_turned_:code_3DB1↑p

; FUNCTION CHUNK AT 60FE SIZE 00000003 BYTES

                clr     C
                subb    A, B            ; B-Register
                jc      code_60FE
                ret
; End of function code_612E


; =============== S U B R O U T I N E =======================================


code_6134:                              ; CODE XREF: code_5BB5+FF↑p
                                        ; code_5D9F+1C8↑p
                clr     C
                subb    A, B            ; B-Register
                jnb     PSW.2, code_613E ; Program Status Word
                jnc     code_6104
                sjmp    code_6101
; ---------------------------------------------------------------------------

code_613E:                              ; CODE XREF: code_6134+3↑j
                ret
; End of function code_6134


; =============== S U B R O U T I N E =======================================

; Add words
;
; INPUT:
;  - R1:R0 - first word, R1 - high, R0 - low
;  - R3:R2 - second word, R3 - high, R2 - low
;
; OUTPUT:
;  - R1:R0 = (R1:R0) + (R3:R2)
;    A = R1
;    R1 - high, R0 - low
;    CY - if overflowed
;

add_word:                               ; CODE XREF: IE0_0+30E↑p
                                        ; IE0_0+352↑p ...
                mov     A, R0           ; A = R0
                add     A, R2           ; A = R0 + R2
                mov     R0, A           ; R0 += R2
                mov     A, R1           ; A = R1
                addc    A, R3           ; A = R3 + R1 + CY
                mov     R1, A           ; R1 += R3 + CY
                ret
; End of function add_word

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_615A
;   ADDITIONAL PARENT FUNCTION add_signed_word_with_saturation

R1_R0_ffff:                             ; CODE XREF: code_615A+6↓j
                                        ; add_signed_word_with_saturation+A↓j
                mov     R0, #0FFh
                mov     R1, #0FFh
                ret
; END OF FUNCTION CHUNK FOR code_615A
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR add_signed_word_with_saturation

R1_R0_0000:                             ; CODE XREF: add_signed_word_with_saturation:code_617E↓j
                mov     R0, #0
                mov     R1, #0
                ret
; END OF FUNCTION CHUNK FOR add_signed_word_with_saturation
; ---------------------------------------------------------------------------
                db  78h ; x
                db 0FFh
                db  79h ; y
                db  7Fh ; 
                db  22h ; "
                db  78h ; x
                db    0
                db  79h ; y
                db  80h
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_615A:                              ; CODE XREF: IE0_0+F2D↑p
                                        ; code_58D1+3F↑p ...

; FUNCTION CHUNK AT 6146 SIZE 00000005 BYTES

                mov     A, R0
                add     A, R2
                mov     R0, A
                mov     A, R1
                addc    A, R3
                mov     R1, A
                jc      R1_R0_ffff
                ret
; End of function code_615A

; ---------------------------------------------------------------------------
                db 0E8h
                db  2Ah ; *
                db 0F8h
                db 0E9h
                db  3Bh ; ;
                db 0F9h
                db  30h ; 0
                db 0D2h
                db    4
                db  40h ; @
                db 0E7h
                db  80h
                db 0E0h
                db  22h ; "

; =============== S U B R O U T I N E =======================================

; employ "sign and magnitude" representation

add_signed_word_with_saturation:        ; CODE XREF: code_58D1+91↑p

; FUNCTION CHUNK AT 6146 SIZE 00000005 BYTES
; FUNCTION CHUNK AT 614B SIZE 00000005 BYTES

                mov     A, R0
                add     A, R2
                mov     R0, A
                mov     A, R1
                addc    A, R3
                mov     R1, A
                mov     A, R3
                jb      ACC.7, code_617E ; Accumulator
                jc      R1_R0_ffff      ; overflow
                ret
; ---------------------------------------------------------------------------

code_617E:                              ; CODE XREF: add_signed_word_with_saturation+7↑j
                jnc     R1_R0_0000      ; negative zero is still a zero
                ret
; End of function add_signed_word_with_saturation


; =============== S U B R O U T I N E =======================================


add_word_R3_R2:                         ; CODE XREF: code_55DE+16↑p
                                        ; code_5649+2E↑p
                mov     A, R0
                add     A, R2
                mov     R2, A           ; R2 += R0
                mov     A, R1
                addc    A, R3
                mov     R3, A           ; R3 += R1
                ret
; End of function add_word_R3_R2


; =============== S U B R O U T I N E =======================================

; INPUT - R1:R0
;         R3:R2
;
; OUTPUT - R1:R0 = R1:R0 - R3:R2
;          A = R1
;
; R1 - high, R0 - low
; R3 - high, R2 - low

subtract_word:                          ; CODE XREF: IE0_0+383↑p
                                        ; IE0_0+3B3↑p ...
                clr     C
                mov     A, R0
                subb    A, R2
                mov     R0, A           ; R0 = R0 - R2, CY = borrow, AC - borrow needed for bit 3, OV - borrow needed for bit 6 or bit 7 but for both.
                                        ;
                                        ; OV = 1 => a negative number produced when a negative value is
                                        ;           subtracted from a positive value, or a positive result
                                        ;           when a positive number is subtracted from a negative number.
                mov     A, R1
                subb    A, R3
                mov     R1, A           ; R1 = R1 - R3 - CY, CY = borrow
                ret
; End of function subtract_word


; =============== S U B R O U T I N E =======================================


code_6190:                              ; CODE XREF: code_5BB5+A7↑p
                                        ; code_5BB5+129↑p
                mov     A, R0
                jb      ACC.7, code_6197 ; Accumulator
                mov     R1, #0
                ret
; ---------------------------------------------------------------------------

code_6197:                              ; CODE XREF: code_6190+1↑j
                mov     R1, #0FFh
                ret
; End of function code_6190


; =============== S U B R O U T I N E =======================================


code_619A:                              ; CODE XREF: code_5BB5+C7↑p
                                        ; code_5D9F+1B9↑p
                mov     A, R1
                jb      ACC.7, code_61A7 ; Accumulator
                jnz     code_61A4
                mov     A, R0
                jnb     ACC.7, code_61B0 ; Accumulator

code_61A4:                              ; CODE XREF: code_619A+4↑j
                mov     A, #7Fh
                ret
; ---------------------------------------------------------------------------

code_61A7:                              ; CODE XREF: code_619A+1↑j
                cpl     A
                jnz     code_61AE
                mov     A, R0
                jb      ACC.7, code_61B0 ; Accumulator

code_61AE:                              ; CODE XREF: code_619A+E↑j
                mov     A, #80h

code_61B0:                              ; CODE XREF: code_619A+7↑j
                                        ; code_619A+11↑j
                ret
; End of function code_619A


; =============== S U B R O U T I N E =======================================


code_61B1:                              ; CODE XREF: power_on__ignition_key_turned_+273F↑p
                                        ; power_on__ignition_key_turned_+274F↑p ...
                jnb     ACC.7, code_61B6 ; Accumulator
                cpl     A
                inc     A

code_61B6:                              ; CODE XREF: code_61B1↑j
                ret
; End of function code_61B1


; =============== S U B R O U T I N E =======================================

; get or set ram[0x63] based on ram[0x72]&0x20 ???

update_ram_63:                          ; CODE XREF: power_on__ignition_key_turned_+3B3↑p
                                        ; power_on__ignition_key_turned_+252B↑p
                mov     A, RAM_72       ; A = RAM[0x72]
                jnb     ACC.5, code_61F7 ; if (!(A & 0x20)) jump ...
                                        ; if (!(RAM[0x72] & 0x20)) jump ...
                mov     A, RAM_4C       ; A = RAM[0x4C]
                mov     B, #11h         ; B = 0x11
                mul     AB              ; B:A = A * B
                                        ; // B - high byte, A - low byte
                mov     DPTR, #8AFBh
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; DPTR = 0x8AFB + A
                                        ;
                                        ; // RAM[0x4C] is expect to be no more than 0xFF
                mov     A, RAM_5D       ; A = RAM[0x5D]
                lcall   lookup_17byte_table_with_saturation ; Lookup value in the table.
                                        ; Table size = 0x11 bytes (Idx = 0x00..0x10).
                                        ;
                                        ; INPUT:
                                        ;  - Accumulator - RAM[0x5D] = Input, value to lookup
                                        ;  - DPTR - pointer to Table in FLASH
                                        ;
                                        ; OUTPUT:
                                        ;  - Accumulator;
                                        ;    Output byte is packed:
                                        ;     - high nibble = Idx of last value less or equal than Input
                                        ;     - low nibble = offset of Input in interval Table[Idx]..Table[Idx + 1]
                                        ;    That is: MSB..LSB: xxxx yyyy,
                                        ;             xxxx = Idx of last value less or equal than Input;
                                        ;             yyyy = offset of Input in interval FLASH[FlashPtr + Idx]..FLASH[FlashPtr + Idx + 1]
                                        ;
                                        ;   Saturation is performed if Input is out of bounds of the Table.
                                        ;
                                        ;
                                        ; USES: A, B, R0, R1, R2, R3
                                        ;
                                        ;
                mov     DPTR, #0F779h
                movx    @DPTR, A        ; XRAM[0xF779] = Acc
                mov     R0, A           ; R0 = A
                mov     R1, #0          ; R1 = 0
                mov     DPTR, #0F602h
                movx    A, @DPTR        ; A = XRAM[0xF602]
                mov     R2, A           ; R2 = XRAM[0xF602]
                lcall   cast_signed_R2_to_R3R2 ; INPUT:
                                        ;  - R2
                                        ;
                                        ; OUTPUT:
                                        ;  - R3 = 0xFF if (R2 & 0x80); 0x00 otherwise.
                                        ;
                                        ; USES: Acc
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                mov     A, R1           ; A = high byte of sum
                jnb     ACC.7, code_61ED ; if (A >= 0) jump ...
                clr     A               ; A = 0
                sjmp    code_61F4
; ---------------------------------------------------------------------------

code_61ED:                              ; CODE XREF: update_ram_63+30↑j
                jz      code_61F3       ; if (!A) jump ...
                mov     A, #0FFh        ; A = 0xFF
                sjmp    code_61F4
; ---------------------------------------------------------------------------

code_61F3:                              ; CODE XREF: update_ram_63:code_61ED↑j
                mov     A, R0           ; A = low byte of sum

code_61F4:                              ; CODE XREF: update_ram_63+34↑j
                                        ; update_ram_63+3A↑j
                mov     RAM_63, A       ; RAM[0x63] = A = 0
                ret
; ---------------------------------------------------------------------------

code_61F7:                              ; CODE XREF: update_ram_63+2↑j
                mov     R0, RAM_63      ; R0 = RAM[0x63]
                mov     R1, #0          ; R1 = 0
                mov     DPTR, #0F602h
                movx    A, @DPTR        ; A = XRAM[0xF602]
                mov     R2, A           ; R2 = XRAM[0xF602]
                lcall   cast_signed_R2_to_R3R2 ; INPUT:
                                        ;  - R2
                                        ;
                                        ; OUTPUT:
                                        ;  - R3 = 0xFF if (R2 & 0x80); 0x00 otherwise.
                                        ;
                                        ; USES: Acc
                lcall   subtract_word   ; R1:R0 = 0x00:RAM[0x63]
                                        ; R3:R2 = (signed word)((signed byte)XRAM[F602])
                                        ;
                                        ; diff = R1:R0 = R1:R0 - R3:R2
                                        ; A = R1
                jnb     ACC.7, code_620C ; if (diff >= 0) jump ...
                clr     A               ; A (high byte of diff) < 0 => A = 0
                                        ; saturate negative difference to zero
                sjmp    code_6213
; ---------------------------------------------------------------------------

code_620C:                              ; CODE XREF: update_ram_63+4F↑j
                jz      code_6212       ; if (!A) jump ...
                mov     A, #0FFh        ; A = 0xFF = -1? invalid value?
                                        ; only possible when R0 >= 0x80 and R2 contains negative value (R2 & 0x80 is true)
                sjmp    code_6213
; ---------------------------------------------------------------------------

code_6212:                              ; CODE XREF: update_ram_63:code_620C↑j
                mov     A, R0           ; A = R0 = low byte of diff
At this point Acc contains saturated difference:
 RAM[0x63] - XRAM[0xF602] which saturates to:
 - 0x00 if result is negative
 - 0xFF if overflow happened (i.e. RAM[0x63] >= 0x80 and XRAM[0xF602] is negative)

If saturation conditions are not met the difference value is preserved.

code_6213:                              ; CODE XREF: update_ram_63+53↑j
                                        ; update_ram_63+59↑j
                mov     DPTR, #0F779h
                movx    @DPTR, A        ; XRAM[0xF779] = A = saturated(RAM[0x63] - XRAM[0xF602])
                mov     R2, A           ; R2 = A = XRAM[0xF779]
                mov     R3, RAM_4A      ; R3 = RAM[0x4A]
                mov     DPTR, #8AFBh
                lcall   profile_table_value ; INPUT:
                                        ;  - R2 = low byte of difference  = saturated(RAM[0x63] - XRAM[0xF602]) // packed value?
                                        ;  - R3 = RAM[0x4A] = (table line number << 4) - packed value
                                        ;  - DPTR = 0x8AFB = table base address
                                        ;
                                        ;  saturated(x) = if x < 0 => 0
                                        ;                 on overflow => 0xff
                                        ;
                                        ;   R3 is expected to be pack:
                                        ;    high nibble = offset in table line
                                        ;    low nibble = offset to next value in table line with 1/16 stepping
                                        ;
                                        ; OUTPUT:
                                        ;  - R1
                                        ;  - R0
                                        ;
                                        ; LOW(x) = x & 0x0F
                                        ; BASE = DPTR + ((R3 >> 4) * R4) + (R2 >> 4)
                                        ;              TableLineIdx * TableLineSz + TableLineOffset
                                        ;               (R3 >> 4)        R4            (R2 / 16)
                                        ; (R3 >> 4) * R4 - expected to be 0x00..0xFF
                                        ; R4 = 0x11 = table line size
                                        ; DPTR now points to value in table, from which to start interpolating/profiling (?)
                                        ;      i.e. it points to base now
                                        ;
                                        ; R1:R0 = FLASH[BASE] : 0x00, if LOW(R2) and LOW(R3) are both nil
                                        ;
                                        ; R1:R0 =   ((        LOW(R2)  *         LOW(R3))  * FLASH[BASE + R4 + 1])
                                        ;         + (((0x10 - LOW(R2)) *         LOW(R3))  * FLASH[BASE + R4]    )
                                        ;         + ((        LOW(R2)  * (0x10 - LOW(R3))) * FLASH[BASE + 1]     )
                                        ;         + (((0x10 - LOW(R2)) * (0x10 - LOW(R3))) * FLASH[BASE]         )
                                        ;
                                        ; A = R1
                mov     RAM_5D, A
                ret
; End of function update_ram_63


; =============== S U B R O U T I N E =======================================


code_6223:                              ; CODE XREF: power_on__ignition_key_turned_+1BAE↑p
                                        ; power_on__ignition_key_turned_+1C68↑p ...
                mov     A, RAM_72
                jb      ACC.5, code_625B ; Accumulator
                mov     A, RAM_73
                jb      ACC.7, code_625B ; Accumulator
                mov     DPTR, #0F77Ah
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F778h
                movx    A, @DPTR
                lcall   code_6116
                lcall   init_ram_63     ; INPUT:
                                        ;  - Accumulator - high byte of table lookup
                                        ;
                                        ; OUTPUT:
                                        ;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)
                jnb     RAM_28.1, code_625B
                mov     DPTR, #8764h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F77Ah
                movx    A, @DPTR
                jb      ACC.7, code_6255 ; Accumulator
                clr     C
                subb    A, B            ; B-Register
                jc      code_6259
                sjmp    code_625A
; ---------------------------------------------------------------------------

code_6255:                              ; CODE XREF: code_6223+28↑j
                add     A, B            ; B-Register
                jnc     code_625A

code_6259:                              ; CODE XREF: code_6223+2E↑j
                clr     A

code_625A:                              ; CODE XREF: code_6223+30↑j
                                        ; code_6223+34↑j
                movx    @DPTR, A

code_625B:                              ; CODE XREF: code_6223+2↑j
                                        ; code_6223+7↑j ...
                ret
; End of function code_6223


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - Accumulator - high byte of table lookup
;
; OUTPUT:
;  - RAM[0x63] = Acc or XRAM[0xF602] (the latter is decremented if Acc < 0)

init_ram_63:                            ; CODE XREF: power_on__ignition_key_turned_+3B0↑p
                                        ; power_on__ignition_key_turned_+161B↑p ...
                mov     RAM_63, A       ; RAM[0x63] = A
                mov     DPTR, #0F602h   ; DPTR = 0xF602
                movx    A, @DPTR        ; A = XRAM[0xF602]
                mov     B, A            ; B = XRAM[0xF602]
                jb      ACC.7, code_6273 ; if (XRAM[0xF602] & 0x80) jump ...
                                        ;
                                        ; // ???: if (XRAM[0xF602] < 0) jump ...
                mov     A, RAM_63
                cjne    A, B, code_626C ; // RAM[0x63] = A; // input
                                        ;
                                        ; CY = RAM[0x63] < XRAM[0xF602];
                                        ; if (A != B) jmp ...

code_626C:                              ; CODE XREF: init_ram_63+D↑j
                jnc     done_625c       ; if (!CY) jmp ... = if (RAM[0x63] >= XRAM[0xF602]) jmp ...
                mov     RAM_63, B       ; RAM[0x63] = B = FLASH[0xF602]
                sjmp    done_625c
; ---------------------------------------------------------------------------

code_6273:                              ; CODE XREF: init_ram_63+8↑j
                mov     A, RAM_63
                cjne    A, B, code_6278 ; // RAM[0x63] = A; // input
                                        ;
                                        ; CY = RAM[0x63] < XRAM[0xF602];
                                        ; if (A != B) jmp ...

code_6278:                              ; CODE XREF: init_ram_63+19↑j
                jc      done_625c       ; if (CY) jump ... = if (RAM[0x63] < XRAM[0xF602]) jump ...
                mov     A, B            ; B-Register
                dec     A
                mov     RAM_63, A       ; RAM[0x63] = B - 1 = XRAM[0xF602] - 1

done_625c:                              ; CODE XREF: init_ram_63:code_626C↑j
                                        ; init_ram_63+15↑j ...
                ret
; End of function init_ram_63


; =============== S U B R O U T I N E =======================================

; Lookup value in the table.
; Table size = 0x11 bytes (Idx = 0x00..0x10).
;
; INPUT:
;  - Accumulator - RAM[0x5D] = Input, value to lookup
;  - DPTR - pointer to Table in FLASH
;
; OUTPUT:
;  - Accumulator;
;    Output byte is packed:
;     - high nibble = Idx of last value less or equal than Input
;     - low nibble = offset of Input in interval Table[Idx]..Table[Idx + 1]
;    That is: MSB..LSB: xxxx yyyy,
;             xxxx = Idx of last value less or equal than Input;
;             yyyy = offset of Input in interval FLASH[FlashPtr + Idx]..FLASH[FlashPtr + Idx + 1]
;
;   Saturation is performed if Input is out of bounds of the Table.
;
;
; USES: A, B, R0, R1, R2, R3
;
;

lookup_17byte_table_with_saturation:    ; CODE XREF: update_ram_63+1A↑p
                mov     R0, A           ; R0 = A
                mov     R1, #0          ; R1 = 0, counter

code_6283:                              ; CODE XREF: lookup_17byte_table_with_saturation+E↓j
                mov     A, R1
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R1]
                mov     R2, A           ; R2 = A = FLASH[DPTR + R1]
                mov     A, R0           ; A = R0
                cjne    A, RAM_2, code_628A ; RAM[0x2] = R2 @ rb 0
                                        ; cmp A, R2: CY = A < R2
                                        ; cmp R0, FLASH[DPTR + R1]: CY = R0 < FLASH[DPTR + R1]

code_628A:                              ; CODE XREF: lookup_17byte_table_with_saturation+7↑j
                jc      code_6294       ; if (R0 < FLASH[DPTR + R1]) break to ...
                inc     R1              ; ++R1
                mov     A, R1           ; A = R1
                cjne    A, #10h, code_6283 ; while (counter < 0x10)
                mov     A, #0FFh        ; A = 0xFF
                ret
; ---------------------------------------------------------------------------

code_6294:                              ; CODE XREF: lookup_17byte_table_with_saturation:code_628A↑j
                mov     A, R1           ; A = R1 (last counter value)
                jz      code_62A4       ; if (!A) jump ...
                                        ; if (!R1) jump ...
                dec     A               ; --A
                mov     R1, A           ; R1 = A => --R1
                movc    A, @A+DPTR      ; A = FLASH[DPTR + A] = FLASH[DPTR + R1]
                mov     R2, A           ; R2 = A = FLASH[DPTR + R1]
                mov     A, R1
                inc     A               ; A = R1 + 1
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R1 + 1]
                clr     C
                subb    A, R2           ; A = A - R2 = FLASH[DPTR+R1+1] - FLASH[DPTR+R1]
                jnz     code_62A5       ; if (A) jump ...
                                        ; if (FLASH[DPTR+R1+1] != FLASH[DPTR+R1]) jump ...
                mov     A, R1           ; A = R1
                swap    A               ; A = swap_nibbles(A)

code_62A4:                              ; CODE XREF: lookup_17byte_table_with_saturation+15↑j
                ret
; ---------------------------------------------------------------------------

code_62A5:                              ; CODE XREF: lookup_17byte_table_with_saturation+20↑j
                mov     R3, A           ; R3 = A = FLASH[DPTR+R1+1] - FLASH[DPTR+R1]
                mov     A, R0           ; A = R0
                clr     C               ; CY = 0
                subb    A, R2           ; A = R0 - R2 = R0 - FLASH[DPTR+R1]
                mov     B, #10h         ; B = 0x10
                mul     AB              ; AB = A * 0x10 = (Input - FLASH[DPTR+R1]) * 0x10 => A = low byte; B = high byte;
                                        ;
                                        ; B = (A & 0xF0) >> 4
                                        ; A = (A & 0x0F) << 4
                clr     RAM_27.2
divide 16bit/16bit, time - 4CY

code_62AF:                              ; CODE XREF: lookup_17byte_table_with_saturation+45↓j
                mov     MD0, A          ; Dividend, low
                mov     MD1, B          ; Dividend, high
                mov     MD4, R3         ; Divisor, low
                mov     MD5, #0         ; Divisor, high
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Quotient, low
                mov     R2, MD1         ; Quotient, high
                mov     R2, MD4         ; Reminder, low
                mov     R2, MD5         ; Reminder, high
                jbc     RAM_27.2, code_62AF ; if (bit is set) {
                                        ;   clear bit;
                                        ;   jump ...
                                        ; }
                setb    RAM_27.2        ; set bit
                mov     A, R1           ; A = R1
                swap    A               ; swap nibbles of A
                add     A, R0           ; A += R0
                ret
; End of function lookup_17byte_table_with_saturation


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - R1 - index in table
;  - R0 - factor to scale difference
;  - DPTR - table ptr in FLASH
;
; OUTPUT:
;  - Acc - table value

interpolate_table_value:                ; CODE XREF: power_on__ignition_key_turned_+771↑p
                                        ; power_on__ignition_key_turned_+D9D↑p ...
                mov     A, R1
                movc    A, @A+DPTR
                xch     A, R1           ; Acc = R1
                                        ; R1 = FLASH[DPTR + R1]
                inc     A
                movc    A, @A+DPTR
                clr     C
                subb    A, R1           ; A = FLASH[DPTR + R1 + 1] - FLASH[DPTR + R1]
                mov     B, R0           ; B-Register
                mul     AB              ; B:A = R0 * (FLASH[DPTR + R1 + 1] - FLASH[DPTR + R1])
                mov     A, B            ; A = B (HIGH(B:A))
                add     A, R1           ; A = FLASH[DPTR + R1] + HIGH(R0 * (FLASH[DPTR + R1 + 1] - FLASH[DPTR + R1]))
                ret
; End of function interpolate_table_value


; =============== S U B R O U T I N E =======================================

; INPUT
;   DPTR - table address in FLASH
;   R1:R0 = A/D Converted data
; 10-bit value,
; R1[7..0] - highest 8 bits
; R0[7..6] - lowest 2 bits
; R0[5..0] - unused
;
; OUTPUT
;  - calculated table value:
;    - result: word R1:R0, R1 - high, R0 - low
;        T[N] in R1 and zero in R0 if factor eq nil,
;        factor*(T[N+1] - T[N] otherwise)
;    - Accumulator = R1

get_adc_value_from_table:               ; CODE XREF: get_adc_value_from_table_and_adjust_for_calculus↓p
                mov     A, R1           ; A = R1
                swap    A               ; A = swap_nibbles(R1)
                anl     A, #0Fh         ; A = R1 >> 4
                mov     R3, A           ; R3 = R1 >> 4, highest 4 bits of A/D Converted data, it is offset
                mov     A, R1
                swap    A
                anl     A, #0F0h        ; A = R1 << 4
                mov     R2, A           ; R2 = R1 << 4
                mov     A, R0           ; A = R0
                swap    A
                anl     A, #0Fh         ; A = R0 >> 4
                orl     A, R2           ; A = (R1 << 4) | (R0 >> 4), lowest 6 bits of A/D Converted data, it is factor
                clr     PSW.1           ; no negation required
                sjmp    get_value_from_table_impl ; INPUT
; End of function get_adc_value_from_table ;  - DPTR table address in FLASH
                                        ;  - Acc - Factor
                                        ;  - R3 - Offset
                                        ;  - PSW.F1 - should table data be XOR'ed with 0x80 (negate?)
                                        ;
                                        ; OUTPUT
                                        ;  - result: word R1:R0, R1 - high, R0 - low
                                        ;      T[N] in R1 and zero in R0 if factor eq nil,
                                        ;      factor*(T[N+1] - T[N] otherwise)
                                        ;  - Accumulator = R1

; =============== S U B R O U T I N E =======================================


code_62EF:                              ; CODE XREF: code_5649+B↑p
                                        ; code_5649+78↑p
                mov     R2, A
                swap    A
                anl     A, #0Fh
                mov     R3, A
                mov     A, R2
                swap    A
                anl     A, #0F0h
                clr     PSW.1           ; Program Status Word
                sjmp    get_value_from_table_impl ; INPUT
; End of function code_62EF             ;  - DPTR table address in FLASH
                                        ;  - Acc - Factor
                                        ;  - R3 - Offset
                                        ;  - PSW.F1 - should table data be XOR'ed with 0x80 (negate?)
                                        ;
                                        ; OUTPUT
                                        ;  - result: word R1:R0, R1 - high, R0 - low
                                        ;      T[N] in R1 and zero in R0 if factor eq nil,
                                        ;      factor*(T[N+1] - T[N] otherwise)
                                        ;  - Accumulator = R1

; =============== S U B R O U T I N E =======================================

; INPUT:
;  - DPTR - flash location of table
;  - A - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
;
; OUTPUT:
;  - Accumulator - holds high byte of table lookup routine

table_lookup_0:                         ; CODE XREF: IE0_0+5AB↑p
                                        ; IE0_0+5D8↑p ...
                push    B               ; B-Register
                mov     B, A            ; B = A
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     A, R2
                push    ACC             ; Accumulator
                mov     A, R3
                push    ACC             ; Accumulator
                mov     R2, B           ; R2 = B
                lcall   get_value_from_table_no_negate ; Redirects call to table_lookup procedure
                mov     B, A            ; B-Register
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, A
                pop     ACC             ; Accumulator
                mov     R1, A
                pop     ACC             ; Accumulator
                mov     R0, A
                mov     A, B            ; B-Register
                pop     B               ; B-Register
                ret
; End of function table_lookup_0


; =============== S U B R O U T I N E =======================================


code_6324:                              ; CODE XREF: power_on__ignition_key_turned_+17C3↑p
                                        ; power_on__ignition_key_turned_+17DF↑p ...
                push    B               ; B-Register
                mov     B, A            ; B-Register
                mov     A, R0
                push    ACC             ; Accumulator
                mov     A, R1
                push    ACC             ; Accumulator
                mov     A, R2
                push    ACC             ; Accumulator
                mov     A, R3
                push    ACC             ; Accumulator
                mov     R2, B           ; B-Register
                lcall   code_6350
                mov     B, A            ; B-Register
                pop     ACC             ; Accumulator
                mov     R3, A
                pop     ACC             ; Accumulator
                mov     R2, A
                pop     ACC             ; Accumulator
                mov     R1, A
                pop     ACC             ; Accumulator
                mov     R0, A
                mov     A, B            ; B-Register
                pop     B               ; B-Register
                ret
; End of function code_6324

inline byte tripple_rotate_right(byte Data, byte Mask) {
  Data = ((Data & 0x0F) << 4) | ((Data & 0xF0) >> 4); // swap nibbles
  Data = (Data << 1) | (Data >> 7);          // rotate left
  return Data & Mask;
}


; =============== S U B R O U T I N E =======================================

; Redirects call to table_lookup procedure

get_value_from_table_no_negate:         ; CODE XREF: power_on__ignition_key_turned_+1943↑p
                                        ; table_lookup_0+12↑p
                clr     PSW.1           ; Program Status Word
                sjmp    get_value_from_table ; INPUT
; End of function get_value_from_table_no_negate ;  - DPTR table address in FLASH
                                        ;  - R2 - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;  - PSW.F1 - should table data be XOR'ed with 0x80 (negate?)
                                        ;
                                        ; OUTPUT
                                        ;  - result: word R1:R0, R1 - high, R0 - low
                                        ;      T[N] in R1 and zero in R0 if factor eq nil,
                                        ;      factor*(T[N+1] - T[N]), otherwise
                                        ;  - Accumulator = R1

; =============== S U B R O U T I N E =======================================


code_6350:                              ; CODE XREF: code_6324+12↑p
                setb    PSW.1           ; Program Status Word

get_value_from_table:                   ; CODE XREF: get_value_from_table_no_negate+2↑j
                mov     A, R2           ; INPUT
                                        ;  - DPTR table address in FLASH
                                        ;  - R2 - packed offset and factor (factor - least significant three bits, will be SHL 5; offset - most significant five bits, will be SHR 3)
                                        ;  - PSW.F1 - should table data be XOR'ed with 0x80 (negate?)
                                        ;
                                        ; OUTPUT
                                        ;  - result: word R1:R0, R1 - high, R0 - low
                                        ;      T[N] in R1 and zero in R0 if factor eq nil,
                                        ;      factor*(T[N+1] - T[N]), otherwise
                                        ;  - Accumulator = R1
                swap    A
                rl      A
                anl     A, #1Fh
                mov     R3, A           ; R3 = operate(R2, 0x1F);
                mov     A, R2
                swap    A
                rl      A
                anl     A, #0E0h        ; A = operate(R2, 0xE0)

get_value_from_table_impl:              ; CODE XREF: get_adc_value_from_table+11↑j
                                        ; code_62EF+B↑j
                mov     R2, A           ; INPUT
                                        ;  - DPTR table address in FLASH
                                        ;  - Acc - Factor
                                        ;  - R3 - Offset
                                        ;  - PSW.F1 - should table data be XOR'ed with 0x80 (negate?)
                                        ;
                                        ; OUTPUT
                                        ;  - result: word R1:R0, R1 - high, R0 - low
                                        ;      T[N] in R1 and zero in R0 if factor eq nil,
                                        ;      factor*(T[N+1] - T[N] otherwise)
                                        ;  - Accumulator = R1
                jnz     code_6366       ; if (A) jump ...
                mov     A, R3           ; R3 is offset
                movc    A, @A+DPTR
                mov     R1, A           ; R1 = FLASH[DPTR + R3]
                mov     R0, #0          ; R0 = 0
                ret
; ---------------------------------------------------------------------------

code_6366:                              ; CODE XREF: code_6350+E↑j
                mov     B, R2           ; B-Register
                mov     A, R3
                inc     A
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R3 + 1]
                jnb     PSW.1, code_6370 ; Program Status Word
                add     A, #80h         ; A += 0x80

code_6370:                              ; CODE XREF: code_6350+1B↑j
                mul     AB              ; B_A = A * B
                mov     R0, A           ; R0 = LOW(A * B)
                mov     R1, B           ; R1 = HIGH(A * B)
                mov     A, R2
                cpl     A
                inc     A               ; A = -R2
                mov     B, A            ; B = -R2
                mov     A, R3
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R3]
                jnb     PSW.1, code_6380 ; Program Status Word
                add     A, #80h

code_6380:                              ; CODE XREF: code_6350+2B↑j
                mul     AB
                add     A, R0
                mov     R0, A           ; R0 = LOW(A * B) + R0
                                        ; CY = 1, if carry took place
                mov     A, R1
                addc    A, B            ; A = R1 + CY + HIGH(A * B)
                jnb     PSW.1, code_638C ; Program Status Word
                clr     C
                subb    A, #80h

code_638C:                              ; CODE XREF: code_6350+36↑j
                mov     R1, A           ; R1 = A
                ret
; End of function code_6350


; =============== S U B R O U T I N E =======================================


code_638E:                              ; CODE XREF: IE0_0+670↑p
                                        ; IE0_0+758↑p
                mov     A, R2
                swap    A
                rl      A
                anl     A, #1Fh
                rl      A
                mov     R4, A
                mov     A, R2
                swap    A
                rl      A
                anl     A, #0E0h
                mov     R2, A
                jnz     code_63A5
                mov     A, R4
                movc    A, @A+DPTR
                mov     R0, A
                mov     A, R4
                inc     A
                movc    A, @A+DPTR
                mov     R1, A
                ret
; ---------------------------------------------------------------------------

code_63A5:                              ; CODE XREF: code_638E+D↑j
                mov     A, R4
                add     A, #2
                movc    A, @A+DPTR
                mov     R0, A
                mov     A, R4
                add     A, #3
                movc    A, @A+DPTR
                mov     R1, A
                mov     B, R2           ; B-Register
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                mov     A, R2
                cpl     A
                inc     A
                mov     B, A            ; B-Register
                mov     A, R0
                mov     R2, A
                mov     A, R1
                mov     R3, A
                mov     A, R4
                movc    A, @A+DPTR
                mov     R0, A
                mov     A, R4
                inc     A
                movc    A, @A+DPTR
                mov     R1, A
                lcall   scale_ADC_10bit_value ; INPUT:
                                        ;  - B - factor
                                        ;  - R1:R0 - ADC value (i.e. R1 - full, R0 only two most significant bits)
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = WORD(R1 * B) + HIGH(R0 * B)
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                ret
; End of function code_638E


; =============== S U B R O U T I N E =======================================


code_63CB:                              ; CODE XREF: IE0_0+2EF↑p
                                        ; IE0_0+3C2↑p ...
                clr     PSW.1           ; Program Status Word
                sjmp    code_63D1
; End of function code_63CB


; =============== S U B R O U T I N E =======================================


code_63CF:                              ; CODE XREF: power_on__ignition_key_turned_+1805↑p
                                        ; power_on__ignition_key_turned_+1A50↑p ...
                setb    PSW.1           ; Program Status Word

code_63D1:                              ; CODE XREF: code_63CB+2↑j
                mov     R4, #10h
                sjmp    profile_table_value_impl
; End of function code_63CF


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - R2 = low byte of difference  = saturated(RAM[0x63] - XRAM[0xF602]) // packed value?
;  - R3 = RAM[0x4A] = (table line number << 4) - packed value
;  - DPTR = 0x8AFB = table base address
;
;  saturated(x) = if x < 0 => 0
;                 on overflow => 0xff
;
;   R3 is expected to be pack:
;    high nibble = offset in table line
;    low nibble = offset to next value in table line with 1/16 stepping
;
; OUTPUT:
;  - R1
;  - R0
;
; LOW(x) = x & 0x0F
; BASE = DPTR + ((R3 >> 4) * R4) + (R2 >> 4)
;              TableLineIdx * TableLineSz + TableLineOffset
;               (R3 >> 4)        R4            (R2 / 16)
; (R3 >> 4) * R4 - expected to be 0x00..0xFF
; R4 = 0x11 = table line size
; DPTR now points to value in table, from which to start interpolating/profiling (?)
;      i.e. it points to base now
;
; R1:R0 = FLASH[BASE] : 0x00, if LOW(R2) and LOW(R3) are both nil
;
; R1:R0 =   ((        LOW(R2)  *         LOW(R3))  * FLASH[BASE + R4 + 1])
;         + (((0x10 - LOW(R2)) *         LOW(R3))  * FLASH[BASE + R4]    )
;         + ((        LOW(R2)  * (0x10 - LOW(R3))) * FLASH[BASE + 1]     )
;         + (((0x10 - LOW(R2)) * (0x10 - LOW(R3))) * FLASH[BASE]         )
;
; A = R1

profile_table_value:                    ; CODE XREF: update_ram_63+66↑p
                clr     PSW.1           ; clear boolean flag
                sjmp    code_63DB       ; jump to impl
; ---------------------------------------------------------------------------
                db 0D2h
                db 0D1h
; ---------------------------------------------------------------------------

code_63DB:                              ; CODE XREF: profile_table_value+2↑j
                mov     R4, #11h        ; R4 = 0x11, table line size?
INPUT:
 - R2 = low byte of difference  = saturated(RAM[0x63] - XRAM[0xF602])
 - R3 = table entry //table line number << 4
 - DPTR = table base address
 - R4 = table line length

saturated(x) = 0 if x < 0,
               0xff on overflow

  table entry (R3) is expected to be pack:
   high nibble = offset in table line
   low nibble = offset to next value in table line with 1/16 stepping


profile_table_value_impl:               ; CODE XREF: code_63CF+4↑j
                mov     A, R3           ; A = R3
                anl     A, #0F0h
                swap    A               ; A = R3 >> 4
                                        ; Fetch table line number
                mov     B, R4           ; B = R4 = table line size
                mul     AB              ; B:A = A * B
                                        ; Expected to be < 0x0100, i.e. B is expected to be 0x00.
                                        ; A = offset to some line start in table
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; DPTR += A
                mov     A, R2           ; A = R2 = saturated difference
                anl     A, #0F0h
                swap    A               ; A = R2 >> 4 = R2 / 16
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; DPTR += A
DPTR += ((R3 >> 4) * R4) + (R2 >> 4)
(R3 >> 4) * R4 - expected to be 0x00..0xFF

DPTR += TableLineIdx * TableLineSz + TableLineOffset
         (R3 >> 4)        R4            (R2 / 16)
DPTR now points to value in table, from which to start interpolating/profiling (?)
     i.e. it points to base now
                mov     A, R2
                anl     A, #0Fh
                mov     R2, A           ; R2 &= 0x0F
                                        ; R2 %= 16
                mov     A, R3
                anl     A, #0Fh
                mov     R3, A           ; R3 &= 0x0F
                                        ; R3 = offset to next value in table line, steps of 1/16 of absolute length of range (next val - cur val);
                                        ;      i.e. R3 is interpolation step now
                orl     A, R2           ; A = R3 | R2
                jnz     code_640E       ; if (R3 || R2) jump ...
A = 0, R3 = 0, R2 = 0 => pick value from table
No interpolation required
                mov     A, #0
                movc    A, @A+DPTR      ; A = FLASH[DPTR]
                mov     R1, A           ; R1 = FLASH[DPTR]
                mov     R0, #0          ; R0 = 0
                ret
; ---------------------------------------------------------------------------
A != 0, (R3 != 0 || R2 != 0) - need to interpolate based on two offsets (R3 and R2)

code_640E:                              ; CODE XREF: profile_table_value+30↑j
                mov     A, R2           ; A = R2 = saturated difference >> 4 = saturated diff % 16
                mov     B, R3           ; B = R3 = interpolation step (fraction)
                mul     AB              ; B:A = R2 * R3,
                                        ; max value = 0x0F * 0x0F = 0xE1 (single byte)
                                        ; B = 0
                mov     B, A            ; B = A = R2 * R3
                mov     A, R4           ; A = R4
                                        ; A = table line size
                inc     A               ; A = R4 + 1
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R4 + 1]
                                        ; A = value from next line in table, with next idx in line (i.e. w/ overflow)
                jnb     PSW.1, code_641C ; Program Status Word
                add     A, #80h         ; CY = (A & 0x80)
                                        ; A |= 0x80
                                        ; negate A?

code_641C:                              ; CODE XREF: profile_table_value+42↑j
                mul     AB              ; B:A = B * A = (R2*R3) * FLASH[DPTR + R4 + 1]
                                        ;               product of offsets * value from next line with next idx in line
                mov     R0, A           ; R0 = A
                mov     R1, B           ; R1 = B
                                        ;
                                        ; R1:R0 = (R2*R3) * FLASH[DPTR + R4 + 1]
                                        ;         product of offsets * value from next line with next idx in line
                mov     A, #10h         ; A = 0x10
                clr     C               ; CY = 0
                subb    A, R2           ; A = 0x10 - R2 = 0x10 - offset in difference of table entries
                mov     B, R3           ; B = R3 = offset of table entry
                mul     AB              ; B:A = (0x10 - R2) * R3, max value = 0xE1, B = 0
                mov     B, A            ; B = A = (0x10 - R2) * R3
                mov     A, R4           ; A = R4
                movc    A, @A+DPTR      ; A = FLASH[DPTR + R4]
                jnb     PSW.1, code_6430 ; Program Status Word
                add     A, #80h         ; CY = (A & 0x80)
                                        ; A |= 0x80
                                        ; negate A?

code_6430:                              ; CODE XREF: profile_table_value+56↑j
                mul     AB              ; B:A = ((0x10 - R2) * R3) * FLASH[DPTR + R4]
                add     A, R0
                mov     R0, A           ; R0 += A
                mov     A, R1
                addc    A, B            ; B-Register
                mov     R1, A           ; R1 += B + C
                                        ;
                                        ; R1:R0 =   ((R2 * R3)          * FLASH[DPTR + R4 + 1])
                                        ;         + (((0x10 - R2) * R3) * FLASH[DPTR + R4]    )
                mov     A, #10h
                clr     C
                subb    A, R3
                mov     R3, A           ; R3 = 0x10 - R3
                mov     B, R2           ; B-Register
                mul     AB
                mov     B, A            ; B = A = R2 * (0x10 - R3)
                mov     A, #1
                movc    A, @A+DPTR      ; A = FLASH[DPTR + 1]
                jnb     PSW.1, code_6449 ; Program Status Word
                add     A, #80h         ; CY = (A & 0x80)
                                        ; A |= 0x80
                                        ; negate A?

code_6449:                              ; CODE XREF: profile_table_value+6F↑j
                mul     AB              ; B:A = (R2 * (0x10 - R3)) * FLASH[DPTR + 1]
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, B            ; B-Register
                mov     R1, A           ; R1:R0 =   ((R2 * R3)          * FLASH[DPTR + R4 + 1])
                                        ;         + (((0x10 - R2) * R3) * FLASH[DPTR + R4]    )
                                        ;         + ((R2 * (0x10 - R3)) * FLASH[DPTR + 1]     )
                mov     A, #10h
                clr     C
                subb    A, R2           ; A = 0x10 - R2
                mov     B, R3           ; B-Register
                mul     AB
                mov     B, A            ; B = A = (0x10 - R2) * (0x10 - R3)
                mov     A, #0
                movc    A, @A+DPTR      ; A = FLASH[DPTR]
                jnb     PSW.1, code_6461 ; Program Status Word
                add     A, #80h

code_6461:                              ; CODE XREF: profile_table_value+87↑j
                mul     AB
                add     A, R0
                mov     R0, A
                mov     A, R1
                addc    A, B            ; R1:R0 =   ((        R2  *         R3)  * FLASH[DPTR + R4 + 1])
                                        ;         + (((0x10 - R2) *         R3)  * FLASH[DPTR + R4]    )
                                        ;         + ((        R2  * (0x10 - R3)) * FLASH[DPTR + 1]     )
                                        ;         + (((0x10 - R2) * (0x10 - R3)) * FLASH[DPTR]         )
                jnb     PSW.1, code_646D ; Program Status Word
                clr     C
                subb    A, #80h         ; clear negation flag?

code_646D:                              ; CODE XREF: profile_table_value+92↑j
                mov     R1, A
                ret
; End of function profile_table_value


; =============== S U B R O U T I N E =======================================


code_646F:                              ; CODE XREF: code_64E7+AC↓p
                clr     PSW.1           ; Program Status Word
                sjmp    code_6475
; End of function code_646F


; =============== S U B R O U T I N E =======================================


code_6473:                              ; CODE XREF: code_64E7+110↓p
                setb    PSW.1           ; Program Status Word

code_6475:                              ; CODE XREF: code_646F+2↑j
                mov     A, R0
                jnb     PSW.1, code_647B ; Program Status Word
                add     A, #80h

code_647B:                              ; CODE XREF: code_6473+3↑j
                mov     B, A            ; B-Register
                mov     A, R3
                cpl     A
                inc     A
                mul     AB
                mov     R0, A
                mov     R1, B           ; B-Register
                mov     A, R2
                jnb     PSW.1, code_648A ; Program Status Word
                add     A, #80h

code_648A:                              ; CODE XREF: code_6473+12↑j
                mov     B, R3           ; B-Register
                mul     AB
                add     A, R0
                mov     A, B            ; B-Register
                addc    A, R1
                jnb     PSW.1, code_6497 ; Program Status Word
                clr     C
                subb    A, #80h

code_6497:                              ; CODE XREF: code_6473+1E↑j
                ret
; End of function code_6473


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
;  - Acc - byte to add
;
; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
; V += Acc
; XRAM[DPTR] = LOW(V);
; XRAM[DPTR+1] = HIGH(V);
;
; A = HIGH(V)

add_byte_in_xram_word:                  ; CODE XREF: power_on__ignition_key_turned_+7E5↑p
                                        ; power_on__ignition_key_turned_+7F6↑p ...
                mov     B, A            ; B-Register
                movx    A, @DPTR
                add     A, B            ; B-Register
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                ret
; End of function add_byte_in_xram_word


; =============== S U B R O U T I N E =======================================

; INPUT:
;  - DPTR - address of low byte of word, DPTR+1 - address of high byte
;  - R1:R0 - word to add
;
; word V = COMPOSE_WORD(XRAM[DPTR+1], XRAM[DPTR]);
; V += R1:R0
; XRAM[DPTR] = LOW(V);
; XRAM[DPTR+1] = HIGH(V);
;
; A = HIGH(V)
;
; R1:R0 - left unchanged

add_word_in_xram_word:                  ; CODE XREF: power_on__ignition_key_turned_+7BE↑p
                                        ; power_on__ignition_key_turned_+7D5↑p ...
                movx    A, @DPTR
                add     A, R0
                movx    @DPTR, A
                inc     DPTR
                movx    A, @DPTR
                addc    A, R1
                movx    @DPTR, A
                ret
; End of function add_word_in_xram_word


; =============== S U B R O U T I N E =======================================

; Find ADC value in table and adjust for calculus
;
; INPUT
;   DPTR - table address in FLASH
;   R1:R0 = A/D Converted data
; 10-bit value,
; R1[7..0] - highest 8 bits
; R0[7..6] - lowest 2 bits
; R0[5..0] - unused
;
; OUTPUT
;   R1:R0 - adjusted table value
;   Acc = R1

get_adc_value_from_table_and_adjust_for_calculus:
                                        ; CODE XREF: power_on__ignition_key_turned_+8BF↑p
                                        ; power_on__ignition_key_turned_+8FB↑p ...
                lcall   get_adc_value_from_table ; INPUT
                                        ;   DPTR - table address in FLASH
                                        ;   R1:R0 = A/D Converted data
                                        ; 10-bit value,
                                        ; R1[7..0] - highest 8 bits
                                        ; R0[7..6] - lowest 2 bits
                                        ; R0[5..0] - unused
                                        ;
                                        ; OUTPUT
                                        ;  - calculated table value:
                                        ;    - result: word R1:R0, R1 - high, R0 - low
                                        ;        T[N] in R1 and zero in R0 if factor eq nil,
                                        ;        factor*(T[N+1] - T[N] otherwise)
                                        ;    - Accumulator = R1
                mov     A, R1           ; A = R1
                clr     C               ; CY = 0
                subb    A, #14h         ; A = R1 - 0x14
                jnc     code_64B8       ; if (!CY) jump ...
                                        ;
                                        ; if (R1 >= 0x14) jump ...
R1 < 0x14
                mov     R0, #0          ; R0 = 0
                clr     A               ; A = 0

code_64B8:                              ; CODE XREF: get_adc_value_from_table_and_adjust_for_calculus+7↑j
                mov     R1, A           ; if (R1 < 0x14) {
                                        ;   R1 = 0;
                                        ;   R0 = 0;
                                        ; } else
                                        ;   R1 -= 0x14;
                ret
; End of function get_adc_value_from_table_and_adjust_for_calculus


; =============== S U B R O U T I N E =======================================

; INPUT
;   R1:R0 - adjusted table value for A/D Converted value
;
; OUTPUT
;   X = (R1:R0 + 00:50) / 00:A0
;   X is Quotient. Reminder is not used.
;   if (X > 0xFF), 0xFF returned
;   if (R1:R0 + 00:50) overflow, 0xFF returned
;   otherwise - LOW(X).
;
;   Result returned in Acc
;

adjust_temperature:                     ; CODE XREF: power_on__ignition_key_turned_+934↑p
                                        ; power_on__ignition_key_turned_+99A↑p ...
                mov     R2, #50h ; 'P'
                mov     R3, #0          ; R3:R2 = 00:50
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                jc      saturate_result ; if (CY) jump ...

code_64C3:                              ; CODE XREF: adjust_temperature+22↓j
                clr     RAM_27.2        ; single run
Quot, Rem = MD1:MD0 / MD5:MD4
Quot = MD1:M0
Rem = MD5:MD4
                mov     MD0, R0         ; Multiplication/Division Register 0
                mov     MD1, R1         ; Multiplication/Division Register 1
                mov     MD4, #0A0h      ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
READING SEQUENCE is MALFORMED ???
                mov     B, MD0          ; Quot = A:B
                mov     A, MD1          ; Multiplication/Division Register 1
                mov     R2, MD2         ; Multiplication/Division Register 2
                mov     R2, MD3         ; spare Reminder
                jb      RAM_27.2, code_64C3
                jnz     saturate_result ; if (A) jump ...
                                        ; if (HIGH(Quot)) jump ...
                mov     A, B            ; A = LOW(Quot)
                ret
; ---------------------------------------------------------------------------

saturate_result:                        ; CODE XREF: adjust_temperature+7↑j
                                        ; adjust_temperature+25↑j
                mov     A, #0FFh        ; SATURATE(A) = 0xFF
                ret
; End of function adjust_temperature


; =============== S U B R O U T I N E =======================================


code_64E7:                              ; CODE XREF: power_on__ignition_key_turned_+1F36↑p
                                        ; power_on__ignition_key_turned_:code_42E4↑p
                mov     DPTR, #933Bh
                mov     A, RAM_4B
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #931Ch
                mov     A, RAM_4B
                movc    A, @A+DPTR
                mov     R1, A
                mov     A, RAM_40
                clr     C
                subb    A, R1
                cpl     C
                mov     RAM_2A.5, C
                jc      code_6502
                ljmp    code_65FC
; ---------------------------------------------------------------------------

code_6502:                              ; CODE XREF: code_64E7+16↑j
                jnz     code_6507
                ljmp    code_65FC
; ---------------------------------------------------------------------------

code_6507:                              ; CODE XREF: code_64E7:code_6502↑j
                mov     R1, A
                clr     C
                subb    A, B            ; B-Register
                jc      code_6511
                mov     A, #0FFh
                sjmp    code_6534
; ---------------------------------------------------------------------------

code_6511:                              ; CODE XREF: code_64E7+24↑j
                mov     DPTR, #0F6ADh
                movx    A, @DPTR
                mov     R0, A
                clr     RAM_27.2

code_6518:                              ; CODE XREF: code_64E7+47↓j
                mov     MD0, R0         ; Multiplication/Division Register 0
                mov     MD1, R1         ; Multiplication/Division Register 1
                mov     MD4, B          ; Multiplication/Division Register 4
                mov     MD5, #0         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                mov     R3, MD0         ; Multiplication/Division Register 0
                mov     A, MD1          ; Multiplication/Division Register 1
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_6518
                setb    RAM_27.2
                mov     A, R3

code_6534:                              ; CODE XREF: code_64E7+28↑j
                mov     DPTR, #0F772h
                movx    @DPTR, A
                mov     DPTR, #965Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     DPTR, #0F6F8h
                movx    @DPTR, A
                mov     DPTR, #975Ah
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CB
                mov     R1, A
                mov     DPTR, #0F6F8h
                movx    A, @DPTR
                mov     R0, A
                mov     DPTR, #98B9h
                mov     A, RAM_3D
                lcall   code_6324
                mov     R2, A
                lcall   code_65FD
                mov     R0, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, code_657F ; Accumulator
                mov     DPTR, #9879h
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #98FBh
                mov     A, RAM_3E
                lcall   code_6324
                mov     R2, A
                lcall   code_663A
                mov     R0, A

code_657F:                              ; CODE XREF: code_64E7+81↑j
                mov     A, R0
                mov     DPTR, #0F6F8h
                movx    @DPTR, A
                mov     R2, A
                mov     DPTR, #0F772h
                movx    A, @DPTR
                cjne    A, #0FFh, code_6590
                mov     RAM_57, R2
                sjmp    code_6598
; ---------------------------------------------------------------------------

code_6590:                              ; CODE XREF: code_64E7+A2↑j
                mov     R3, A
                mov     R0, RAM_57
                lcall   code_646F
                mov     RAM_57, A

code_6598:                              ; CODE XREF: code_64E7+A7↑j
                mov     A, RAM_72
                jb      ACC.2, code_65FC ; Accumulator
                mov     DPTR, #0A01Ch
                mov     R2, RAM_4A
                mov     R3, RAM_50
                lcall   code_63CF
                mov     R0, A
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR
                jnb     ACC.3, code_65C4 ; Accumulator
                mov     DPTR, #0A179h
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A1FBh
                mov     A, RAM_3E
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     R0, A

code_65C4:                              ; CODE XREF: code_64E7+C6↑j
                mov     DPTR, #0A15Ah
                mov     A, RAM_51
                movc    A, @A+DPTR
                mov     R1, A
                mov     DPTR, #0A1DAh
                mov     A, RAM_3D
                lcall   code_6324
                mov     R2, A
                lcall   code_6646
                mov     R2, A
                mov     DPTR, #0F773h
                movx    A, @DPTR
                cjne    A, #3, code_65E9
                mov     DPTR, #0B7EEh
                mov     A, RAM_4B
                movc    A, @A+DPTR
                xch     A, R2
                clr     C
                subb    A, R2
                mov     R2, A

code_65E9:                              ; CODE XREF: code_64E7+F5↑j
                mov     DPTR, #0F772h
                movx    A, @DPTR
                cjne    A, #0FFh, code_65F4
                mov     RAM_5A, R2
                sjmp    code_65FC
; ---------------------------------------------------------------------------

code_65F4:                              ; CODE XREF: code_64E7+106↑j
                mov     R3, A
                mov     R0, RAM_5A
                lcall   code_6473
                mov     RAM_5A, A

code_65FC:                              ; CODE XREF: code_64E7+18↑j
                                        ; code_64E7+1D↑j ...
                ret
; End of function code_64E7


; =============== S U B R O U T I N E =======================================


code_65FD:                              ; CODE XREF: power_on__ignition_key_turned_+17C7↑p
                                        ; code_64E7+78↑p
                mov     A, R1
                clr     C
                subb    A, R0
                clr     PSW.5           ; Program Status Word
                jnc     code_6608
                cpl     A
                inc     A
                setb    PSW.5           ; Program Status Word

code_6608:                              ; CODE XREF: code_65FD+5↑j
                                        ; code_663A:code_6644↓j
                mov     B, A            ; B-Register
                mov     A, R2
                jnb     ACC.7, code_6612 ; Accumulator
                cpl     A
                inc     A
                cpl     PSW.5           ; Program Status Word

code_6612:                              ; CODE XREF: code_65FD+E↑j
                mul     AB
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jc      code_6631
                xch     A, B            ; B-Register
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jc      code_6631
                jb      PSW.5, code_6628 ; Program Status Word
                add     A, R0
                jc      code_6637
                ret
; ---------------------------------------------------------------------------

code_6628:                              ; CODE XREF: code_65FD+24↑j
                mov     B, A            ; B-Register
                mov     A, R0
                clr     C
                subb    A, B            ; B-Register
                jc      code_6634
                ret
; ---------------------------------------------------------------------------

code_6631:                              ; CODE XREF: code_65FD+1A↑j
                                        ; code_65FD+22↑j
                jnb     PSW.5, code_6637 ; Program Status Word

code_6634:                              ; CODE XREF: code_65FD+31↑j
                mov     A, #0
                ret
; ---------------------------------------------------------------------------

code_6637:                              ; CODE XREF: code_65FD+28↑j
                                        ; code_65FD:code_6631↑j
                mov     A, #0FFh
                ret
; End of function code_65FD


; =============== S U B R O U T I N E =======================================


code_663A:                              ; CODE XREF: power_on__ignition_key_turned_+17E3↑p
                                        ; code_64E7+94↑p
                mov     A, R1
                clr     PSW.5           ; Program Status Word
                jnb     ACC.7, code_6644 ; Accumulator
                cpl     A
                inc     A
                setb    PSW.5           ; Program Status Word

code_6644:                              ; CODE XREF: code_663A+3↑j
                sjmp    code_6608
; End of function code_663A


; =============== S U B R O U T I N E =======================================


code_6646:                              ; CODE XREF: power_on__ignition_key_turned_+1821↑p
                                        ; power_on__ignition_key_turned_+1835↑p ...
                mov     A, R1
                clr     PSW.5           ; Program Status Word
                jnb     ACC.7, code_6650 ; Accumulator
                cpl     A
                inc     A
                setb    PSW.5           ; Program Status Word

code_6650:                              ; CODE XREF: code_6646+3↑j
                mov     B, A            ; B-Register
                mov     A, R2
                jnb     ACC.7, code_665A ; Accumulator
                cpl     A
                inc     A
                cpl     PSW.5           ; Program Status Word

code_665A:                              ; CODE XREF: code_6646+D↑j
                mul     AB
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jc      code_668A
                xch     A, B            ; B-Register
                rlc     A
                xch     A, B            ; B-Register
                rlc     A
                jc      code_668A
                jb      PSW.5, code_6679 ; Program Status Word
                jb      ACC.7, code_6674 ; Accumulator
                add     A, R0
                jb      PSW.2, code_6690 ; Program Status Word
                ret
; ---------------------------------------------------------------------------

code_6674:                              ; CODE XREF: code_6646+26↑j
                add     A, R0
                jnb     PSW.2, code_6690 ; Program Status Word
                ret
; ---------------------------------------------------------------------------

code_6679:                              ; CODE XREF: code_6646+23↑j
                mov     B, A            ; B-Register
                mov     A, R0
                clr     C
                subb    A, B            ; B-Register
                jb      B.7, code_6686  ; B-Register
                jb      PSW.2, code_668D ; Program Status Word
                ret
; ---------------------------------------------------------------------------

code_6686:                              ; CODE XREF: code_6646+39↑j
                jnb     PSW.2, code_668D ; Program Status Word
                ret
; ---------------------------------------------------------------------------

code_668A:                              ; CODE XREF: code_6646+19↑j
                                        ; code_6646+21↑j
                jnb     PSW.5, code_6690 ; Program Status Word

code_668D:                              ; CODE XREF: code_6646+3C↑j
                                        ; code_6646:code_6686↑j
                mov     A, #80h
                ret
; ---------------------------------------------------------------------------

code_6690:                              ; CODE XREF: code_6646+2A↑j
                                        ; code_6646+2F↑j ...
                mov     A, #7Fh
                ret
; End of function code_6646


; =============== S U B R O U T I N E =======================================


code_6693:                              ; CODE XREF: power_on__ignition_key_turned_+1F26↑p
                                        ; power_on__ignition_key_turned_:code_42E1↑p
                mov     DPTR, #0F6F9h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     R2, #0
                mov     R3, RAM_57
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_66C4
                mov     DPTR, #875Bh
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                mov     DPTR, #0F6F9h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                jc      code_66ED
                mov     R2, #0
                mov     R3, RAM_57
                lcall   code_5FD6
                sjmp    code_66E2
; ---------------------------------------------------------------------------

code_66C4:                              ; CODE XREF: code_6693+F↑j
                mov     DPTR, #875Dh
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                mov     DPTR, #0F6F9h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jc      code_66ED
                mov     R2, #0
                mov     R3, RAM_57
                lcall   code_5FCA

code_66E2:                              ; CODE XREF: code_6693+2F↑j
                mov     DPTR, #0F6F9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     RAM_57, R1
                ret
; ---------------------------------------------------------------------------

code_66ED:                              ; CODE XREF: code_6693+26↑j
                                        ; code_6693+46↑j
                mov     R0, #0
                mov     R1, RAM_57
                mov     DPTR, #0F6F9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_6693


; =============== S U B R O U T I N E =======================================


code_66FA:                              ; CODE XREF: power_on__ignition_key_turned_:code_430F↑p
                mov     R0, #0
                mov     R1, RAM_57
                mov     DPTR, #0F6FBh
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                lcall   code_5FD6
                mov     RAM_57, R1
                mov     DPTR, #8759h
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                mov     DPTR, #0F6FBh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   add_word        ; Add words
                                        ;
                                        ; INPUT:
                                        ;  - R1:R0 - first word, R1 - high, R0 - low
                                        ;  - R3:R2 - second word, R3 - high, R2 - low
                                        ;
                                        ; OUTPUT:
                                        ;  - R1:R0 = (R1:R0) + (R3:R2)
                                        ;    A = R1
                                        ;    R1 - high, R0 - low
                                        ;    CY - if overflowed
                                        ;
                jnc     code_6726
                mov     R0, #0FFh
                mov     R1, #0FFh

code_6726:                              ; CODE XREF: code_66FA+26↑j
                mov     DPTR, #0F6FBh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_66FA


; =============== S U B R O U T I N E =======================================


code_672F:                              ; CODE XREF: power_on__ignition_key_turned_+1CF2↑p
                mov     DPTR, #0F6F9h
                movx    A, @DPTR
                mov     R2, A
                inc     DPTR
                movx    A, @DPTR
                mov     R3, A
                mov     DPTR, #0F6FBh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   code_5FD6
                mov     DPTR, #0F6FBh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #8759h
                clr     A
                movc    A, @A+DPTR
                mov     R2, A
                inc     DPTR
                clr     A
                movc    A, @A+DPTR
                mov     R3, A
                mov     DPTR, #0F6FBh
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_6765
                mov     R0, #0
                mov     R1, #0

code_6765:                              ; CODE XREF: code_672F+30↑j
                mov     DPTR, #8758h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_57
                clr     C
                subb    A, B            ; B-Register
                jnc     code_6774
                clr     A

code_6774:                              ; CODE XREF: code_672F+42↑j
                mov     R2, #0
                mov     R3, A
                lcall   code_5FCA
                mov     DPTR, #0F6FBh
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_672F


; =============== S U B R O U T I N E =======================================


code_6783:                              ; CODE XREF: power_on__ignition_key_turned_+1F62↑p
                jb      RAM_2D.2, code_6792
                mov     B, #4           ; B-Register
                mov     DPTR, #0F7B8h
                clr     A

code_678D:                              ; CODE XREF: code_6783+C↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_678D    ; B-Register

code_6792:                              ; CODE XREF: code_6783↑j
                mov     DPTR, #0ADE1h
                mov     A, RAM_4C
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #8794h
                clr     A
                movc    A, @A+DPTR
                mov     R4, A
                mov     A, RAM_4C
                add     A, #0CDh
                mov     R2, A
                mov     A, #0
                addc    A, #0F8h
                mov     R3, A
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPL, R2         ; Data Pointer, Low Byte
                mov     DPH, R3         ; Data Pointer, High Byte
                mov     DPSEL, #0       ; Data Pointer Select Register
                clr     RAM_2B.6
                clr     A
                mov     DPTR, #0F7A7h
                movx    @DPTR, A
                clr     PSW.5           ; Program Status Word
                mov     R1, #0

code_67BE:                              ; CODE XREF: code_6783:code_6854↓j
                mov     DPTR, #6958h
                mov     A, R1
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                clr     IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F7A8h
                movx    A, @DPTR
                anl     B, A            ; B-Register
                xrl     A, B            ; B-Register
                mov     DPTR, #0F7A8h
                movx    @DPTR, A
                setb    IEN0.0          ; Interrupt Enable Register 0
                mov     DPTR, #0F7A7h
                movx    A, @DPTR
                orl     A, B            ; B-Register
                mov     DPTR, #0F7A7h
                movx    @DPTR, A
                mov     DPTR, #6958h
                mov     A, R1
                movc    A, @A+DPTR
                anl     A, RAM_76
                jz      code_67EB
                ljmp    code_683C
; ---------------------------------------------------------------------------

code_67EB:                              ; CODE XREF: code_6783+63↑j
                mov     DPTR, #0F7B8h
                mov     A, R1
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, B            ; B-Register
                jnz     code_6818
                jnb     RAM_28.1, code_683C
                movx    A, @DPTR
                cjne    A, RAM_4, code_6804

code_6804:                              ; CODE XREF: code_6783+7E↑j
                jnc     code_680A
                inc     A
                movx    @DPTR, A
                sjmp    code_683C
; ---------------------------------------------------------------------------

code_680A:                              ; CODE XREF: code_6783:code_6804↑j
                clr     A
                movx    @DPTR, A
                mov     DPSEL, #1       ; Data Pointer Select Register
                movx    A, @DPTR
                jz      code_683F
                setb    PSW.5           ; Program Status Word
                dec     A
                movx    @DPTR, A
                sjmp    code_683F
; ---------------------------------------------------------------------------

code_6818:                              ; CODE XREF: code_6783+78↑j
                setb    RAM_2B.6
                clr     A
                movx    @DPTR, A
                mov     DPTR, #8793h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     DPSEL, #1       ; Data Pointer Select Register
                movx    A, @DPTR
                cjne    A, RAM_0, code_682A

code_682A:                              ; CODE XREF: code_6783+A4↑j
                jnc     code_683A
                setb    PSW.5           ; Program Status Word
                add     A, B            ; B-Register
                cjne    A, RAM_0, code_6833

code_6833:                              ; CODE XREF: code_6783+AD↑j
                jnc     code_6838
                movx    @DPTR, A
                sjmp    code_683F
; ---------------------------------------------------------------------------

code_6838:                              ; CODE XREF: code_6783:code_6833↑j
                mov     A, R0
                movx    @DPTR, A

code_683A:                              ; CODE XREF: code_6783:code_682A↑j
                sjmp    code_683F
; ---------------------------------------------------------------------------

code_683C:                              ; CODE XREF: code_6783+65↑j
                                        ; code_6783+7A↑j ...
                mov     DPSEL, #1       ; Data Pointer Select Register

code_683F:                              ; CODE XREF: code_6783+8D↑j
                                        ; code_6783+93↑j ...
                mov     A, #10h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     DPSEL, #0       ; Data Pointer Select Register
                inc     R1
                cjne    R1, #4, code_6854
                sjmp    code_6857
; ---------------------------------------------------------------------------

code_6854:                              ; CODE XREF: code_6783+CC↑j
                ljmp    code_67BE
; ---------------------------------------------------------------------------

code_6857:                              ; CODE XREF: code_6783+CF↑j
                jnb     PSW.5, code_68A7 ; Program Status Word
                mov     B, #4           ; B-Register
                mov     DPL, R2         ; Data Pointer, Low Byte
                mov     DPH, R3         ; Data Pointer, High Byte
                mov     R1, #0

code_6863:                              ; CODE XREF: code_6783+F3↓j
                movx    A, @DPTR
                cjne    A, RAM_1, code_6867

code_6867:                              ; CODE XREF: code_6783+E1↑j
                jc      code_686A
                mov     R1, A

code_686A:                              ; CODE XREF: code_6783:code_6867↑j
                mov     A, #10h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                djnz    B, code_6863    ; B-Register
                mov     DPTR, #8795h
                clr     A
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, R1
                clr     C
                subb    A, B            ; B-Register
                jc      code_68A7
                jz      code_68A7
                mov     R1, A
                mov     B, #4           ; B-Register
                mov     DPL, R2         ; Data Pointer, Low Byte
                mov     DPH, R3         ; Data Pointer, High Byte

code_6890:                              ; CODE XREF: code_6783+121↓j
                movx    A, @DPTR
                cjne    A, RAM_1, code_6894

code_6894:                              ; CODE XREF: code_6783+10E↑j
                jnc     code_6898
                mov     A, R1
                movx    @DPTR, A

code_6898:                              ; CODE XREF: code_6783:code_6894↑j
                mov     A, #10h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                djnz    B, code_6890    ; B-Register

code_68A7:                              ; CODE XREF: code_6783:code_6857↑j
                                        ; code_6783+101↑j ...
                mov     R1, #1
                mov     B, #4           ; B-Register
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPTR, #0F7A9h
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPL, R2         ; Data Pointer, Low Byte
                mov     DPH, R3         ; Data Pointer, High Byte

code_68B9:                              ; CODE XREF: code_6783+155↓j
                movx    A, @DPTR
                mov     R0, A
                mov     A, #10h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     A, RAM_76
                anl     A, R1
                jnz     code_68D1
                mov     A, R0
                movx    @DPTR, A

code_68D1:                              ; CODE XREF: code_6783+14A↑j
                mov     A, R1
                rl      A
                mov     R1, A
                inc     DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                djnz    B, code_68B9    ; B-Register
                mov     DPTR, #0F675h
                movx    A, @DPTR
                mov     B, #4           ; B-Register
                div     AB
                anl     A, #0Fh
                mov     R4, A
                mov     R2, B           ; B-Register
                mov     DPTR, #6958h
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                mov     B, A            ; B-Register
                mov     A, RAM_76
                anl     A, B            ; B-Register
                jnz     code_6957
                mov     DPTR, #0ADE1h
                mov     A, R4
                movc    A, @A+DPTR
                mov     R0, A
                mov     DPTR, #0F7A9h
                mov     A, R2
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R3, A
                mov     A, R4
                clr     C
                subb    A, RAM_4C
                lcall   code_61B1
                mov     B, A            ; B-Register
                mov     DPTR, #8796h
                clr     A
                movc    A, @A+DPTR
                mul     AB
                xch     A, B            ; B-Register
                jnz     code_6957
                mov     A, B            ; B-Register
                add     A, R3
                jnc     code_6926
                mov     A, #0FFh

code_6926:                              ; CODE XREF: code_6783+19F↑j
                mov     R1, A
                mov     A, R3
                clr     C
                subb    A, B            ; B-Register
                jnc     code_692F
                mov     A, #0

code_692F:                              ; CODE XREF: code_6783+1A8↑j
                cjne    A, RAM_0, code_6932

code_6932:                              ; CODE XREF: code_6783:code_692F↑j
                jnc     code_6935
                mov     R0, A

code_6935:                              ; CODE XREF: code_6783:code_6932↑j
                mov     DPTR, #0F8CDh
                mov     A, R2
                mov     B, #10h         ; B-Register
                mul     AB
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                lcall   code_5F97
                movx    @DPTR, A

code_6957:                              ; CODE XREF: code_6783+171↑j
                                        ; code_6783+19A↑j
                ret
; End of function code_6783

; ---------------------------------------------------------------------------
                db    1
                db    2
                db    4
                db    8

; =============== S U B R O U T I N E =======================================


clear_xram_f69e_0c_bytes:               ; CODE XREF: power_on__ignition_key_turned_+B3C↑p
                                        ; power_on__ignition_key_turned_+135D↑p
                clr     A
                mov     DPTR, #0F69Eh
                mov     R1, #0Ch

code_6962:                              ; CODE XREF: clear_xram_f69e_0c_bytes+8↓j
                movx    @DPTR, A        ; for (XramPtr = 0xF69E; XramPtr < 0xF69E + 0x0C; ++XramPtr)
                                        ;   XRAM[XramPtr] = 0x00;
                inc     DPTR
                djnz    R1, code_6962
                mov     DPTR, #0F69Dh   ; XRAM[0xF69D] = 0
                movx    @DPTR, A
                ret
; End of function clear_xram_f69e_0c_bytes


; =============== S U B R O U T I N E =======================================


clear_xram_f69a_f69b:                   ; CODE XREF: power_on__ignition_key_turned_+B9C↑p
                                        ; power_on__ignition_key_turned_+1360↑p
                clr     A
                mov     DPTR, #0F69Bh
                movx    @DPTR, A
                inc     DPTR
                movx    @DPTR, A
                mov     DPTR, #0F69Ah
                movx    @DPTR, A
                ret
; End of function clear_xram_f69a_f69b


; =============== S U B R O U T I N E =======================================


code_6977:                              ; CODE XREF: power_on__ignition_key_turned_:code_518F↑p
                mov     DPTR, #0F7C8h
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A
                mov     DPTR, #0F7C9h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     B, #8           ; B-Register
                mov     DPTR, #0F7CBh
                movx    A, @DPTR
                mov     DPL, R0         ; Data Pointer, Low Byte
                mov     DPH, R1         ; Data Pointer, High Byte

code_6990:                              ; CODE XREF: code_6977+1B↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_6990    ; B-Register
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     R1, DPH         ; Data Pointer, High Byte
                mov     DPTR, #0F7C9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_6977


; =============== S U B R O U T I N E =======================================


code_69A2:                              ; CODE XREF: power_on__ignition_key_turned_:code_518A↑p
                mov     DPTR, #0F7C9h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F7CBh
                movx    A, @DPTR
                mov     DPL, R0         ; Data Pointer, Low Byte
                mov     DPH, R1         ; Data Pointer, High Byte

code_69B2:                              ; CODE XREF: code_69A2+12↓j
                movx    @DPTR, A
                inc     DPTR
                djnz    B, code_69B2    ; B-Register
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     R1, DPH         ; Data Pointer, High Byte
                mov     DPTR, #0F7C9h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_69A2


; =============== S U B R O U T I N E =======================================

; INPUT: ACC - byte to send, CY = 0
; OUTPUT: CY = 1 - sent byte not ack'ed, 0 - ack'ed

send_byte_over_i2c:                     ; CODE XREF: code_6A94+24↓p
                                        ; code_6A94+2A↓p ...
                orl     IP1, #80h       ; PDIR=1
                clr     P3.3            ; DIR3.3 = 0, P3.3 for output (SDA @ NM24C04 / AT24C04 (EEPROM, I2C))
                nop                     ; wait 1 cycle
                mov     B, #8           ; B-Register

send_acc_via_i2c:                       ; CODE XREF: send_byte_over_i2c+24↓j
                rlc     A               ; A.n+1 = A.n
                                        ; A.0 = CY
                                        ; CY = A.7
                mov     P3.3, C         ; SDA = C
                nop                     ; wait 1 cycle
                push    ACC             ; wait 2 cycles
                mov     A, #4           ; wait 1 cycle

wait_8_cycles_3:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_3↓j
                djnz    ACC, wait_8_cycles_3 ; Accumulator
                pop     ACC             ; wait 2 cycles
                                        ;
                                        ; TOTAL: 1 + 2 + 1 + 8 + 2 = 14 cycles
                setb    P1.7            ; SCL = 1
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_4:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_4↓j
                djnz    ACC, wait_8_cycles_4 ; Accumulator
                pop     ACC             ; TOTAL waited 14 cycles
                clr     P1.7            ; SCL = 0
                djnz    B, send_acc_via_i2c ; B-Register
                setb    P3.3            ; release SDA
                orl     IP1, #80h       ; Interrupt Priority Register 1
                setb    P3.3            ; DIR3.3 = 1, SDA for input, going to wait for ACK
                nop
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_5:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_5↓j
                djnz    ACC, wait_8_cycles_5 ; Accumulator
                pop     ACC             ; TOTAL waited 15 cycles
                setb    P1.7            ; SCL = 1
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_6:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_6↓j
                djnz    ACC, wait_8_cycles_6 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                mov     C, P3.3         ; read ACK/NACK on SDA
                                        ; 0 = ACK
                                        ; 1 = NACK
                clr     P1.7            ; SCL = 0
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_7:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_7↓j
                djnz    ACC, wait_8_cycles_7 ; Accumulator
                pop     ACC             ; TOTAL waited 14 cycles
                jnc     got_ack_on_i2c
                orl     IP1, #80h       ; Interrupt Priority Register 1
                clr     P3.3            ; DIR3.3 = 0, P3.3 for output (SDA @ NM24C04 / AT24C04 (EEPROM, I2C))
                nop
                clr     P3.3            ; SDA = 0, overtake
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_8:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_8↓j
                djnz    ACC, wait_8_cycles_8 ; Accumulator
                pop     ACC             ; TOTAL waited 14 cycles
                setb    P1.7            ; SCL = 1, repeated START condition?
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_9:                        ; CODE XREF: send_byte_over_i2c:wait_8_cycles_9↓j
                djnz    ACC, wait_8_cycles_9 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                setb    P3.3            ; SDA = 1
                orl     IP1, #80h       ; Interrupt Priority Register 1
                setb    P3.3            ; P3.3 for input now
                nop
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_10:                       ; CODE XREF: send_byte_over_i2c:wait_8_cycles_10↓j
                djnz    ACC, wait_8_cycles_10 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles

got_ack_on_i2c:                         ; CODE XREF: send_byte_over_i2c+53↑j
                ret
; End of function send_byte_over_i2c


; =============== S U B R O U T I N E =======================================

; OUTPUT: ACC - data read from IIC/I2C bus

read_from_i2c:                          ; CODE XREF: read_bytes_from_eeprom:call_read_from_i2c↓p
                mov     B, #8           ; B-Register
                clr     P1.7            ; SCL = 0
                setb    P3.3            ; SDA = 1, release, STOP condition
                orl     IP1, #80h       ; Interrupt Priority Register 1
                setb    P3.3            ; DIR3.3 = 1, input, going to receive smth on IIC/I2C bus
                nop                     ; wait for pin direction change to effect

read_8bits_from_i2c:                    ; CODE XREF: read_from_i2c+28↓j
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_14:                       ; CODE XREF: read_from_i2c:wait_8_cycles_14↓j
                djnz    ACC, wait_8_cycles_14 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                setb    P1.7            ; SCL = 1
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_15:                       ; CODE XREF: read_from_i2c:wait_8_cycles_15↓j
                djnz    ACC, wait_8_cycles_15 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                mov     C, P3.3         ; Port 3 (PDIR=0)
                rlc     A
                clr     P1.7            ; SCL = 0
                djnz    B, read_8bits_from_i2c ; B-Register
Now, ACC contains 8 bits read from IIC/I2C bus
                orl     IP1, #80h       ; PDIR = 1
                clr     P3.3            ; DIR3.3 = 0, output on SDA
                nop
                clr     P3.3            ; SDA = 0, ACK
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_16:                       ; CODE XREF: read_from_i2c:wait_8_cycles_16↓j
                djnz    ACC, wait_8_cycles_16 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                setb    P1.7            ; SCL = 1
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_17:                       ; CODE XREF: read_from_i2c:wait_8_cycles_17↓j
                djnz    ACC, wait_8_cycles_17 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                ret
; End of function read_from_i2c


; =============== S U B R O U T I N E =======================================


code_6A94:                              ; CODE XREF: code_6B91+31↓p
                                        ; code_C69B+15A↓p ...
                orl     IP1, #80h       ; Interrupt Priority Register 1
                clr     P3.3            ; Port 3 (PDIR=0)
                nop
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6A9F:                              ; CODE XREF: code_6A94:code_6A9F↓j
                djnz    ACC, code_6A9F  ; Accumulator
                pop     ACC             ; Accumulator
                clr     P3.3            ; Port 3 (PDIR=0)
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6AAB:                              ; CODE XREF: code_6A94:code_6AAB↓j
                djnz    ACC, code_6AAB  ; Accumulator
                pop     ACC             ; Accumulator
                clr     P1.7            ; Port 1 (PDIR=0)
                mov     A, R1
                anl     A, #6Fh
                rl      A
                orl     A, #0A0h
                lcall   send_byte_over_i2c ; INPUT: ACC - byte to send, CY = 0
                                        ; OUTPUT: CY = 1 - sent byte not ack'ed, 0 - ack'ed
                jc      return_1
                mov     A, R0
                lcall   send_byte_over_i2c ; INPUT: ACC - byte to send, CY = 0
                                        ; OUTPUT: CY = 1 - sent byte not ack'ed, 0 - ack'ed
                jc      return_1

code_6AC3:                              ; CODE XREF: code_6A94+36↓j
                movx    A, @DPTR
                inc     DPTR
                lcall   send_byte_over_i2c ; INPUT: ACC - byte to send, CY = 0
                                        ; OUTPUT: CY = 1 - sent byte not ack'ed, 0 - ack'ed
                jc      return_1
                djnz    R2, code_6AC3
                orl     IP1, #80h       ; Interrupt Priority Register 1
                clr     P3.3            ; Port 3 (PDIR=0)
                nop
                clr     P3.3            ; Port 3 (PDIR=0)
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6AD9:                              ; CODE XREF: code_6A94:code_6AD9↓j
                djnz    ACC, code_6AD9  ; Accumulator
                pop     ACC             ; Accumulator
                setb    P1.7            ; Port 1 (PDIR=0)
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6AE5:                              ; CODE XREF: code_6A94:code_6AE5↓j
                djnz    ACC, code_6AE5  ; Accumulator
                pop     ACC             ; Accumulator
                setb    P3.3            ; Port 3 (PDIR=0)
                orl     IP1, #80h       ; Interrupt Priority Register 1
                setb    P3.3            ; Port 3 (PDIR=0)
                nop
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6AF7:                              ; CODE XREF: code_6A94:code_6AF7↓j
                djnz    ACC, code_6AF7  ; Accumulator
                pop     ACC             ; Accumulator
                clr     C

return_1:                               ; CODE XREF: code_6A94+27↑j
                                        ; code_6A94+2D↑j ...
                ret
; End of function code_6A94


; =============== S U B R O U T I N E =======================================


compare_eeprom_and_xram:                ; CODE XREF: power_on__ignition_key_turned_+2F67↑p
                                        ; code_C69B+2DE↓p
                setb    PSW.5           ; Program Status Word
                sjmp    code_6B04
; End of function compare_eeprom_and_xram


; =============== S U B R O U T I N E =======================================

; INPUT: R0, R1, R2
;        R1 - slave address (contains page block), shifted right by one bit,
;        R0 - word address (byte offset in page block),
;        R2 - number of bytes to read
;        DPTR - XRAM address to store received data to
; OUTPUT: CY = 0 - success/all ok, 1 - any failure

read_bytes_from_eeprom:                 ; CODE XREF: power_on__ignition_key_turned_+2D1↑p
                                        ; power_on__ignition_key_turned_+2F7↑p ...
                clr     PSW.5           ; General purpose flag F0 = 0

code_6B04:                              ; CODE XREF: compare_eeprom_and_xram+2↑j
                orl     IP1, #80h       ; PDIR = 1
                clr     P3.3            ; DIR3.3 = 0, P3.3 for output (SDA @ NM24C04 / AT24C04 (EEPROM, I2C))
                nop
                nop                     ; wait for two machine cycles
                push    ACC             ; +2 cycles
                mov     A, #4           ; +1 cycle

wait_8_cycles_1:                        ; CODE XREF: read_bytes_from_eeprom:wait_8_cycles_1↓j
                djnz    ACC, wait_8_cycles_1 ; Accumulator
                pop     ACC             ; +2 cycles
                                        ;
                                        ; TOTAL 14 cycles
                clr     P3.3            ; P3.3 = 0, go low, SDA @ EEPROM,
                                        ;   SCL (P1.7) is high for the time being,
                                        ;   START condition on IIC/I2C bus
                nop                     ; wait 1 cycle
                push    ACC             ; +2 cycles
                mov     A, #4           ; +1 cycle

wait_8_cycles_2:                        ; CODE XREF: read_bytes_from_eeprom:wait_8_cycles_2↓j
                djnz    ACC, wait_8_cycles_2 ; Accumulator
                pop     ACC             ; +2 cycles
                                        ;
                                        ; TOTAL 1 + 2 + 1 + 8 + 2 = 14 cycles
                clr     P1.7            ; SCL go low, overtake
                mov     A, R1           ; A = R1
                anl     A, #6Fh
                rl      A
                orl     A, #0A0h        ; A = ((R1 & 0x6F) << 1) | 0xA0
                                        ;
                                        ; RL - rotate left: A.n+1 = A.n, A.0 = A.7
                                        ; A.7 = 0 => RL = SHL
                                        ; 6F = 0110 1111
                                        ; 6F << 1 = 1101 1110 ????
                                        ; A0 = 1010 0000
                lcall   send_byte_over_i2c ; send slave address
                jc      return_1        ; jump if no acknowledgement
                mov     A, R0
                lcall   send_byte_over_i2c ; send R0, data
                jc      return_failure_from_talk_via_i2c ; jump if not ack'ed
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_11:                       ; CODE XREF: read_bytes_from_eeprom:wait_8_cycles_11↓j
                djnz    ACC, wait_8_cycles_11 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                setb    P1.7            ; SCL = 1
                orl     IP1, #80h       ; Interrupt Priority Register 1
                clr     P3.3            ; DIR3.3 = 0, P3.3 for output (SDA @ NM24C04 / AT24C04 (EEPROM, I2C))
                nop                     ; wait for bit direction change to take effect
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_12:                       ; CODE XREF: read_bytes_from_eeprom:wait_8_cycles_12↓j
                djnz    ACC, wait_8_cycles_12 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                clr     P3.3            ; SDA = 0, repeated START condition ?
                nop
                push    ACC             ; Accumulator
                mov     A, #4

wait_8_cycles_13:                       ; CODE XREF: read_bytes_from_eeprom:wait_8_cycles_13↓j
                djnz    ACC, wait_8_cycles_13 ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                clr     P1.7            ; SCL = 0
                mov     A, R1
                anl     A, #6Fh
                rl      A
                orl     A, #0A1h        ; A = ((R1 & 0x6F) << 1) | 0xA0
                                        ;
                                        ; RL - rotate left: A.n+1 = A.n, A.0 = A.7
                                        ; A.7 = 0 => RL = SHL
                                        ; 6F = 0110 1111
                                        ; 6F << 1 = 1101 1110 ????
                                        ; A0 = 1010 0000
                lcall   send_byte_over_i2c ; send slave address
                jc      return_1        ; jump if not ack'ed

call_read_from_i2c:                     ; CODE XREF: read_bytes_from_eeprom:code_6B79↓j
                lcall   read_from_i2c   ; OUTPUT: ACC - data read from IIC/I2C bus
                jb      PSW.5, do_compare_eeprom_and_xram ; if (PSW.F0)
                                        ;   jmp ...
                movx    @DPTR, A        ; XRAM[DPTR] = A
                inc     DPTR            ; ++DPTR
                sjmp    code_6B79
; ---------------------------------------------------------------------------

do_compare_eeprom_and_xram:             ; CODE XREF: read_bytes_from_eeprom+69↑j
                mov     B, A            ; B = A
                movx    A, @DPTR        ; A = XRAM[DPTR]
                inc     DPTR            ; ++DPTR
                cjne    A, B, return_failure_from_talk_via_i2c ; if (A != B) {
                                        ;   CY = (A < B)
                                        ;   jmp ...
                                        ; }

code_6B79:                              ; CODE XREF: read_bytes_from_eeprom+6E↑j
                djnz    R2, call_read_from_i2c
                setb    P3.3            ; SDA = 1, STOP condition
                orl     IP1, #80h       ; Interrupt Priority Register 1
                setb    P3.3            ; DIR3.3 = 1, input
                nop
                nop
                push    ACC             ; Accumulator
                mov     A, #4

code_6B88:                              ; CODE XREF: read_bytes_from_eeprom:code_6B88↓j
                djnz    ACC, code_6B88  ; Accumulator
                pop     ACC             ; TOTAL waited = 14 cycles
                clr     C
                ret
; ---------------------------------------------------------------------------

return_failure_from_talk_via_i2c:       ; CODE XREF: read_bytes_from_eeprom+2F↑j
                                        ; read_bytes_from_eeprom+74↑j
                setb    C
                ret
; End of function read_bytes_from_eeprom


; =============== S U B R O U T I N E =======================================


code_6B91:                              ; CODE XREF: power_on__ignition_key_turned_:code_52D2↑p
                mov     DPTR, #0F97Ch
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     DPTR, #0F97Eh
                movx    A, @DPTR
                mov     R2, A
                mov     DPTR, #0F97Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Ah
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, B          ; Data Pointer, High Byte
                mov     A, R0
                anl     A, #0Fh
                cpl     A
                inc     A
                add     A, #10h
                mov     B, A            ; B-Register
                mov     A, R2
                jz      code_6BBE
                cjne    A, B, code_6BBC ; B-Register

code_6BBC:                              ; CODE XREF: code_6B91+28↑j
                jc      code_6BC0

code_6BBE:                              ; CODE XREF: code_6B91+26↑j
                mov     A, B            ; B-Register

code_6BC0:                              ; CODE XREF: code_6B91:code_6BBC↑j
                mov     R2, A
                mov     R3, A
                lcall   code_6A94
                jc      code_6BF0
                mov     A, DPL          ; Data Pointer, Low Byte
                mov     B, DPH          ; Data Pointer, High Byte
                mov     DPTR, #0F97Ah
                movx    @DPTR, A
                mov     A, B            ; B-Register
                mov     DPTR, #0F97Bh
                movx    @DPTR, A
                mov     A, R0
                add     A, R3
                mov     R0, A
                mov     A, R1
                addc    A, #0
                mov     R1, A
                mov     DPTR, #0F97Ch
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                mov     DPTR, #0F97Eh
                movx    A, @DPTR
                clr     C
                subb    A, R3
                mov     DPTR, #0F97Eh
                movx    @DPTR, A
                clr     C

code_6BF0:                              ; CODE XREF: code_6B91+34↑j
                ret
; End of function code_6B91


; =============== S U B R O U T I N E =======================================

; INPUT: DPTR, R2 - bytes count
; OUTPUT: R1:R0, R0 - low, R1 - high
;         R1:R0 = 1 + word-by-word sum(XRAM[DPTR..DPTR+R2])
;         CY = 0 if sum is nil, 1 otherwise

check_if_xram_sum_to_zero:              ; CODE XREF: power_on__ignition_key_turned_+2DB↑p
                                        ; power_on__ignition_key_turned_+301↑p ...
                mov     A, R2           ; A = R2
                clr     C               ; CY = 0
                rrc     A               ; A.n = A.n+1, A.7 = CY, CY = A.0
                                        ; CY = A & 0x01, A >>= 1
                mov     R2, A           ; R2 = A = R2 >> 0x01 = R2 / 2
                mov     R0, #1          ; R0 = 1
                mov     R1, #0          ; R1 = 0

code_6BF9:                              ; CODE XREF: check_if_xram_sum_to_zero+11↓j
                clr     C               ; CY = 0
                movx    A, @DPTR        ; A = XRAM[DPTR]
                inc     DPTR            ; ++DPTR
                add     A, R0           ; A += R0
                mov     R0, A           ; R0 = A
                movx    A, @DPTR        ; A = XRAM[DPTR]
                inc     DPTR            ; ++DPTR
                addc    A, R1           ; A += R1
                                        ; A += CY
                                        ; CY = CY // if carry out of bit 7 takes place
                mov     R1, A           ; R1 = A
                djnz    R2, code_6BF9
                orl     A, R0
                clr     C
                jz      code_6C09       ; if (!A)
                                        ;   jmp ...
                setb    C

code_6C09:                              ; CODE XREF: check_if_xram_sum_to_zero+15↑j
                ret
; End of function check_if_xram_sum_to_zero


; =============== S U B R O U T I N E =======================================


code_6C0A:                              ; CODE XREF: power_on__ignition_key_turned_+2E92↑p
                                        ; power_on__ignition_key_turned_+2EB4↑p ...
                mov     A, R2
                clr     C
                rrc     A
                dec     A
                mov     R2, A
                mov     R0, #1
                mov     R1, #0

code_6C13:                              ; CODE XREF: code_6C0A+12↓j
                clr     C
                movx    A, @DPTR
                inc     DPTR
                add     A, R0
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                addc    A, R1
                mov     R1, A
                djnz    R2, code_6C13
                clr     C
                clr     A
                subb    A, R0
                movx    @DPTR, A
                inc     DPTR
                clr     A
                subb    A, R1
                movx    @DPTR, A
                inc     DPTR
                ret
; End of function code_6C0A


; =============== S U B R O U T I N E =======================================

; 1 + sum(XRAM[0xFx00..0xF657]).
; x = 4, 5, 6 depending on data in FLASH[0x873F], FLASH[0x8743]
; x = 4 for current flash
;
; INPUT - none
; OUTPUT - R1:R0 = 1 + sum(XRAM[0xFx00..0xF657]), R0 - low, R1 - high

initial_sum_xram_fx00_to_f657:          ; CODE XREF: power_on__ignition_key_turned_+253↑p
                                        ; power_on__ignition_key_turned_+148D↑p
                mov     R0, #1          ; R0 = 1
                mov     R1, #0          ; R1 = 0
R0 - low byte
R1 - high byte
                mov     DPTR, #873Fh
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x873F] = 0x3F = 0011 1111
                jnb     ACC.1, FLASH_873F_bit1_not_set ; jump if (acc.1) is NOT set
                mov     DPTR, #8743h
                clr     A
                movc    A, @A+DPTR      ; A = FLASH[0x8743] = 0x13 = 0001 0011
                jnb     ACC.4, FLASH_8743_bit4_not_set ; Accumulator
                mov     DPTR, #0F400h   ; this is our case
                sjmp    code_6C49_main_loop
; ---------------------------------------------------------------------------

FLASH_8743_bit4_not_set:                ; CODE XREF: initial_sum_xram_fx00_to_f657+11↑j
                mov     DPTR, #0F500h
                sjmp    code_6C49_main_loop
; ---------------------------------------------------------------------------

FLASH_873F_bit1_not_set:                ; CODE XREF: initial_sum_xram_fx00_to_f657+9↑j
                mov     DPTR, #0F600h

code_6C49_main_loop:                    ; CODE XREF: initial_sum_xram_fx00_to_f657+17↑j
                                        ; initial_sum_xram_fx00_to_f657+1C↑j ...
                clr     C
                movx    A, @DPTR        ; A = XRAM[smth], smth = 0xF400, 0xF500, 0xF600
                add     A, R0
                mov     R0, A           ; R0 += XRAM[smth], smth = 0xF400, 0xF500, 0xF600
                                        ; CY = carry out of bit 7
                                        ; AC = carry out of bit 3 (auxiliary carry)
                mov     A, R1           ; A = R1
                addc    A, #0           ; A += 0 + CY
                                        ; CY = carry out of bit 7
                                        ; AC = carry out of bit 3 (auxiliary carry)
                mov     R1, A           ; R1 += CY
R1:R0 += XRAM[smth]
R0 - low, R1 = high
                inc     DPTR            ; ++DPTR
                mov     A, DPH          ; Data Pointer, High Byte
                cjne    A, #0F6h, code_6C49_main_loop ; if (DPH != 0xF6) jmp
                                        ;
                                        ; compare and jump if not equal
                mov     A, DPL          ; Data Pointer, Low Byte
                cjne    A, #58h, code_6C49_main_loop ; 'X' ; if (DPL != 0x58) jmp
OUTPUT: R1:R0 sum of XRAM
                ret
; End of function initial_sum_xram_fx00_to_f657

; ---------------------------------------------------------------------------
                db  90h
                db 0F7h
                db 0C1h
                db 0E0h
                db 0F9h
                db 0E8h
                db  75h ; u
                db 0F0h
                db    4
                db 0A4h
                db  90h
                db    6
                db  3Ch ; <
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  35h ; 5
                db 0F0h
                db 0F5h
                db  83h
                db 0E4h
                db  93h
                db 0F5h
                db 0F0h
                db  90h
                db 0F6h
                db    5
                db 0E8h
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  34h ; 4
                db    0
                db 0F5h
                db  83h
                db 0E0h
                db 0C5h
                db 0F0h
                db  30h ; 0
                db 0F7h
                db  0Bh
                db 0B9h
                db    0
                db    2
                db  80h
                db    5
                db 0C3h
                db  99h
                db  50h ; P
                db    2
                db  29h ; )
                db 0F9h
                db  20h
                db 0F6h
                db  22h ; "
                db 0E5h
                db 0F0h
                db  54h ; T
                db  1Fh
                db  70h ; p
                db    7
                db  30h ; 0
                db 0F7h
                db  3Ch ; <
                db    5
                db 0F0h
                db  80h
                db  38h ; 8
                db  90h
                db 0F6h
                db  7Ah ; z
                db 0E0h
                db  54h ; T
                db    3
                db  70h ; p
                db  30h ; 0
                db    5
                db 0F0h
                db 0E5h
                db 0F0h
                db  54h ; T
                db  1Fh
                db 0B4h
                db  1Eh
                db  27h ; '
                db 0D2h
                db 0F6h
                db  80h
                db  20h
                db  30h ; 0
                db 0F7h
                db    4
                db 0D2h
                db 0F5h
                db  80h
                db  19h
                db  90h
                db 0F6h
                db  78h ; x
                db 0E0h
                db  70h ; p
                db  16h
                db  90h
                db 0F6h
                db  7Bh ; {
                db 0E0h
                db  54h ; T
                db    3
                db  70h ; p
                db  0Eh
                db    5
                db 0F0h
                db 0E5h
                db 0F0h
                db  54h ; T
                db  1Fh
                db 0B4h
                db  1Eh
                db    5
                db 0C2h
                db 0F6h
                db  53h ; S
                db 0F0h
                db 0E0h
                db  90h
                db 0F6h
                db    5
                db 0E8h
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  34h ; 4
                db    0
                db 0F5h
                db  83h
                db 0E5h
                db 0F0h
                db 0F0h
                db    8
                db 0B8h
                db  53h ; S
                db  0Bh
                db 0E9h
                db  90h
                db 0F7h
                db 0C1h
                db 0F0h
                db  90h
                db 0F7h
                db 0C0h
                db 0F0h
                db  80h
                db    7
                db 0DAh
                db    6
                db 0E9h
                db  90h
                db 0F7h
                db 0C1h
                db 0F0h
                db  22h ; "
                db    2
                db  6Ch ; l
                db  62h ; b
                db  13h
                db 0F8h
                db 0E0h
                db  92h
                db 0E7h
                db 0F0h
                db 0E8h
                db 0A3h
                db 0D5h
                db 0F0h
                db 0F5h
                db  22h ; "
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  8Ch
                db  88h
                db  8Ah
                db  80h
                db  91h
                db  2Dh ; -
                db  37h ; 7
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  57h ; W
                db  4Dh ; M
                db  5Ah ; Z
                db  44h ; D
                db  41h ; A
                db  34h ; 4
                db  34h ; 4
                db  32h ; 2
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  38h ; 8
                db  32h ; 2
                db  34h ; 4
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  43h ; C
                db  6Fh ; o
                db  70h ; p
                db  79h ; y
                db  72h ; r
                db  69h ; i
                db  67h ; g
                db  68h ; h
                db  74h ; t
                db  28h ; (
                db  63h ; c
                db  29h ; )
                db  20h
                db  31h ; 1
                db  39h ; 9
                db  39h ; 9
                db  32h ; 2
                db  2Dh ; -
                db  39h ; 9
                db  37h ; 7
                db  20h
                db  80h
                db  8Eh
                db  20h
                db  9Dh
                db  8Bh
                db  8Ah
                db  80h
                db  90h
                db  20h
                db    0
                db 0B0h
                db  32h ; 2
                db  34h ; 4
                db  31h ; 1
                db  5Fh ; _
                db  33h ; 3
                db  34h ; 4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  38h ; 8
                db  32h ; 2
                db  34h ; 4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  5Ah ; Z
                db  34h ; 4
                db  53h ; S
                db  4Ch ; L
                db  54h ; T
                db  30h ; 0
                db  31h ; 1
                db  37h ; 7
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  31h ; 1
                db  32h ; 2
                db  2Fh ; /
                db  38h ; 8
                db  2Fh ; /
                db  30h ; 0
                db  34h ; 4
                db  20h
                db  31h ; 1
                db  32h ; 2
                db  3Ah ; :
                db  30h ; 0
                db  30h ; 0
                db    0
                db    0
                db    0
                db  34h ; 4
                db  30h ; 0
                db  36h ; 6
                db  32h ; 2
                db  5Fh ; _
                db  53h ; S
                db  5Fh ; _
                db  46h ; F
                db  5Fh ; _
                db  4Ch ; L
                db  41h ; A
                db  4Dh ; M
                db    0
                db    0
                db    0
                db    0
                db  1Eh
                db  1Eh
                db    5
                db 0FAh
                db 0E4h
                db    4
                db  0Ah
                db  64h ; d
                db 0F0h
                db  10h
                db 0F0h
                db  50h ; P
                db  5Ah ; Z
                db    0
                db  64h ; d
                db 0F0h
                db    5
                db  50h ; P
                db  3Ch ; <
                db 0A0h
                db  0Ah
                db 0E8h
                db 0E8h
                db    0
                db  64h ; d
                db    0
                db    0
                db  33h ; 3
                db  66h ; f
                db  99h
                db  46h ; F
                db    0
                db  75h ; u
                db  60h ; `
                db    1
                db  82h
                db 0D4h
                db  0Dh
                db  2Ch ; ,
                db  10h
                db 0C4h
                db  3Bh ; ;
                db    5
                db 0F6h
                db  24h ; $
                db  83h
                db  64h ; d
                db    0
                db    5
                db  50h ; P
                db    8
                db 0E8h
                db  78h ; x
                db    2
                db    4
                db    0
                db 0FFh
                db  80h
                db  47h ; G
                db  62h ; b
                db  80h
                db    6
                db    2
                db    6
                db    4
                db    2
                db  4Bh ; K
                db    0
                db  0Ah
                db 0FAh
                db  1Fh
                db  14h
                db  32h ; 2
                db  64h ; d
                db  42h ; B
                db  1Eh
                db  74h ; t
                db    0
                db    0
                db    2
                db    0
                db    4
                db    0
                db    7
                db    0
                db    9
                db    0
                db  0Bh
                db    0
                db  0Dh
                db    0
                db  0Fh
                db    0
                db  12h
                db    0
                db  16h
                db    0
                db  1Ah
                db    0
                db  1Dh
                db    0
                db  20h
                db    0
                db  23h ; #
                db    0
                db  26h ; &
                db    0
                db  29h ; )
                db    0
                db  2Dh ; -
                db    0
                db  30h ; 0
                db    0
                db  33h ; 3
                db    0
                db  36h ; 6
                db    0
                db  39h ; 9
                db    0
                db  3Ch ; <
                db    0
                db  3Fh ; ?
                db    0
                db  42h ; B
                db    0
                db  45h ; E
                db    0
                db  48h ; H
                db    0
                db  4Ch ; L
                db    0
                db  50h ; P
                db    0
                db  54h ; T
                db    0
                db  57h ; W
                db    0
                db  5Bh ; [
                db    0
                db  5Fh ; _
                db    0
                db  63h ; c
                db    0
                db  68h ; h
                db    0
                db  6Ch ; l
                db    0
                db  70h ; p
                db    0
                db  75h ; u
                db    0
                db  79h ; y
                db    0
                db  7Dh ; }
                db    0
                db  81h
                db    0
                db  85h
                db    0
                db  89h
                db    0
                db  8Dh
                db    0
                db  91h
                db    0
                db  96h
                db    0
                db  9Bh
                db    0
                db 0A0h
                db    0
                db 0A4h
                db    0
                db 0A9h
                db    0
                db 0ADh
                db    0
                db 0B2h
                db    0
                db 0B6h
                db    0
                db 0BBh
                db    0
                db 0BFh
                db    0
                db 0C4h
                db    0
                db 0C8h
                db    0
                db 0CCh
                db    0
                db 0D0h
                db    0
                db 0D4h
                db    0
                db 0D9h
                db    0
                db 0DEh
                db    0
                db 0E3h
                db    0
                db 0E8h
                db    0
                db 0EDh
                db    0
                db 0F2h
                db    0
                db 0F7h
                db    0
                db 0FCh
                db    0
                db    2
                db    1
                db    8
                db    1
                db  0Eh
                db    1
                db  14h
                db    1
                db  1Ch
                db    1
                db  22h ; "
                db    1
                db  28h ; (
                db    1
                db  2Eh ; .
                db    1
                db  34h ; 4
                db    1
                db  3Ah ; :
                db    1
                db  41h ; A
                db    1
                db  48h ; H
                db    1
                db  4Fh ; O
                db    1
                db  56h ; V
                db    1
                db  5Eh ; ^
                db    1
                db  66h ; f
                db    1
                db  6Eh ; n
                db    1
                db  76h ; v
                db    1
                db  7Ch ; |
                db    1
                db  85h
                db    1
                db  8Fh
                db    1
                db  98h
                db    1
                db 0A1h
                db    1
                db 0ABh
                db    1
                db 0B5h
                db    1
                db 0BFh
                db    1
                db 0C8h
                db    1
                db 0D3h
                db    1
                db 0DCh
                db    1
                db 0E6h
                db    1
                db 0F0h
                db    1
                db 0F9h
                db    1
                db 0FFh
                db    1
                db    8
                db    2
                db  12h
                db    2
                db  1Bh
                db    2
                db  25h ; %
                db    2
                db  30h ; 0
                db    2
                db  3Ah ; :
                db    2
                db  44h ; D
                db    2
                db  4Fh ; O
                db    2
                db  5Ah ; Z
                db    2
                db  64h ; d
                db    2
                db  70h ; p
                db    2
                db  7Bh ; {
                db    2
                db  86h
                db    2
                db  92h
                db    2
                db  9Eh
                db    2
                db 0AAh
                db    2
                db 0B6h
                db    2
                db 0C3h
                db    2
                db 0CFh
                db    2
                db 0DCh
                db    2
                db 0EAh
                db    2
                db 0F7h
                db    2
                db    4
                db    3
                db  12h
                db    3
                db  20h
                db    3
                db  2Fh ; /
                db    3
                db  3Dh ; =
                db    3
                db  4Ch ; L
                db    3
                db  5Bh ; [
                db    3
                db  6Ah ; j
                db    3
                db  7Ah ; z
                db    3
                db  8Ah
                db    3
                db  9Ah
                db    3
                db 0AAh
                db    3
                db 0BBh
                db    3
                db 0CCh
                db    3
                db 0DDh
                db    3
                db 0EFh
                db    3
                db    1
                db    4
                db  13h
                db    4
                db  25h ; %
                db    4
                db  38h ; 8
                db    4
                db  4Bh ; K
                db    4
                db  5Fh ; _
                db    4
                db  73h ; s
                db    4
                db  87h
                db    4
                db  9Ch
                db    4
                db 0B1h
                db    4
                db 0C6h
                db    4
                db 0DCh
                db    4
                db 0F2h
                db    4
                db    8
                db    5
                db  1Fh
                db    5
                db  36h ; 6
                db    5
                db  4Eh ; N
                db    5
                db  66h ; f
                db    5
                db  7Eh ; ~
                db    5
                db  97h
                db    5
                db 0B1h
                db    5
                db 0CAh
                db    5
                db 0E5h
                db    5
                db 0FFh
                db    5
                db  1Ah
                db    6
                db  36h ; 6
                db    6
                db  52h ; R
                db    6
                db  6Fh ; o
                db    6
                db  8Bh
                db    6
                db 0A9h
                db    6
                db 0C7h
                db    6
                db 0E5h
                db    6
                db    4
                db    7
                db  24h ; $
                db    7
                db  44h ; D
                db    7
                db  64h ; d
                db    7
                db  85h
                db    7
                db 0A7h
                db    7
                db 0C9h
                db    7
                db 0EBh
                db    7
                db  0Fh
                db    8
                db  32h ; 2
                db    8
                db  56h ; V
                db    8
                db  7Bh ; {
                db    8
                db 0A0h
                db    8
                db 0C6h
                db    8
                db 0EDh
                db    8
                db  14h
                db    9
                db  3Bh ; ;
                db    9
                db  63h ; c
                db    9
                db  8Ch
                db    9
                db 0B5h
                db    9
                db 0DFh
                db    9
                db    9
                db  0Ah
                db  34h ; 4
                db  0Ah
                db  60h ; `
                db  0Ah
                db  8Ch
                db  0Ah
                db 0B8h
                db  0Ah
                db 0E6h
                db  0Ah
                db  13h
                db  0Bh
                db  42h ; B
                db  0Bh
                db  71h ; q
                db  0Bh
                db 0A0h
                db  0Bh
                db 0D0h
                db  0Bh
                db    1
                db  0Ch
                db  32h ; 2
                db  0Ch
                db  64h ; d
                db  0Ch
                db  97h
                db  0Ch
                db 0CAh
                db  0Ch
                db 0FDh
                db  0Ch
                db  32h ; 2
                db  0Dh
                db  66h ; f
                db  0Dh
                db  9Ch
                db  0Dh
                db 0D2h
                db  0Dh
                db    8
                db  0Eh
                db  3Fh ; ?
                db  0Eh
                db  77h ; w
                db  0Eh
                db 0AFh
                db  0Eh
                db 0E8h
                db  0Eh
                db  21h ; !
                db  0Fh
                db  5Bh ; [
                db  0Fh
                db  95h
                db  0Fh
                db 0D0h
                db  0Fh
                db  0Ch
                db  10h
                db  48h ; H
                db  10h
                db  85h
                db  10h
                db 0C2h
                db  10h
                db    0
                db  11h
                db  3Eh ; >
                db  11h
                db  7Dh ; }
                db  11h
                db 0BDh
                db  11h
                db 0FDh
                db  11h
                db  3Dh ; =
                db  12h
                db  7Fh ; 
                db  12h
                db 0C0h
                db  12h
                db    3
                db  13h
                db  45h ; E
                db  13h
                db  89h
                db  13h
                db 0CCh
                db  13h
                db  11h
                db  14h
                db  56h ; V
                db  14h
                db  9Bh
                db  14h
                db 0E1h
                db  14h
                db  28h ; (
                db  15h
                db  6Fh ; o
                db  15h
                db 0B6h
                db  15h
                db 0FFh
                db  15h
                db  47h ; G
                db  16h
                db  90h
                db  16h
                db 0DAh
                db  16h
                db  24h ; $
                db  17h
                db  6Fh ; o
                db  17h
                db 0BBh
                db  17h
                db    6
                db  18h
                db  53h ; S
                db  18h
                db 0A0h
                db  18h
                db 0EDh
                db  18h
                db  3Bh ; ;
                db  19h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db  25h ; %
                db  44h ; D
                db  63h ; c
                db  83h
                db 0A2h
                db 0C1h
                db 0E0h
                db 0E0h
                db 0E0h
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db  25h ; %
                db  44h ; D
                db  63h ; c
                db  83h
                db 0A2h
                db 0C1h
                db 0E0h
                db 0E0h
                db 0E0h
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db  25h ; %
                db  44h ; D
                db  63h ; c
                db  83h
                db 0A2h
                db 0C1h
                db 0E0h
                db 0E0h
                db 0E0h
                db  46h ; F
                db    0
                db  8Ch
                db    0
                db 0D2h
                db    0
                db  18h
                db    1
                db  5Eh ; ^
                db    1
                db 0A4h
                db    1
                db 0EAh
                db    1
                db  30h ; 0
                db    2
                db  76h ; v
                db    2
                db 0BCh
                db    2
                db    2
                db    3
                db  48h ; H
                db    3
                db  8Eh
                db    3
                db 0D4h
                db    3
                db  1Ah
                db    4
                db  60h ; `
                db    4
                db  46h ; F
                db    0
                db  69h ; i
                db    0
                db  8Ch
                db    0
                db 0AFh
                db    0
                db 0D2h
                db    0
                db 0F5h
                db    0
                db  18h
                db    1
                db  3Bh ; ;
                db    1
                db  5Eh ; ^
                db    1
                db  81h
                db    1
                db 0A4h
                db    1
                db 0C7h
                db    1
                db 0EAh
                db    1
                db  0Dh
                db    2
                db  30h ; 0
                db    2
                db  53h ; S
                db    2
                db  76h ; v
                db    2
                db  99h
                db    2
                db 0BCh
                db    2
                db 0DFh
                db    2
                db    2
                db    3
                db  25h ; %
                db    3
                db  48h ; H
                db    3
                db  6Bh ; k
                db    3
                db  8Eh
                db    3
                db 0B1h
                db    3
                db 0D4h
                db    3
                db 0F7h
                db    3
                db  1Ah
                db    4
                db  3Dh ; =
                db    4
                db  60h ; `
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    8
                db  10h
                db  18h
                db  1Ch
                db  20h
                db  24h ; $
                db  28h ; (
                db  2Ch ; ,
                db  30h ; 0
                db  34h ; 4
                db  38h ; 8
                db  3Bh ; ;
                db  3Dh ; =
                db  40h ; @
                db  43h ; C
                db  45h ; E
                db  48h ; H
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  50h ; P
                db  52h ; R
                db  54h ; T
                db  56h ; V
                db  58h ; X
                db  5Ah ; Z
                db  5Ch ; \
                db  5Eh ; ^
                db  60h ; `
                db  62h ; b
                db  64h ; d
                db  66h ; f
                db  68h ; h
                db  6Ah ; j
                db  6Ch ; l
                db  6Eh ; n
                db  70h ; p
                db  72h ; r
                db  74h ; t
                db  76h ; v
                db  78h ; x
                db  7Ah ; z
                db  7Bh ; {
                db  7Dh ; }
                db  7Eh ; ~
                db  80h
                db  82h
                db  83h
                db  85h
                db  86h
                db  88h
                db  8Ah
                db  8Bh
                db  8Dh
                db  8Eh
                db  90h
                db  91h
                db  93h
                db  94h
                db  95h
                db  97h
                db  98h
                db  99h
                db  9Bh
                db  9Ch
                db  9Dh
                db  9Fh
                db 0A0h
                db 0A1h
                db 0A3h
                db 0A4h
                db 0A5h
                db 0A7h
                db 0A8h
                db 0A9h
                db 0ABh
                db 0ACh
                db 0ADh
                db 0AFh
                db 0B0h
                db 0B1h
                db 0B3h
                db 0B4h
                db 0B5h
                db 0B7h
                db 0B8h
                db 0B9h
                db 0BAh
                db 0BBh
                db 0BDh
                db 0BEh
                db 0BFh
                db 0C0h
                db 0C1h
                db 0C2h
                db 0C3h
                db 0C5h
                db 0C6h
                db 0C7h
                db 0C8h
                db 0C9h
                db 0CAh
                db 0CBh
                db 0CDh
                db 0CEh
                db 0CFh
                db 0D0h
                db 0D1h
                db 0D2h
                db 0D3h
                db 0D4h
                db 0D5h
                db 0D6h
                db 0D7h
                db 0D8h
                db 0D9h
                db 0DAh
                db 0DBh
                db 0DCh
                db 0DDh
                db 0DEh
                db 0DFh
                db 0E0h
                db 0E1h
                db 0E2h
                db 0E3h
                db 0E4h
                db 0E5h
                db 0E6h
                db 0E7h
                db 0E8h
                db 0E9h
                db 0EAh
                db 0EBh
                db 0ECh
                db 0EDh
                db 0EEh
                db 0EFh
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0B8h
                db    1
                db    8
                db    2
                db  80h
                db    2
                db  20h
                db    3
                db 0E8h
                db    3
                db    0
                db    5
                db  40h ; @
                db    6
                db  80h
                db    7
                db 0E8h
                db    8
                db  78h ; x
                db  0Ah
                db  58h ; X
                db  0Ch
                db  38h ; 8
                db  0Eh
                db  40h ; @
                db  10h
                db  70h ; p
                db  12h
                db 0F0h
                db  14h
                db  70h ; p
                db  17h
                db 0B8h
                db    1
                db 0E0h
                db    1
                db    8
                db    2
                db  30h ; 0
                db    2
                db  80h
                db    2
                db 0D0h
                db    2
                db  20h
                db    3
                db  70h ; p
                db    3
                db 0E8h
                db    3
                db  60h ; `
                db    4
                db    0
                db    5
                db 0A0h
                db    5
                db  40h ; @
                db    6
                db 0E0h
                db    6
                db  80h
                db    7
                db  20h
                db    8
                db 0E8h
                db    8
                db 0B0h
                db    9
                db  78h ; x
                db  0Ah
                db  68h ; h
                db  0Bh
                db  58h ; X
                db  0Ch
                db  48h ; H
                db  0Dh
                db  38h ; 8
                db  0Eh
                db  28h ; (
                db  0Fh
                db  40h ; @
                db  10h
                db  58h ; X
                db  11h
                db  70h ; p
                db  12h
                db 0B0h
                db  13h
                db 0F0h
                db  14h
                db  30h ; 0
                db  16h
                db  70h ; p
                db  17h
                db  3Ch ; <
                db    0
                db  66h ; f
                db    0
                db  90h
                db    0
                db 0BAh
                db    0
                db 0E4h
                db    0
                db  0Eh
                db    1
                db  38h ; 8
                db    1
                db  62h ; b
                db    1
                db  8Ch
                db    1
                db 0B6h
                db    1
                db 0E0h
                db    1
                db  0Ah
                db    2
                db  34h ; 4
                db    2
                db  5Eh ; ^
                db    2
                db  88h
                db    2
                db 0B2h
                db    2
                db  3Ch ; <
                db    0
                db  51h ; Q
                db    0
                db  66h ; f
                db    0
                db  7Bh ; {
                db    0
                db  90h
                db    0
                db 0A5h
                db    0
                db 0BAh
                db    0
                db 0CFh
                db    0
                db 0E4h
                db    0
                db 0F9h
                db    0
                db  0Eh
                db    1
                db  23h ; #
                db    1
                db  38h ; 8
                db    1
                db  4Dh ; M
                db    1
                db  62h ; b
                db    1
                db  77h ; w
                db    1
                db  8Ch
                db    1
                db 0A1h
                db    1
                db 0B6h
                db    1
                db 0CBh
                db    1
                db 0E0h
                db    1
                db 0F5h
                db    1
                db  0Ah
                db    2
                db  1Fh
                db    2
                db  34h ; 4
                db    2
                db  49h ; I
                db    2
                db  5Eh ; ^
                db    2
                db  73h ; s
                db    2
                db  88h
                db    2
                db  9Dh
                db    2
                db 0B2h
                db    2
                db    0
                db    8
                db  10h
                db  18h
                db  20h
                db  28h ; (
                db  30h ; 0
                db  38h ; 8
                db  40h ; @
                db  48h ; H
                db  50h ; P
                db  54h ; T
                db  58h ; X
                db  5Ch ; \
                db  60h ; `
                db  64h ; d
                db  68h ; h
                db  6Ch ; l
                db  70h ; p
                db  73h ; s
                db  76h ; v
                db  7Ah ; z
                db  7Dh ; }
                db  80h
                db  83h
                db  85h
                db  88h
                db  8Bh
                db  8Dh
                db  90h
                db  92h
                db  94h
                db  96h
                db  98h
                db  9Ah
                db  9Ch
                db  9Eh
                db 0A0h
                db 0A2h
                db 0A4h
                db 0A5h
                db 0A7h
                db 0A9h
                db 0ABh
                db 0ACh
                db 0ADh
                db 0B0h
                db 0B1h
                db 0B3h
                db 0B5h
                db 0B6h
                db 0B8h
                db 0BAh
                db 0BBh
                db 0BDh
                db 0BEh
                db 0C0h
                db 0C2h
                db 0C3h
                db 0C5h
                db 0C6h
                db 0C8h
                db 0CAh
                db 0CCh
                db 0CDh
                db 0CEh
                db 0D0h
                db 0D1h
                db 0D2h
                db 0D3h
                db 0D5h
                db 0D6h
                db 0D7h
                db 0D8h
                db 0D9h
                db 0DAh
                db 0DBh
                db 0DDh
                db 0DEh
                db 0DFh
                db 0E0h
                db 0E1h
                db 0E2h
                db 0E3h
                db 0E4h
                db 0E5h
                db 0E6h
                db 0E7h
                db 0E8h
                db 0E8h
                db 0E9h
                db 0EAh
                db 0EBh
                db 0ECh
                db 0EDh
                db 0EEh
                db 0EFh
                db 0EFh
                db 0F0h
                db 0F0h
                db 0F0h
                db    0
                db    2
                db    4
                db    6
                db    8
                db  0Ah
                db  0Eh
                db  12h
                db  17h
                db  1Dh
                db  25h ; %
                db  2Eh ; .
                db  38h ; 8
                db  42h ; B
                db  50h ; P
                db  64h ; d
                db    0
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    7
                db    8
                db    9
                db  0Ah
                db  0Ch
                db  0Eh
                db  10h
                db  12h
                db  15h
                db  17h
                db  1Ah
                db  1Dh
                db  21h ; !
                db  25h ; %
                db  2Ah ; *
                db  2Eh ; .
                db  33h ; 3
                db  38h ; 8
                db  3Dh ; =
                db  42h ; B
                db  49h ; I
                db  50h ; P
                db  59h ; Y
                db  64h ; d
                db  0Fh
                db  0Fh
                db  0Dh
                db  0Bh
                db    9
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    8
                db  10h
                db  18h
                db  20h
                db  28h ; (
                db  30h ; 0
                db  34h ; 4
                db  38h ; 8
                db  3Ch ; <
                db  40h ; @
                db  44h ; D
                db  48h ; H
                db  4Bh ; K
                db  4Dh ; M
                db  50h ; P
                db  54h ; T
                db  58h ; X
                db  5Bh ; [
                db  5Dh ; ]
                db  60h ; `
                db  64h ; d
                db  68h ; h
                db  6Bh ; k
                db  6Dh ; m
                db  70h ; p
                db  74h ; t
                db  78h ; x
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  84h
                db  88h
                db  8Bh
                db  8Dh
                db  90h
                db  91h
                db  93h
                db  95h
                db  97h
                db  98h
                db  99h
                db  9Bh
                db  9Dh
                db  9Fh
                db 0A0h
                db 0A2h
                db 0A3h
                db 0A5h
                db 0A6h
                db 0A8h
                db 0AAh
                db 0ABh
                db 0ADh
                db 0AEh
                db 0B0h
                db 0B1h
                db 0B2h
                db 0B3h
                db 0B5h
                db 0B6h
                db 0B7h
                db 0B8h
                db 0B9h
                db 0BAh
                db 0BBh
                db 0BCh
                db 0BDh
                db 0BEh
                db 0BFh
                db 0C0h
                db 0C1h
                db 0C2h
                db 0C3h
                db 0C5h
                db 0C6h
                db 0C7h
                db 0C8h
                db 0C9h
                db 0CAh
                db 0CBh
                db 0CCh
                db 0CDh
                db 0CEh
                db 0CFh
                db 0D0h
                db 0D1h
                db 0D2h
                db 0D2h
                db 0D3h
                db 0D4h
                db 0D5h
                db 0D6h
                db 0D6h
                db 0D7h
                db 0D8h
                db 0D9h
                db 0DAh
                db 0DAh
                db 0DBh
                db 0DCh
                db 0DDh
                db 0DEh
                db 0DEh
                db 0DFh
                db 0E0h
                db 0E1h
                db 0E2h
                db 0E2h
                db 0E3h
                db 0E4h
                db 0E5h
                db 0E6h
                db 0E6h
                db 0E7h
                db 0E8h
                db 0E9h
                db 0EAh
                db 0EAh
                db 0EBh
                db 0ECh
                db 0EDh
                db 0EEh
                db 0EEh
                db 0EFh
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db    1
                db    2
                db    4
                db    6
                db  0Ah
                db  0Fh
                db  14h
                db  19h
                db  1Eh
                db  23h ; #
                db  2Dh ; -
                db  37h ; 7
                db  46h ; F
                db  55h ; U
                db  69h ; i
                db  7Dh ; }
                db    1
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    8
                db  0Ah
                db  0Ch
                db  0Fh
                db  11h
                db  14h
                db  16h
                db  19h
                db  1Bh
                db  1Eh
                db  20h
                db  23h ; #
                db  28h ; (
                db  2Dh ; -
                db  32h ; 2
                db  37h ; 7
                db  3Eh ; >
                db  46h ; F
                db  4Dh ; M
                db  55h ; U
                db  5Fh ; _
                db  69h ; i
                db  73h ; s
                db  7Dh ; }
kitting_byte_0: db  3Fh ; ?
                db 0C0h
                db  23h ; #
                db 0C0h
                db  13h
                db    5
                db    0
                db  0Ah
                db    5
                db  28h ; (
                db  64h ; d
                db  50h ; P
                db  96h
                db    9
                db  20h
                db  84h
                db    2
                db    5
                db  20h
                db    2
                db  1Bh
                db    5
                db  5Ah ; Z
                db    0
                db  0Fh
                db    0
                db    0
                db    0
                db  82h
                db    0
                db    0
                db    2
                db  2Dh ; -
                db    0
                db    0
                db  0Ah
                db    1
                db    1
                db 0C0h
                db  5Ah ; Z
                db  1Eh
                db  4Dh ; M
                db  33h ; 3
                db    1
                db    1
                db  5Ah ; Z
                db    1
                db    2
                db  3Dh ; =
                db  33h ; 3
                db    2
                db  54h ; T
                db  14h
                db  20h
                db  20h
                db    5
                db 0ECh
                db  14h
                db 0F6h
                db  14h
                db  21h ; !
                db 0C6h
                db  10h
                db  73h ; s
                db  5Ah ; Z
                db 0F0h
                db  55h ; U
                db  4Bh ; K
                db  22h ; "
                db  3Fh ; ?
                db  66h ; f
                db  14h
                db  80h
                db  55h ; U
                db    8
                db    1
                db    1
                db  0Fh
                db  1Eh
                db  24h ; $
                db  14h
                db  10h
                db    2
                db  14h
                db    2
                db    1
                db    8
                db    4
                db    2
                db    3
                db    7
                db    7
                db  0Ah
                db  83h
                db  85h
                db  12h
                db  1Eh
                db  5Ah ; Z
                db  3Ch ; <
                db  8Dh
                db  91h
                db  52h ; R
                db  32h ; 2
                db  64h ; d
                db  2Ch ; ,
                db  2Ch ; ,
                db  30h ; 0
                db  19h
                db 0E1h
                db  23h ; #
                db  5Ah ; Z
                db  23h ; #
                db  5Ah ; Z
                db  3Ch ; <
                db  56h ; V
                db  15h
                db  17h
                db  1Ah
                db  27h ; '
                db  2Ah ; *
                db  69h ; i
                db 0D0h
                db    7
                db 0A0h
                db  1Eh
                db 0F1h
                db 0FFh
                db 0D2h
                db  91h
                db  4Eh ; N
                db  57h ; W
                db    6
                db  0Ch
                db  4Bh ; K
                db    2
                db  14h
                db  20h
                db  14h
                db  0Ah
                db  96h
                db  1Bh
                db  28h ; (
                db  51h ; Q
                db  51h ; Q
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  52h ; R
                db  55h ; U
                db  5Ah ; Z
                db  5Eh ; ^
                db  4Fh ; O
                db  41h ; A
                db  43h ; C
                db  50h ; P
                db  5Ah ; Z
                db  64h ; d
                db  5Ah ; Z
                db  50h ; P
                db  3Ch ; <
                db  28h ; (
                db  30h ; 0
                db  39h ; 9
                db  2Bh ; +
                db  1Fh
                db  19h
                db  16h
                db  13h
                db  11h
                db  11h
                db    4
                db  17h
                db    4
                db  1Dh
                db    4
                db  26h ; &
                db    4
                db  31h ; 1
                db    4
                db  3Ah ; :
                db    4
                db  49h ; I
                db    4
                db  4Dh ; M
                db    4
                db  57h ; W
                db    4
                db  65h ; e
                db    4
                db  71h ; q
                db    4
                db  7Eh ; ~
                db    4
                db  88h
                db    4
                db  8Fh
                db    4
                db  9Ch
                db    4
                db 0B1h
                db    4
                db 0CDh
                db    4
                db 0DBh
                db    4
                db 0DDh
                db    4
                db 0CBh
                db    4
                db 0BEh
                db    4
                db 0B0h
                db    4
                db 0A6h
                db    4
                db 0CDh
                db    4
                db 0DCh
                db    4
                db 0BAh
                db    4
                db  92h
                db    4
                db  93h
                db    4
                db  92h
                db    4
                db  93h
                db    4
                db  9Ah
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  90h
                db  8Fh
                db  8Eh
                db  8Dh
                db  8Ch
                db  8Bh
                db  8Ah
                db  89h
                db  88h
                db  87h
                db  86h
                db  85h
                db  84h
                db  83h
                db  82h
                db  81h
                db  80h
                db  7Fh ; 
                db  7Eh ; ~
                db  7Dh ; }
                db  7Ch ; |
                db  7Bh ; {
                db  7Ah ; z
                db  79h ; y
                db  78h ; x
                db  77h ; w
                db  76h ; v
                db  75h ; u
                db  74h ; t
                db  73h ; s
                db  72h ; r
                db  71h ; q
                db  70h ; p
                db  28h ; (
                db  30h ; 0
                db  37h ; 7
                db  3Eh ; >
                db  45h ; E
                db  4Ch ; L
                db  53h ; S
                db  59h ; Y
                db  5Fh ; _
                db  64h ; d
                db  68h ; h
                db  6Ch ; l
                db  70h ; p
                db  73h ; s
                db  76h ; v
                db  78h ; x
                db  9Ch
                db  8Fh
                db  82h
                db  79h ; y
                db  6Fh ; o
                db  65h ; e
                db  5Bh ; [
                db  51h ; Q
                db  4Ch ; L
                db  48h ; H
                db  44h ; D
                db  3Fh ; ?
                db  3Bh ; ;
                db  37h ; 7
                db  33h ; 3
                db  30h ; 0
                db  2Dh ; -
                db  2Ah ; *
                db  27h ; '
                db  25h ; %
                db  24h ; $
                db  24h ; $
                db  23h ; #
                db  23h ; #
                db  22h ; "
                db  21h ; !
                db  21h ; !
                db  20h
                db  1Dh
                db  17h
                db  16h
                db  15h
                db 0D8h
                db    1
                db 0D7h
                db    1
                db 0C0h
                db    1
                db  89h
                db    1
                db  4Dh ; M
                db    1
                db  24h ; $
                db    1
                db    4
                db    1
                db 0E8h
                db    0
                db 0CDh
                db    0
                db 0B5h
                db    0
                db 0A6h
                db    0
                db  96h
                db    0
                db  8Bh
                db    0
                db  81h
                db    0
                db  78h ; x
                db    0
                db  70h ; p
                db    0
                db  6Ah ; j
                db    0
                db  63h ; c
                db    0
                db  5Ch ; \
                db    0
                db  58h ; X
                db    0
                db  54h ; T
                db    0
                db  50h ; P
                db    0
                db  4Ch ; L
                db    0
                db  49h ; I
                db    0
                db  45h ; E
                db    0
                db  40h ; @
                db    0
                db  3Bh ; ;
                db    0
                db  36h ; 6
                db    0
                db  33h ; 3
                db    0
                db  2Eh ; .
                db    0
                db  2Bh ; +
                db    0
                db  27h ; '
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0F9h
                db 0ECh
                db 0E0h
                db 0D5h
                db 0CCh
                db 0C3h
                db 0BBh
                db 0B3h
                db 0ACh
                db 0A6h
                db 0A0h
                db  9Ah
                db  95h
                db  90h
                db  8Ch
                db  88h
                db  84h
                db  80h
                db  7Ch ; |
                db  79h ; y
                db  76h ; v
                db  73h ; s
                db  70h ; p
                db  6Dh ; m
                db  6Bh ; k
                db  68h ; h
                db  66h ; f
                db  66h ; f
                db  81h
                db  81h
                db  81h
                db  81h
                db  87h
                db  94h
                db 0A0h
                db 0ABh
                db 0B4h
                db 0BDh
                db 0C5h
                db 0CDh
                db 0D4h
                db 0DAh
                db 0E0h
                db 0E6h
                db 0EBh
                db 0F0h
                db 0F4h
                db 0F8h
                db 0FCh
                db    0
                db    4
                db    7
                db  0Ah
                db  0Dh
                db  10h
                db  13h
                db  15h
                db  18h
                db  1Ah
                db  1Ah
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BDh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BDh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BDh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Dh
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db    5
                db  17h
                db  26h ; &
                db  31h ; 1
                db  3Bh ; ;
                db  43h ; C
                db  4Ah ; J
                db  4Fh ; O
                db  54h ; T
                db  5Bh ; [
                db  64h ; d
                db  69h ; i
                db  72h ; r
                db  7Bh ; {
                db  8Ah
                db  9Ch
                db 0BBh
                db  28h ; (
                db  24h ; $
                db  22h ; "
                db  1Fh
                db  19h
                db  14h
                db  10h
                db  0Dh
                db  0Bh
                db  0Ah
                db    8
                db    7
                db    6
                db    5
                db    4
                db    3
                db  39h ; 9
                db  36h ; 6
                db  31h ; 1
                db  2Eh ; .
                db  26h ; &
                db  1Eh
                db  18h
                db  14h
                db  11h
                db  0Fh
                db  0Ch
                db  0Bh
                db  0Ah
                db    9
                db    8
                db    7
                db  46h ; F
                db  44h ; D
                db  3Fh ; ?
                db  3Ch ; <
                db  34h ; 4
                db  2Ah ; *
                db  25h ; %
                db  1Fh
                db  1Bh
                db  16h
                db  12h
                db  11h
                db  0Fh
                db  0Eh
                db  0Dh
                db  0Bh
                db  51h ; Q
                db  4Fh ; O
                db  4Ah ; J
                db  49h ; I
                db  43h ; C
                db  38h ; 8
                db  30h ; 0
                db  28h ; (
                db  22h ; "
                db  1Dh
                db  19h
                db  15h
                db  12h
                db  10h
                db  0Fh
                db  0Eh
                db  58h ; X
                db  56h ; V
                db  54h ; T
                db  52h ; R
                db  4Eh ; N
                db  45h ; E
                db  3Ch ; <
                db  33h ; 3
                db  2Ch ; ,
                db  26h ; &
                db  21h ; !
                db  1Dh
                db  18h
                db  14h
                db  12h
                db  10h
                db  5Eh ; ^
                db  5Dh ; ]
                db  5Ah ; Z
                db  58h ; X
                db  56h ; V
                db  4Fh ; O
                db  48h ; H
                db  3Dh ; =
                db  36h ; 6
                db  2Fh ; /
                db  29h ; )
                db  24h ; $
                db  1Fh
                db  1Ah
                db  18h
                db  16h
                db  5Eh ; ^
                db  60h ; `
                db  5Eh ; ^
                db  5Eh ; ^
                db  5Ch ; \
                db  59h ; Y
                db  54h ; T
                db  4Ch ; L
                db  46h ; F
                db  3Eh ; >
                db  37h ; 7
                db  31h ; 1
                db  2Ch ; ,
                db  24h ; $
                db  1Fh
                db  1Fh
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  61h ; a
                db  62h ; b
                db  5Fh ; _
                db  5Ch ; \
                db  58h ; X
                db  55h ; U
                db  4Eh ; N
                db  47h ; G
                db  43h ; C
                db  3Eh ; >
                db  35h ; 5
                db  2Fh ; /
                db  2Bh ; +
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  62h ; b
                db  67h ; g
                db  64h ; d
                db  63h ; c
                db  60h ; `
                db  61h ; a
                db  5Dh ; ]
                db  57h ; W
                db  56h ; V
                db  51h ; Q
                db  4Ah ; J
                db  42h ; B
                db  3Ah ; :
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  63h ; c
                db  69h ; i
                db  69h ; i
                db  65h ; e
                db  65h ; e
                db  67h ; g
                db  65h ; e
                db  63h ; c
                db  63h ; c
                db  62h ; b
                db  5Fh ; _
                db  56h ; V
                db  4Bh ; K
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  68h ; h
                db  69h ; i
                db  6Dh ; m
                db  6Dh ; m
                db  6Bh ; k
                db  6Dh ; m
                db  6Eh ; n
                db  6Dh ; m
                db  67h ; g
                db  5Eh ; ^
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  6Ah ; j
                db  6Bh ; k
                db  71h ; q
                db  71h ; q
                db  71h ; q
                db  73h ; s
                db  75h ; u
                db  75h ; u
                db  6Fh ; o
                db  68h ; h
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  6Bh ; k
                db  6Dh ; m
                db  74h ; t
                db  73h ; s
                db  72h ; r
                db  74h ; t
                db  77h ; w
                db  78h ; x
                db  74h ; t
                db  6Fh ; o
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  6Bh ; k
                db  6Dh ; m
                db  74h ; t
                db  74h ; t
                db  73h ; s
                db  75h ; u
                db  79h ; y
                db  79h ; y
                db  76h ; v
                db  72h ; r
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  6Bh ; k
                db  6Dh ; m
                db  74h ; t
                db  76h ; v
                db  73h ; s
                db  76h ; v
                db  7Bh ; {
                db  7Bh ; {
                db  78h ; x
                db  73h ; s
                db  5Eh ; ^
                db  60h ; `
                db  63h ; c
                db  67h ; g
                db  69h ; i
                db  6Bh ; k
                db  6Bh ; k
                db  6Dh ; m
                db  74h ; t
                db  76h ; v
                db  73h ; s
                db  76h ; v
                db  7Ch ; |
                db  7Ch ; |
                db  78h ; x
                db  74h ; t
                db  30h ; 0
                db  32h ; 2
                db  32h ; 2
                db  2Fh ; /
                db  30h ; 0
                db  2Eh ; .
                db  2Ch ; ,
                db  26h ; &
                db  22h ; "
                db  1Ch
                db  19h
                db  16h
                db  14h
                db  12h
                db  11h
                db  0Fh
                db  23h ; #
                db  23h ; #
                db  25h ; %
                db  25h ; %
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  24h ; $
                db  21h ; !
                db  1Ch
                db  19h
                db  16h
                db  14h
                db  12h
                db  11h
                db  0Fh
                db  18h
                db  17h
                db  19h
                db  1Ah
                db  20h
                db  24h ; $
                db  22h ; "
                db  20h
                db  1Eh
                db  1Ah
                db  19h
                db  16h
                db  14h
                db  12h
                db  11h
                db  0Fh
                db  0Dh
                db  0Fh
                db  12h
                db  10h
                db  13h
                db  1Ah
                db  1Dh
                db  1Ch
                db  1Ch
                db  19h
                db  18h
                db  16h
                db  14h
                db  12h
                db  11h
                db  0Fh
                db    6
                db    9
                db  0Ah
                db    9
                db  0Bh
                db  0Fh
                db  16h
                db  17h
                db  18h
                db  16h
                db  15h
                db  15h
                db  13h
                db  12h
                db  11h
                db  0Fh
                db    0
                db    3
                db    6
                db    6
                db    5
                db    9
                db  0Fh
                db  13h
                db  14h
                db  13h
                db  13h
                db  12h
                db  12h
                db  12h
                db  11h
                db  0Fh
                db    0
                db    0
                db    2
                db    3
                db    2
                db    4
                db    8
                db  0Ah
                db  0Dh
                db  0Eh
                db  0Fh
                db  0Fh
                db  10h
                db  11h
                db  11h
                db  0Fh
                db    0
                db    0
                db    0
                db    1
                db    1
                db    2
                db    3
                db    5
                db    7
                db    8
                db  0Bh
                db  0Dh
                db  0Eh
                db  10h
                db  0Fh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    3
                db    4
                db    4
                db    6
                db    7
                db    9
                db  0Bh
                db  0Ch
                db  0Dh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    2
                db    3
                db    5
                db    6
                db    8
                db    9
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    1
                db    2
                db    4
                db    5
                db    7
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    3
                db    4
                db    5
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    1
                db    2
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    2
                db    2
                db    4
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    2
                db    5
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    3
                db    6
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    7
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    8
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    9
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Bh
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Ch
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Dh
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Eh
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  24h ; $
                db  24h ; $
                db  24h ; $
                db  23h ; #
                db  22h ; "
                db  21h ; !
                db  20h
                db  20h
                db  1Fh
                db  1Eh
                db  1Dh
                db  1Ch
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  24h ; $
                db  24h ; $
                db  24h ; $
                db  23h ; #
                db  22h ; "
                db  21h ; !
                db  20h
                db  1Fh
                db  1Eh
                db  1Dh
                db  1Ch
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  24h ; $
                db  24h ; $
                db  23h ; #
                db  23h ; #
                db  22h ; "
                db  21h ; !
                db  20h
                db  1Eh
                db  1Dh
                db  1Ch
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  16h
                db  24h ; $
                db  24h ; $
                db  23h ; #
                db  23h ; #
                db  21h ; !
                db  20h
                db  1Fh
                db  1Dh
                db  1Ch
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  16h
                db  15h
                db  23h ; #
                db  23h ; #
                db  23h ; #
                db  22h ; "
                db  20h
                db  1Fh
                db  1Eh
                db  1Ch
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  16h
                db  15h
                db  14h
                db  22h ; "
                db  22h ; "
                db  22h ; "
                db  21h ; !
                db  1Fh
                db  1Eh
                db  1Dh
                db  1Bh
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  21h ; !
                db  21h ; !
                db  21h ; !
                db  20h
                db  1Eh
                db  1Dh
                db  1Ch
                db  1Ah
                db  19h
                db  18h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  20h
                db  20h
                db  20h
                db  1Fh
                db  1Dh
                db  1Ch
                db  1Bh
                db  19h
                db  18h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Eh
                db  1Ch
                db  1Bh
                db  1Ah
                db  18h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Dh
                db  1Bh
                db  1Ah
                db  19h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Dh
                db  1Dh
                db  1Dh
                db  1Ch
                db  1Ah
                db  19h
                db  18h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Bh
                db  19h
                db  18h
                db  17h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Ah
                db  18h
                db  17h
                db  16h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  1Ah
                db  1Ah
                db  1Ah
                db  19h
                db  17h
                db  16h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  19h
                db  19h
                db  19h
                db  18h
                db  16h
                db  15h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  18h
                db  18h
                db  18h
                db  16h
                db  15h
                db  15h
                db  15h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Eh
                db  0Eh
                db  10h
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Fh
                db  21h ; !
                db  23h ; #
                db  24h ; $
                db  26h ; &
                db  27h ; '
                db  28h ; (
                db  2Ah ; *
                db  2Bh ; +
                db  2Ch ; ,
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  30h ; 0
                db  2Fh ; /
                db  2Bh ; +
                db  25h ; %
                db  21h ; !
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Eh
                db  1Ch
                db  1Ah
                db  18h
                db  18h
                db  16h
                db  12h
                db  10h
                db  0Eh
                db  0Ch
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  40h ; @
                db  45h ; E
                db  4Ch ; L
                db  50h ; P
                db  52h ; R
                db  54h ; T
                db  55h ; U
                db  57h ; W
                db  55h ; U
                db  57h ; W
                db  57h ; W
                db  57h ; W
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Ah ; Z
                db  40h ; @
                db  45h ; E
                db  4Dh ; M
                db  51h ; Q
                db  53h ; S
                db  55h ; U
                db  57h ; W
                db  57h ; W
                db  57h ; W
                db  57h ; W
                db  57h ; W
                db  57h ; W
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Ah ; Z
                db  43h ; C
                db  48h ; H
                db  4Dh ; M
                db  52h ; R
                db  55h ; U
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  57h ; W
                db  57h ; W
                db  58h ; X
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Fh ; _
                db  5Ah ; Z
                db  42h ; B
                db  47h ; G
                db  4Dh ; M
                db  52h ; R
                db  54h ; T
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  58h ; X
                db  58h ; X
                db  58h ; X
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Fh ; _
                db  5Ah ; Z
                db  3Bh ; ;
                db  41h ; A
                db  47h ; G
                db  4Dh ; M
                db  52h ; R
                db  53h ; S
                db  55h ; U
                db  55h ; U
                db  58h ; X
                db  5Ah ; Z
                db  5Ah ; Z
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Fh ; _
                db  5Ah ; Z
                db  36h ; 6
                db  3Bh ; ;
                db  42h ; B
                db  46h ; F
                db  4Ch ; L
                db  4Eh ; N
                db  51h ; Q
                db  55h ; U
                db  58h ; X
                db  5Ah ; Z
                db  5Ah ; Z
                db  5Bh ; [
                db  5Ch ; \
                db  5Fh ; _
                db  5Fh ; _
                db  5Ah ; Z
                db  2Bh ; +
                db  34h ; 4
                db  3Bh ; ;
                db  40h ; @
                db  44h ; D
                db  45h ; E
                db  48h ; H
                db  4Dh ; M
                db  53h ; S
                db  58h ; X
                db  5Ah ; Z
                db  5Ch ; \
                db  5Ch ; \
                db  5Fh ; _
                db  5Fh ; _
                db  5Ah ; Z
                db  22h ; "
                db  2Ah ; *
                db  31h ; 1
                db  33h ; 3
                db  36h ; 6
                db  36h ; 6
                db  3Ah ; :
                db  43h ; C
                db  4Dh ; M
                db  55h ; U
                db  5Ah ; Z
                db  5Ch ; \
                db  5Dh ; ]
                db  5Fh ; _
                db  5Dh ; ]
                db  57h ; W
                db  1Ah
                db  20h
                db  24h ; $
                db  26h ; &
                db  26h ; &
                db  26h ; &
                db  2Ch ; ,
                db  38h ; 8
                db  43h ; C
                db  4Dh ; M
                db  57h ; W
                db  5Ah ; Z
                db  5Ch ; \
                db  5Fh ; _
                db  5Ch ; \
                db  57h ; W
                db  17h
                db  19h
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ch
                db  24h ; $
                db  30h ; 0
                db  3Ch ; <
                db  4Ah ; J
                db  51h ; Q
                db  54h ; T
                db  57h ; W
                db  5Ch ; \
                db  5Ch ; \
                db  54h ; T
                db  17h
                db  17h
                db  17h
                db  17h
                db  15h
                db  15h
                db  19h
                db  26h ; &
                db  36h ; 6
                db  45h ; E
                db  4Dh ; M
                db  51h ; Q
                db  54h ; T
                db  57h ; W
                db  5Ch ; \
                db  52h ; R
                db  14h
                db  14h
                db  14h
                db  14h
                db  12h
                db  12h
                db  14h
                db  1Fh
                db  2Fh ; /
                db  3Dh ; =
                db  4Ah ; J
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  5Ah ; Z
                db  4Fh ; O
                db  12h
                db  12h
                db  12h
                db  12h
                db  0Fh
                db  0Fh
                db  10h
                db  1Ah
                db  29h ; )
                db  36h ; 6
                db  46h ; F
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  57h ; W
                db  4Dh ; M
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Eh
                db  0Dh
                db  0Fh
                db  1Ah
                db  26h ; &
                db  33h ; 3
                db  44h ; D
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  4Ah ; J
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Fh
                db  1Ah
                db  26h ; &
                db  33h ; 3
                db  42h ; B
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  48h ; H
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  10h
                db  1Ah
                db  26h ; &
                db  35h ; 5
                db  43h ; C
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  47h ; G
                db  73h ; s
                db  78h ; x
                db  7Bh ; {
                db  7Eh ; ~
                db  82h
                db  87h
                db  89h
                db  89h
                db  88h
                db  85h
                db  80h
                db  7Dh ; }
                db  79h ; y
                db  73h ; s
                db  6Eh ; n
                db  66h ; f
                db  73h ; s
                db  7Ah ; z
                db  7Eh ; ~
                db  8Ah
                db  88h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  85h
                db  7Ch ; |
                db  74h ; t
                db  6Dh ; m
                db  74h ; t
                db  7Ah ; z
                db  83h
                db  8Ah
                db  8Ch
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  86h
                db  7Dh ; }
                db  76h ; v
                db  76h ; v
                db  7Ch ; |
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  88h
                db  7Bh ; {
                db  78h ; x
                db  7Ch ; |
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  86h
                db  79h ; y
                db  7Bh ; {
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  78h ; x
                db  7Bh ; {
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  76h ; v
                db  79h ; y
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  76h ; v
                db  79h ; y
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  74h ; t
                db  79h ; y
                db  83h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  76h ; v
                db  77h ; w
                db  7Ah ; z
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  73h ; s
                db  75h ; u
                db  76h ; v
                db  83h
                db  81h
                db  84h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  73h ; s
                db  78h ; x
                db  77h ; w
                db  7Eh ; ~
                db  89h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  73h ; s
                db  73h ; s
                db  73h ; s
                db  73h ; s
                db  77h ; w
                db  75h ; u
                db  78h ; x
                db  7Eh ; ~
                db  85h
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  8Ah
                db  89h
                db  85h
                db  73h ; s
                db  73h ; s
                db  73h ; s
                db  75h ; u
                db  77h ; w
                db  74h ; t
                db  74h ; t
                db  7Ah ; z
                db  82h
                db  85h
                db  8Ah
                db  8Ah
                db  8Ah
                db  86h
                db  84h
                db  81h
                db  73h ; s
                db  73h ; s
                db  73h ; s
                db  75h ; u
                db  77h ; w
                db  74h ; t
                db  71h ; q
                db  78h ; x
                db  80h
                db  83h
                db  86h
                db  85h
                db  84h
                db  82h
                db  7Fh ; 
                db  7Ch ; |
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  38h ; 8
                db  3Bh ; ;
                db  3Dh ; =
                db  3Dh ; =
                db  3Dh ; =
                db  3Fh ; ?
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  35h ; 5
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  38h ; 8
                db  3Bh ; ;
                db  3Dh ; =
                db  3Dh ; =
                db  3Fh ; ?
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  33h ; 3
                db  35h ; 5
                db  35h ; 5
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  38h ; 8
                db  3Bh ; ;
                db  3Dh ; =
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  33h ; 3
                db  33h ; 3
                db  34h ; 4
                db  34h ; 4
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  38h ; 8
                db  38h ; 8
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  35h ; 5
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  38h ; 8
                db  38h ; 8
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  33h ; 3
                db  34h ; 4
                db  36h ; 6
                db  38h ; 8
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  26h ; &
                db  26h ; &
                db  26h ; &
                db  26h ; &
                db  27h ; '
                db  29h ; )
                db  2Ch ; ,
                db  30h ; 0
                db  34h ; 4
                db  38h ; 8
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  17h
                db  1Ah
                db  1Ch
                db  1Fh
                db  21h ; !
                db  24h ; $
                db  26h ; &
                db  29h ; )
                db  2Eh ; .
                db  38h ; 8
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  12h
                db  14h
                db  16h
                db  19h
                db  1Ch
                db  1Fh
                db  21h ; !
                db  24h ; $
                db  29h ; )
                db  33h ; 3
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Eh
                db  10h
                db  12h
                db  15h
                db  17h
                db  1Ah
                db  1Ch
                db  1Fh
                db  24h ; $
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Fh
                db  12h
                db  13h
                db  17h
                db  1Ch
                db  22h ; "
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Fh
                db  12h
                db  14h
                db  18h
                db  21h ; !
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  12h
                db  14h
                db  17h
                db  21h ; !
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  12h
                db  14h
                db  16h
                db  21h ; !
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  12h
                db  14h
                db  17h
                db  21h ; !
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  12h
                db  14h
                db  17h
                db  21h ; !
                db  2Eh ; .
                db  3Bh ; ;
                db  3Eh ; >
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Fh ; 
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Bh ; {
                db  7Dh ; }
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  7Fh ; 
                db  7Fh ; 
                db  7Ch ; |
                db  7Dh ; }
                db  7Dh ; }
                db  7Dh ; }
                db  7Dh ; }
                db  7Dh ; }
                db  7Dh ; }
                db  7Bh ; {
                db  7Dh ; }
                db  7Fh ; 
                db  7Bh ; {
                db  7Bh ; {
                db  7Bh ; {
                db  7Bh ; {
                db  78h ; x
                db  7Ah ; z
                db  77h ; w
                db  77h ; w
                db  75h ; u
                db  76h ; v
                db  78h ; x
                db  78h ; x
                db  74h ; t
                db  7Bh ; {
                db  7Dh ; }
                db  77h ; w
                db  76h ; v
                db  76h ; v
                db  76h ; v
                db  76h ; v
                db  71h ; q
                db  76h ; v
                db  72h ; r
                db  70h ; p
                db  6Fh ; o
                db  6Fh ; o
                db  70h ; p
                db  6Eh ; n
                db  6Bh ; k
                db  7Bh ; {
                db  7Dh ; }
                db  77h ; w
                db  71h ; q
                db  71h ; q
                db  71h ; q
                db  70h ; p
                db  6Fh ; o
                db  70h ; p
                db  6Eh ; n
                db  6Ch ; l
                db  6Eh ; n
                db  6Ch ; l
                db  69h ; i
                db  67h ; g
                db  66h ; f
                db  7Bh ; {
                db  7Dh ; }
                db  77h ; w
                db  71h ; q
                db  71h ; q
                db  71h ; q
                db  70h ; p
                db  6Fh ; o
                db  6Eh ; n
                db  6Ch ; l
                db  6Bh ; k
                db  66h ; f
                db  69h ; i
                db  64h ; d
                db  61h ; a
                db  61h ; a
                db  7Bh ; {
                db  7Dh ; }
                db  77h ; w
                db  71h ; q
                db  71h ; q
                db  71h ; q
                db  70h ; p
                db  6Fh ; o
                db  6Eh ; n
                db  6Ch ; l
                db  6Ah ; j
                db  66h ; f
                db  62h ; b
                db  5Fh ; _
                db  5Ch ; \
                db  5Ch ; \
                db  7Bh ; {
                db  7Dh ; }
                db  77h ; w
                db  71h ; q
                db  71h ; q
                db  71h ; q
                db  70h ; p
                db  6Fh ; o
                db  6Eh ; n
                db  6Ch ; l
                db  69h ; i
                db  63h ; c
                db  61h ; a
                db  5Eh ; ^
                db  5Ch ; \
                db  5Ch ; \
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F1h
                db 0F3h
                db 0F8h
                db 0FEh
                db    6
                db  0Fh
                db  17h
                db  20h
                db  2Dh ; -
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F0h
                db 0F2h
                db 0F5h
                db 0F9h
                db 0FDh
                db    2
                db    8
                db  0Fh
                db  17h
                db  20h
                db  29h ; )
                db  30h ; 0
                db  36h ; 6
                db  3Ah ; :
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db  3Fh ; ?
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    6
                db  0Ch
                db  15h
                db  20h
                db  2Eh ; .
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  59h ; Y
                db  59h ; Y
                db  5Ah ; Z
                db  5Ah ; Z
                db  5Bh ; [
                db  5Ch ; \
                db  5Eh ; ^
                db  5Fh ; _
                db  60h ; `
                db  60h ; `
                db  5Fh ; _
                db  5Eh ; ^
                db  5Eh ; ^
                db  5Fh ; _
                db  60h ; `
                db  61h ; a
                db  5Bh ; [
                db  5Bh ; [
                db  5Bh ; [
                db  5Bh ; [
                db  5Ch ; \
                db  5Dh ; ]
                db  5Dh ; ]
                db  5Eh ; ^
                db  5Fh ; _
                db  5Eh ; ^
                db  5Fh ; _
                db  5Fh ; _
                db  5Fh ; _
                db  60h ; `
                db  61h ; a
                db  62h ; b
                db  5Ch ; \
                db  5Ch ; \
                db  5Ch ; \
                db  5Ch ; \
                db  5Dh ; ]
                db  5Eh ; ^
                db  61h ; a
                db  61h ; a
                db  60h ; `
                db  60h ; `
                db  61h ; a
                db  60h ; `
                db  60h ; `
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  65h ; e
                db  64h ; d
                db  63h ; c
                db  63h ; c
                db  65h ; e
                db  66h ; f
                db  66h ; f
                db  66h ; f
                db  66h ; f
                db  64h ; d
                db  65h ; e
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Ah ; j
                db  69h ; i
                db  69h ; i
                db  68h ; h
                db  67h ; g
                db  68h ; h
                db  67h ; g
                db  69h ; i
                db  69h ; i
                db  69h ; i
                db  68h ; h
                db  68h ; h
                db  69h ; i
                db  70h ; p
                db  6Eh ; n
                db  6Ch ; l
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  69h ; i
                db  6Ah ; j
                db  6Ah ; j
                db  6Bh ; k
                db  6Ah ; j
                db  69h ; i
                db  69h ; i
                db  69h ; i
                db  73h ; s
                db  72h ; r
                db  71h ; q
                db  6Fh ; o
                db  6Dh ; m
                db  6Ch ; l
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Ch ; l
                db  6Bh ; k
                db  6Ah ; j
                db  6Ah ; j
                db  6Ah ; j
                db  69h ; i
                db  78h ; x
                db  76h ; v
                db  74h ; t
                db  70h ; p
                db  6Eh ; n
                db  6Dh ; m
                db  6Ch ; l
                db  6Ch ; l
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Bh ; k
                db  6Ah ; j
                db  77h ; w
                db  77h ; w
                db  77h ; w
                db  75h ; u
                db  73h ; s
                db  6Fh ; o
                db  6Eh ; n
                db  6Eh ; n
                db  6Ch ; l
                db  6Ch ; l
                db  6Dh ; m
                db  6Ch ; l
                db  6Ch ; l
                db  6Ch ; l
                db  6Ch ; l
                db  6Bh ; k
                db  77h ; w
                db  76h ; v
                db  75h ; u
                db  74h ; t
                db  72h ; r
                db  70h ; p
                db  6Fh ; o
                db  6Eh ; n
                db  6Dh ; m
                db  6Dh ; m
                db  6Dh ; m
                db  6Dh ; m
                db  6Dh ; m
                db  6Ch ; l
                db  6Ch ; l
                db  6Bh ; k
                db  7Ah ; z
                db  79h ; y
                db  77h ; w
                db  76h ; v
                db  74h ; t
                db  72h ; r
                db  71h ; q
                db  6Fh ; o
                db  6Eh ; n
                db  6Eh ; n
                db  6Eh ; n
                db  6Eh ; n
                db  6Eh ; n
                db  6Eh ; n
                db  6Eh ; n
                db  6Dh ; m
                db  7Ch ; |
                db  7Bh ; {
                db  7Ah ; z
                db  78h ; x
                db  76h ; v
                db  74h ; t
                db  73h ; s
                db  72h ; r
                db  71h ; q
                db  70h ; p
                db  6Fh ; o
                db  6Fh ; o
                db  6Fh ; o
                db  6Eh ; n
                db  6Fh ; o
                db  6Eh ; n
                db  79h ; y
                db  78h ; x
                db  77h ; w
                db  76h ; v
                db  75h ; u
                db  73h ; s
                db  72h ; r
                db  70h ; p
                db  70h ; p
                db  70h ; p
                db  6Fh ; o
                db  70h ; p
                db  6Fh ; o
                db  6Eh ; n
                db  71h ; q
                db  70h ; p
                db  7Bh ; {
                db  7Ah ; z
                db  77h ; w
                db  74h ; t
                db  74h ; t
                db  74h ; t
                db  75h ; u
                db  72h ; r
                db  71h ; q
                db  73h ; s
                db  70h ; p
                db  71h ; q
                db  6Fh ; o
                db  71h ; q
                db  73h ; s
                db  72h ; r
                db  7Ch ; |
                db  7Bh ; {
                db  78h ; x
                db  76h ; v
                db  77h ; w
                db  75h ; u
                db  75h ; u
                db  71h ; q
                db  71h ; q
                db  73h ; s
                db  71h ; q
                db  73h ; s
                db  74h ; t
                db  76h ; v
                db  73h ; s
                db  72h ; r
                db  7Ah ; z
                db  79h ; y
                db  78h ; x
                db  77h ; w
                db  78h ; x
                db  75h ; u
                db  75h ; u
                db  72h ; r
                db  71h ; q
                db  72h ; r
                db  72h ; r
                db  74h ; t
                db  74h ; t
                db  74h ; t
                db  73h ; s
                db  72h ; r
_9a1c_start:    db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,3,4,4,3,2,2,0,0,0,0,0
                db 0,2,4,5,5,6,6,6,5,4,2,0,0,0,0,0,0,2,3,4,5,6,7,7,6,4,2,0,0,0,0,0,0,2
                db 2,3,4,5,5,5,5,4,2,0,0,0,0,0,0,1,1,2,2,2,3,3,4,3,1,0,0,0,0,0,0,1,1,2
                db 2,1,2,2,3,1,1,0,0,0,0,0,0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,0,0,1,2,0,0
                db 0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0F8h
                db 0E8h
                db 0D0h
                db 0B6h
                db 0A3h
                db  7Ch ; |
                db  6Ah ; j
                db  5Eh ; ^
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0BBh
                db 0B4h
                db 0B2h
                db 0ACh
                db  9Ah
                db  59h ; Y
                db  3Ah ; :
                db  34h ; 4
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0CCh
                db 0A0h
                db  9Ah
                db  97h
                db  9Ah
                db  80h
                db  3Bh ; ;
                db  26h ; &
                db  22h ; "
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0CCh
                db 0B4h
                db  87h
                db  80h
                db  7Dh ; }
                db  80h
                db  66h ; f
                db  22h ; "
                db  1Ch
                db  18h
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0CCh
                db 0B4h
                db  9Ah
                db  69h ; i
                db  58h ; X
                db  53h ; S
                db  4Dh ; M
                db  21h ; !
                db  18h
                db  14h
                db  12h
                db 0FFh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0CCh
                db 0B4h
                db  9Ah
                db  80h
                db  4Ch ; L
                db  32h ; 2
                db  20h
                db  1Dh
                db  15h
                db  12h
                db  10h
                db  0Eh
                db 0FFh
                db 0FFh
                db 0E6h
                db 0CCh
                db 0B4h
                db  9Ah
                db  80h
                db  66h ; f
                db  37h ; 7
                db  18h
                db  14h
                db  12h
                db  10h
                db  0Eh
                db  0Ch
                db  0Ch
                db 0FFh
                db 0FFh
                db 0CCh
                db 0B4h
                db  9Ah
                db  80h
                db  66h ; f
                db  4Dh ; M
                db  2Dh ; -
                db  12h
                db  10h
                db  0Eh
                db  0Ch
                db  0Ah
                db  0Ah
                db    8
                db 0FFh
                db 0FFh
                db 0B4h
                db  9Ah
                db  80h
                db  66h ; f
                db  4Dh ; M
                db  33h ; 3
                db  22h ; "
                db  0Eh
                db  0Ch
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db 0FFh
                db 0FFh
                db  9Ah
                db  80h
                db  66h ; f
                db  4Dh ; M
                db  33h ; 3
                db  21h ; !
                db  1Fh
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  81h
                db  66h ; f
                db  4Dh ; M
                db  33h ; 3
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  67h ; g
                db  4Dh ; M
                db  33h ; 3
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  4Eh ; N
                db  33h ; 3
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  34h ; 4
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db 0FFh
                db 0FFh
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Ch
                db  0Ah
                db    8
                db    8
                db    6
                db    6
                db    6
                db  1Fh
                db  1Eh
                db  21h ; !
                db  28h ; (
                db  2Fh ; /
                db  37h ; 7
                db  3Ch ; <
                db  40h ; @
                db  44h ; D
                db  46h ; F
                db  4Eh ; N
                db  55h ; U
                db  5Ch ; \
                db  61h ; a
                db  64h ; d
                db  64h ; d
                db  20h
                db  1Fh
                db  21h ; !
                db  28h ; (
                db  2Fh ; /
                db  36h ; 6
                db  3Ch ; <
                db  40h ; @
                db  44h ; D
                db  46h ; F
                db  4Eh ; N
                db  55h ; U
                db  5Ch ; \
                db  61h ; a
                db  64h ; d
                db  65h ; e
                db  21h ; !
                db  20h
                db  21h ; !
                db  26h ; &
                db  2Eh ; .
                db  35h ; 5
                db  3Ch ; <
                db  40h ; @
                db  44h ; D
                db  46h ; F
                db  4Dh ; M
                db  53h ; S
                db  5Bh ; [
                db  61h ; a
                db  64h ; d
                db  66h ; f
                db  21h ; !
                db  1Fh
                db  1Fh
                db  24h ; $
                db  2Ch ; ,
                db  33h ; 3
                db  3Ch ; <
                db  40h ; @
                db  44h ; D
                db  44h ; D
                db  4Bh ; K
                db  51h ; Q
                db  58h ; X
                db  60h ; `
                db  64h ; d
                db  66h ; f
                db  1Fh
                db  1Eh
                db  1Dh
                db  22h ; "
                db  2Ah ; *
                db  31h ; 1
                db  38h ; 8
                db  40h ; @
                db  42h ; B
                db  43h ; C
                db  49h ; I
                db  4Fh ; O
                db  55h ; U
                db  5Dh ; ]
                db  63h ; c
                db  66h ; f
                db  1Ch
                db  1Ch
                db  1Bh
                db  20h
                db  28h ; (
                db  2Dh ; -
                db  33h ; 3
                db  3Ah ; :
                db  3Eh ; >
                db  40h ; @
                db  45h ; E
                db  4Bh ; K
                db  51h ; Q
                db  5Ah ; Z
                db  60h ; `
                db  64h ; d
                db  18h
                db  18h
                db  19h
                db  1Ch
                db  24h ; $
                db  2Ah ; *
                db  30h ; 0
                db  36h ; 6
                db  38h ; 8
                db  3Ah ; :
                db  40h ; @
                db  45h ; E
                db  4Ch ; L
                db  55h ; U
                db  5Ah ; Z
                db  61h ; a
                db  12h
                db  14h
                db  17h
                db  18h
                db  20h
                db  28h ; (
                db  2Eh ; .
                db  32h ; 2
                db  36h ; 6
                db  38h ; 8
                db  3Ah ; :
                db  3Eh ; >
                db  46h ; F
                db  4Dh ; M
                db  54h ; T
                db  59h ; Y
                db  0Eh
                db  12h
                db  15h
                db  17h
                db  1Ch
                db  26h ; &
                db  2Bh ; +
                db  2Eh ; .
                db  34h ; 4
                db  36h ; 6
                db  38h ; 8
                db  39h ; 9
                db  3Fh ; ?
                db  45h ; E
                db  4Ah ; J
                db  4Fh ; O
                db  0Bh
                db  10h
                db  14h
                db  16h
                db  1Ah
                db  22h ; "
                db  28h ; (
                db  2Dh ; -
                db  30h ; 0
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  38h ; 8
                db  3Eh ; >
                db  43h ; C
                db  46h ; F
                db  0Ah
                db  0Fh
                db  14h
                db  16h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  2Dh ; -
                db  2Eh ; .
                db  2Fh ; /
                db  31h ; 1
                db  34h ; 4
                db  39h ; 9
                db  3Eh ; >
                db  41h ; A
                db    9
                db  0Eh
                db  14h
                db  16h
                db  18h
                db  1Ah
                db  20h
                db  26h ; &
                db  28h ; (
                db  2Ch ; ,
                db  2Eh ; .
                db  30h ; 0
                db  33h ; 3
                db  36h ; 6
                db  3Ch ; <
                db  40h ; @
                db    9
                db  0Eh
                db  13h
                db  16h
                db  18h
                db  1Ah
                db  1Dh
                db  23h ; #
                db  26h ; &
                db  2Ch ; ,
                db  2Eh ; .
                db  30h ; 0
                db  34h ; 4
                db  36h ; 6
                db  3Ch ; <
                db  40h ; @
                db    9
                db  0Eh
                db  13h
                db  16h
                db  18h
                db  1Ah
                db  1Dh
                db  23h ; #
                db  26h ; &
                db  2Ch ; ,
                db  2Eh ; .
                db  32h ; 2
                db  36h ; 6
                db  38h ; 8
                db  3Ch ; <
                db  40h ; @
                db    9
                db  0Eh
                db  13h
                db  16h
                db  18h
                db  1Ah
                db  1Eh
                db  23h ; #
                db  26h ; &
                db  2Ch ; ,
                db  30h ; 0
                db  34h ; 4
                db  38h ; 8
                db  3Ah ; :
                db  3Ch ; <
                db  40h ; @
                db    9
                db  0Eh
                db  13h
                db  16h
                db  18h
                db  1Ah
                db  1Eh
                db  23h ; #
                db  26h ; &
                db  2Ch ; ,
                db  32h ; 2
                db  35h ; 5
                db  39h ; 9
                db  3Bh ; ;
                db  3Ch ; <
                db  40h ; @
                db  0Ch
                db  0Eh
                db  0Eh
                db  1Ch
                db  22h ; "
                db  2Ch ; ,
                db  32h ; 2
                db  40h ; @
                db  48h ; H
                db  4Ch ; L
                db  50h ; P
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  54h ; T
                db  58h ; X
                db  0Dh
                db  10h
                db  10h
                db  1Ch
                db  22h ; "
                db  2Ch ; ,
                db  32h ; 2
                db  40h ; @
                db  48h ; H
                db  4Ch ; L
                db  50h ; P
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  54h ; T
                db  58h ; X
                db  0Fh
                db  14h
                db  14h
                db  1Ch
                db  22h ; "
                db  2Ch ; ,
                db  32h ; 2
                db  40h ; @
                db  48h ; H
                db  4Ch ; L
                db  50h ; P
                db  52h ; R
                db  54h ; T
                db  55h ; U
                db  54h ; T
                db  58h ; X
                db  12h
                db  15h
                db  18h
                db  1Ch
                db  22h ; "
                db  2Ch ; ,
                db  33h ; 3
                db  40h ; @
                db  4Ah ; J
                db  52h ; R
                db  53h ; S
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  55h ; U
                db  58h ; X
                db  15h
                db  18h
                db  1Ch
                db  20h
                db  2Ah ; *
                db  2Fh ; /
                db  3Ah ; :
                db  46h ; F
                db  52h ; R
                db  5Ah ; Z
                db  5Ah ; Z
                db  59h ; Y
                db  59h ; Y
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  17h
                db  1Ch
                db  1Fh
                db  27h ; '
                db  31h ; 1
                db  37h ; 7
                db  42h ; B
                db  48h ; H
                db  52h ; R
                db  58h ; X
                db  5Dh ; ]
                db  5Bh ; [
                db  5Bh ; [
                db  59h ; Y
                db  58h ; X
                db  5Ah ; Z
                db  19h
                db  1Dh
                db  21h ; !
                db  28h ; (
                db  32h ; 2
                db  39h ; 9
                db  42h ; B
                db  48h ; H
                db  52h ; R
                db  58h ; X
                db  5Ch ; \
                db  5Ch ; \
                db  5Dh ; ]
                db  5Bh ; [
                db  59h ; Y
                db  59h ; Y
                db  19h
                db  1Ch
                db  20h
                db  26h ; &
                db  2Eh ; .
                db  36h ; 6
                db  40h ; @
                db  48h ; H
                db  50h ; P
                db  56h ; V
                db  5Bh ; [
                db  5Ch ; \
                db  5Ch ; \
                db  5Ah ; Z
                db  59h ; Y
                db  58h ; X
                db  17h
                db  1Ah
                db  1Dh
                db  21h ; !
                db  2Ch ; ,
                db  33h ; 3
                db  3Eh ; >
                db  46h ; F
                db  4Ch ; L
                db  52h ; R
                db  58h ; X
                db  5Ah ; Z
                db  5Bh ; [
                db  5Ah ; Z
                db  56h ; V
                db  55h ; U
                db  11h
                db  16h
                db  19h
                db  1Ch
                db  28h ; (
                db  2Dh ; -
                db  36h ; 6
                db  40h ; @
                db  46h ; F
                db  4Bh ; K
                db  52h ; R
                db  55h ; U
                db  54h ; T
                db  55h ; U
                db  52h ; R
                db  50h ; P
                db  0Eh
                db  13h
                db  16h
                db  19h
                db  20h
                db  22h ; "
                db  2Ch ; ,
                db  38h ; 8
                db  3Bh ; ;
                db  40h ; @
                db  44h ; D
                db  49h ; I
                db  49h ; I
                db  4Ah ; J
                db  48h ; H
                db  48h ; H
                db  0Dh
                db  10h
                db  14h
                db  18h
                db  1Bh
                db  20h
                db  29h ; )
                db  30h ; 0
                db  36h ; 6
                db  39h ; 9
                db  3Bh ; ;
                db  3Fh ; ?
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  41h ; A
                db  0Dh
                db  0Eh
                db  13h
                db  17h
                db  1Ah
                db  1Fh
                db  26h ; &
                db  2Ch ; ,
                db  30h ; 0
                db  33h ; 3
                db  37h ; 7
                db  3Ah ; :
                db  3Ch ; <
                db  3Dh ; =
                db  3Dh ; =
                db  3Ch ; <
                db  0Ch
                db  0Eh
                db  13h
                db  17h
                db  19h
                db  1Eh
                db  23h ; #
                db  29h ; )
                db  2Dh ; -
                db  2Fh ; /
                db  35h ; 5
                db  37h ; 7
                db  38h ; 8
                db  3Bh ; ;
                db  3Ah ; :
                db  39h ; 9
                db  0Ah
                db  0Eh
                db  13h
                db  17h
                db  19h
                db  1Dh
                db  21h ; !
                db  26h ; &
                db  2Ah ; *
                db  2Eh ; .
                db  33h ; 3
                db  34h ; 4
                db  37h ; 7
                db  39h ; 9
                db  38h ; 8
                db  37h ; 7
                db  0Bh
                db  0Eh
                db  13h
                db  17h
                db  19h
                db  1Ch
                db  1Fh
                db  22h ; "
                db  2Ah ; *
                db  2Dh ; -
                db  33h ; 3
                db  33h ; 3
                db  36h ; 6
                db  37h ; 7
                db  36h ; 6
                db  35h ; 5
                db  1Ch
                db  1Eh
                db  1Fh
                db  21h ; !
                db  24h ; $
                db  28h ; (
                db  2Eh ; .
                db  37h ; 7
                db  3Fh ; ?
                db  49h ; I
                db  52h ; R
                db  5Bh ; [
                db  62h ; b
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  1Bh
                db  1Eh
                db  20h
                db  23h ; #
                db  27h ; '
                db  2Ch ; ,
                db  31h ; 1
                db  39h ; 9
                db  40h ; @
                db  49h ; I
                db  52h ; R
                db  59h ; Y
                db  60h ; `
                db  64h ; d
                db  66h ; f
                db  67h ; g
                db  1Ah
                db  1Dh
                db  21h ; !
                db  27h ; '
                db  2Bh ; +
                db  31h ; 1
                db  35h ; 5
                db  3Ch ; <
                db  42h ; B
                db  4Bh ; K
                db  52h ; R
                db  59h ; Y
                db  5Fh ; _
                db  64h ; d
                db  66h ; f
                db  67h ; g
                db  18h
                db  1Ch
                db  22h ; "
                db  28h ; (
                db  2Eh ; .
                db  34h ; 4
                db  3Ah ; :
                db  3Fh ; ?
                db  45h ; E
                db  4Ch ; L
                db  53h ; S
                db  59h ; Y
                db  5Fh ; _
                db  65h ; e
                db  67h ; g
                db  67h ; g
                db  17h
                db  1Ch
                db  22h ; "
                db  29h ; )
                db  30h ; 0
                db  36h ; 6
                db  3Ch ; <
                db  41h ; A
                db  47h ; G
                db  4Eh ; N
                db  54h ; T
                db  59h ; Y
                db  5Fh ; _
                db  65h ; e
                db  67h ; g
                db  67h ; g
                db  16h
                db  1Ah
                db  20h
                db  27h ; '
                db  2Fh ; /
                db  36h ; 6
                db  3Dh ; =
                db  43h ; C
                db  49h ; I
                db  4Fh ; O
                db  54h ; T
                db  5Ah ; Z
                db  5Fh ; _
                db  64h ; d
                db  67h ; g
                db  67h ; g
                db  14h
                db  18h
                db  1Eh
                db  25h ; %
                db  2Ch ; ,
                db  34h ; 4
                db  3Ch ; <
                db  43h ; C
                db  49h ; I
                db  4Eh ; N
                db  54h ; T
                db  5Bh ; [
                db  60h ; `
                db  64h ; d
                db  66h ; f
                db  67h ; g
                db  11h
                db  15h
                db  18h
                db  20h
                db  28h ; (
                db  31h ; 1
                db  39h ; 9
                db  41h ; A
                db  47h ; G
                db  4Dh ; M
                db  53h ; S
                db  59h ; Y
                db  5Eh ; ^
                db  61h ; a
                db  63h ; c
                db  65h ; e
                db  0Fh
                db  13h
                db  15h
                db  1Bh
                db  22h ; "
                db  2Ch ; ,
                db  34h ; 4
                db  3Dh ; =
                db  45h ; E
                db  4Ch ; L
                db  51h ; Q
                db  57h ; W
                db  5Ch ; \
                db  5Fh ; _
                db  61h ; a
                db  62h ; b
                db  0Dh
                db  10h
                db  12h
                db  16h
                db  1Eh
                db  27h ; '
                db  2Fh ; /
                db  3Ah ; :
                db  43h ; C
                db  49h ; I
                db  4Dh ; M
                db  52h ; R
                db  55h ; U
                db  58h ; X
                db  5Bh ; [
                db  5Eh ; ^
                db  0Dh
                db  10h
                db  12h
                db  14h
                db  1Ah
                db  22h ; "
                db  2Bh ; +
                db  36h ; 6
                db  3Fh ; ?
                db  45h ; E
                db  47h ; G
                db  49h ; I
                db  4Ch ; L
                db  4Eh ; N
                db  51h ; Q
                db  54h ; T
                db  0Bh
                db  0Fh
                db  12h
                db  14h
                db  17h
                db  1Dh
                db  28h ; (
                db  33h ; 3
                db  3Ch ; <
                db  41h ; A
                db  44h ; D
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  48h ; H
                db  4Bh ; K
                db  0Ah
                db  0Dh
                db  10h
                db  12h
                db  15h
                db  1Bh
                db  26h ; &
                db  31h ; 1
                db  3Ah ; :
                db  40h ; @
                db  43h ; C
                db  44h ; D
                db  44h ; D
                db  45h ; E
                db  45h ; E
                db  48h ; H
                db    8
                db  0Bh
                db  0Dh
                db  10h
                db  14h
                db  1Bh
                db  24h ; $
                db  30h ; 0
                db  38h ; 8
                db  40h ; @
                db  43h ; C
                db  44h ; D
                db  44h ; D
                db  45h ; E
                db  45h ; E
                db  47h ; G
                db    5
                db    7
                db  0Ah
                db  0Eh
                db  11h
                db  18h
                db  22h ; "
                db  2Eh ; .
                db  37h ; 7
                db  3Eh ; >
                db  43h ; C
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  46h ; F
                db  47h ; G
                db    4
                db    6
                db    8
                db  0Bh
                db  10h
                db  18h
                db  21h ; !
                db  2Dh ; -
                db  36h ; 6
                db  3Dh ; =
                db  42h ; B
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  1Ch
                db  20h
                db  26h ; &
                db  2Eh ; .
                db  36h ; 6
                db  3Ch ; <
                db  48h ; H
                db  4Eh ; N
                db  50h ; P
                db  54h ; T
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  1Ch
                db  20h
                db  26h ; &
                db  2Eh ; .
                db  34h ; 4
                db  3Ch ; <
                db  46h ; F
                db  4Eh ; N
                db  50h ; P
                db  54h ; T
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  1Ah
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Bh ; ;
                db  44h ; D
                db  4Ch ; L
                db  50h ; P
                db  53h ; S
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  1Ah
                db  1Ch
                db  22h ; "
                db  2Ah ; *
                db  32h ; 2
                db  39h ; 9
                db  42h ; B
                db  4Ah ; J
                db  4Eh ; N
                db  52h ; R
                db  54h ; T
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  56h ; V
                db  18h
                db  19h
                db  1Eh
                db  26h ; &
                db  2Dh ; -
                db  36h ; 6
                db  3Fh ; ?
                db  47h ; G
                db  4Ch ; L
                db  4Fh ; O
                db  52h ; R
                db  54h ; T
                db  54h ; T
                db  54h ; T
                db  55h ; U
                db  54h ; T
                db  15h
                db  17h
                db  1Bh
                db  22h ; "
                db  29h ; )
                db  31h ; 1
                db  3Ah ; :
                db  43h ; C
                db  48h ; H
                db  4Bh ; K
                db  4Fh ; O
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  54h ; T
                db  13h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  35h ; 5
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Dh ; M
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  52h ; R
                db  11h
                db  12h
                db  15h
                db  1Bh
                db  20h
                db  27h ; '
                db  30h ; 0
                db  37h ; 7
                db  3Dh ; =
                db  41h ; A
                db  45h ; E
                db  46h ; F
                db  48h ; H
                db  4Ah ; J
                db  4Ch ; L
                db  4Dh ; M
                db  0Fh
                db  10h
                db  14h
                db  19h
                db  1Dh
                db  20h
                db  2Ah ; *
                db  31h ; 1
                db  38h ; 8
                db  3Ch ; <
                db  3Fh ; ?
                db  40h ; @
                db  43h ; C
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  0Dh
                db  0Eh
                db  11h
                db  16h
                db  19h
                db  1Ch
                db  22h ; "
                db  2Ch ; ,
                db  34h ; 4
                db  38h ; 8
                db  3Ah ; :
                db  3Bh ; ;
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  3Eh ; >
                db  0Bh
                db  0Dh
                db  10h
                db  14h
                db  16h
                db  19h
                db  1Dh
                db  28h ; (
                db  2Eh ; .
                db  33h ; 3
                db  35h ; 5
                db  37h ; 7
                db  3Bh ; ;
                db  3Ch ; <
                db  3Ch ; <
                db  3Ch ; <
                db    9
                db  0Dh
                db  11h
                db  13h
                db  16h
                db  18h
                db  1Ah
                db  1Fh
                db  27h ; '
                db  2Dh ; -
                db  30h ; 0
                db  31h ; 1
                db  36h ; 6
                db  39h ; 9
                db  38h ; 8
                db  38h ; 8
                db    8
                db  0Dh
                db  10h
                db  12h
                db  16h
                db  18h
                db  19h
                db  1Fh
                db  25h ; %
                db  29h ; )
                db  2Bh ; +
                db  2Eh ; .
                db  32h ; 2
                db  36h ; 6
                db  34h ; 4
                db  32h ; 2
                db    8
                db  0Dh
                db  10h
                db  12h
                db  16h
                db  18h
                db  19h
                db  20h
                db  25h ; %
                db  28h ; (
                db  2Ah ; *
                db  2Ah ; *
                db  30h ; 0
                db  31h ; 1
                db  30h ; 0
                db  30h ; 0
                db    8
                db  0Dh
                db  10h
                db  12h
                db  16h
                db  18h
                db  19h
                db  20h
                db  26h ; &
                db  28h ; (
                db  29h ; )
                db  28h ; (
                db  2Fh ; /
                db  31h ; 1
                db  30h ; 0
                db  2Eh ; .
                db    8
                db  0Dh
                db  0Eh
                db  12h
                db  16h
                db  18h
                db  18h
                db  20h
                db  26h ; &
                db  28h ; (
                db  2Ah ; *
                db  26h ; &
                db  2Eh ; .
                db  30h ; 0
                db  2Fh ; /
                db  2Eh ; .
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FEh
                db 0FCh
                db 0FBh
                db 0F9h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FEh
                db 0FDh
                db 0FCh
                db 0FAh
                db 0F8h
                db 0F7h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db 0F6h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db 0FEh
                db 0FDh
                db 0FCh
                db 0FBh
                db 0FAh
                db 0F9h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db 0F8h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    4
                db    9
                db  0Eh
                db  11h
                db  12h
                db  12h
                db  0Fh
                db  0Ah
                db    5
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    3
                db    7
                db  0Dh
                db  19h
                db  28h ; (
                db  36h ; 6
                db  40h ; @
                db  43h ; C
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  47h ; G
                db  47h ; G
                db  47h ; G
                db  47h ; G
                db  47h ; G
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    4
                db  0Ch
                db  1Ch
                db  2Bh ; +
                db  35h ; 5
                db  3Ah ; :
                db  3Dh ; =
                db  3Eh ; >
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    4
                db    9
                db  12h
                db  21h ; !
                db  2Fh ; /
                db  3Ah ; :
                db  41h ; A
                db  45h ; E
                db  47h ; G
                db  49h ; I
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  89h
                db  89h
                db  89h
                db  89h
                db  89h
                db  88h
                db  87h
                db  86h
                db  84h
                db  82h
                db  7Fh ; 
                db  7Ch ; |
                db  79h ; y
                db  75h ; u
                db  72h ; r
                db  6Eh ; n
                db  6Ah ; j
                db  66h ; f
                db  62h ; b
                db  5Dh ; ]
                db  59h ; Y
                db  56h ; V
                db  53h ; S
                db  52h ; R
                db  52h ; R
                db  52h ; R
                db  52h ; R
                db  52h ; R
                db  55h ; U
                db  59h ; Y
                db  5Bh ; [
                db  5Bh ; [
                db  5Bh ; [
                db    8
                db  0Dh
                db  10h
                db  12h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    6
                db  0Dh
                db  14h
                db  19h
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Ch
                db  17h
                db  0Dh
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db 0F2h
                db 0F2h
                db 0F2h
                db 0F2h
                db 0F2h
                db 0F1h
                db 0F1h
                db 0EEh
                db 0ECh
                db 0EAh
                db 0E6h
                db 0E2h
                db 0DBh
                db 0CFh
                db 0BCh
                db  9Eh
                db  86h
                db  71h ; q
                db  5Dh ; ]
                db  4Fh ; O
                db  44h ; D
                db  3Eh ; >
                db  38h ; 8
                db  35h ; 5
                db  34h ; 4
                db  34h ; 4
                db  34h ; 4
                db  34h ; 4
                db  34h ; 4
                db  39h ; 9
                db  41h ; A
                db  41h ; A
                db  42h ; B
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FDh
                db 0FAh
                db 0F7h
                db 0EFh
                db 0E5h
                db 0CDh
                db 0ADh
                db  8Bh
                db  6Fh ; o
                db  5Fh ; _
                db  52h ; R
                db  4Bh ; K
                db  47h ; G
                db  46h ; F
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  49h ; I
                db  4Ch ; L
                db  56h ; V
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0FBh
                db 0F9h
                db 0F7h
                db 0F5h
                db 0F0h
                db 0E6h
                db 0D7h
                db 0C8h
                db 0B9h
                db 0ADh
                db 0A6h
                db 0A0h
                db  9Dh
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  9Ah
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db 0DCh
                db 0DCh
                db 0DCh
                db 0DCh
                db 0D8h
                db 0CDh
                db 0BAh
                db  9Ah
                db  6Fh ; o
                db  4Ch ; L
                db  35h ; 5
                db  27h ; '
                db  1Eh
                db  18h
                db  13h
                db  0Fh
                db  0Dh
                db  0Bh
                db  0Ah
                db  0Ah
                db  0Ah
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  4Ah ; J
                db  49h ; I
                db  46h ; F
                db  3Eh ; >
                db  34h ; 4
                db  29h ; )
                db  21h ; !
                db  1Bh
                db  17h
                db  14h
                db  12h
                db  10h
                db  0Fh
                db  0Eh
                db  0Dh
                db  0Ch
                db  0Bh
                db  0Ah
                db    9
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A1h
                db 0A0h
                db  9Eh
                db  9Bh
                db  96h
                db  91h
                db  8Ch
                db  88h
                db  83h
                db  7Fh ; 
                db  7Bh ; {
                db  77h ; w
                db  73h ; s
                db  6Fh ; o
                db  6Bh ; k
                db  68h ; h
                db  64h ; d
                db  61h ; a
                db  5Eh ; ^
                db  5Bh ; [
                db  58h ; X
                db  55h ; U
                db 0DCh
                db 0DCh
                db 0DCh
                db 0DCh
                db 0DAh
                db 0D4h
                db 0BEh
                db  90h
                db  5Bh ; [
                db  3Bh ; ;
                db  2Ch ; ,
                db  22h ; "
                db  1Ch
                db  17h
                db  13h
                db  10h
                db  0Dh
                db  0Ch
                db  0Bh
                db  0Ah
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FEh
                db 0FCh
                db 0FAh
                db 0F8h
                db 0F6h
                db 0F3h
                db 0EFh
                db 0EBh
                db 0E7h
                db 0E2h
                db 0DCh
                db 0D5h
                db 0CDh
                db 0C5h
                db 0BAh
                db 0ACh
                db  9Eh
                db  8Fh
                db  7Dh ; }
                db  6Ah ; j
                db  58h ; X
                db  44h ; D
                db  32h ; 2
                db  1Eh
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db 0E4h
                db 0E4h
                db 0E4h
                db 0E4h
                db 0E4h
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    4
                db    8
                db  0Bh
                db  0Ch
                db  0Dh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db    5
                db    5
                db    5
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Dh
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  0Dh
                db  12h
                db  0Dh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db  0Dh
                db  1Fh
                db  24h ; $
                db  26h ; &
                db  2Ch ; ,
                db  33h ; 3
                db  3Bh ; ;
                db  2Ch ; ,
                db  0Dh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db  1Ah
                db  2Eh ; .
                db  3Bh ; ;
                db  40h ; @
                db  45h ; E
                db  4Dh ; M
                db  40h ; @
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Dh
                db  33h ; 3
                db  4Dh ; M
                db  4Dh ; M
                db  52h ; R
                db  5Ch ; \
                db  4Dh ; M
                db  26h ; &
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db  26h ; &
                db  40h ; @
                db  5Ah ; Z
                db  66h ; f
                db  66h ; f
                db  4Dh ; M
                db  33h ; 3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ah
                db  33h ; 3
                db  4Dh ; M
                db  5Ah ; Z
                db  5Ah ; Z
                db  4Dh ; M
                db  33h ; 3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Dh
                db  26h ; &
                db  40h ; @
                db  45h ; E
                db  4Dh ; M
                db  40h ; @
                db  26h ; &
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    3
                db  33h ; 3
                db  33h ; 3
                db  40h ; @
                db  33h ; 3
                db  1Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  26h ; &
                db  33h ; 3
                db  40h ; @
                db  26h ; &
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  14h
                db  1Ah
                db  1Fh
                db  26h ; &
                db  28h ; (
                db  2Eh ; .
                db  33h ; 3
                db  32h ; 2
                db  26h ; &
                db  1Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  3Dh ; =
                db  57h ; W
                db  82h
                db 0A2h
                db 0B0h
                db 0BAh
                db 0B9h
                db 0C2h
                db  79h ; y
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db  52h ; R
                db  8Dh
                db 0B4h
                db 0CBh
                db 0DAh
                db 0E6h
                db 0E6h
                db 0F3h
                db  7Bh ; {
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Bh
                db  6Ah ; j
                db  9Ah
                db 0C1h
                db 0D3h
                db 0E1h
                db 0E6h
                db 0F3h
                db 0F3h
                db  77h ; w
                db  36h ; 6
                db    0
                db    0
                db    0
                db  12h
                db  19h
                db  4Ah ; J
                db  83h
                db 0A6h
                db 0CDh
                db 0E0h
                db 0E3h
                db 0E6h
                db 0F3h
                db 0F3h
                db  70h ; p
                db  33h ; 3
                db    0
                db    0
                db    0
                db  14h
                db  40h ; @
                db  72h ; r
                db  9Ah
                db 0B3h
                db 0CFh
                db 0E6h
                db 0E6h
                db 0E6h
                db 0F3h
                db 0F3h
                db  6Ah ; j
                db  31h ; 1
                db    0
                db    0
                db    0
                db  14h
                db  69h ; i
                db  84h
                db 0ABh
                db 0BCh
                db 0D3h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0F3h
                db 0F3h
                db  64h ; d
                db  2Eh ; .
                db    0
                db    0
                db    0
                db  13h
                db  7Ah ; z
                db  84h
                db 0B0h
                db 0BDh
                db 0D2h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0F3h
                db 0F3h
                db  60h ; `
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db  12h
                db  77h ; w
                db  7Dh ; }
                db 0A6h
                db 0B2h
                db 0C2h
                db 0D2h
                db 0E0h
                db 0E1h
                db 0E5h
                db 0E2h
                db  5Ch ; \
                db  29h ; )
                db    0
                db    0
                db    0
                db    4
                db  49h ; I
                db  63h ; c
                db  80h
                db  80h
                db  89h
                db  9Ah
                db  9Ah
                db  9Ch
                db 0AAh
                db 0AAh
                db  5Ch ; \
                db  26h ; &
                db    0
                db    0
                db    0
                db    0
                db  23h ; #
                db  3Bh ; ;
                db  39h ; 9
                db  3Bh ; ;
                db  3Bh ; ;
                db  3Dh ; =
                db  3Dh ; =
                db  3Fh ; ?
                db  40h ; @
                db  3Fh ; ?
                db  1Fh
                db  17h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  12h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Eh ; >
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Ch ; L
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  13h
                db  14h
                db  18h
                db  1Eh
                db  24h ; $
                db  2Ch ; ,
                db  34h ; 4
                db  3Ch ; <
                db  42h ; B
                db  46h ; F
                db  4Ah ; J
                db  4Dh ; M
                db  4Eh ; N
                db  4Eh ; N
                db  50h ; P
                db  50h ; P
                db  11h
                db  12h
                db  15h
                db  1Bh
                db  20h
                db  27h ; '
                db  31h ; 1
                db  37h ; 7
                db  3Dh ; =
                db  41h ; A
                db  45h ; E
                db  48h ; H
                db  4Bh ; K
                db  4Ch ; L
                db  4Ch ; L
                db  4Dh ; M
                db  0Fh
                db  10h
                db  13h
                db  18h
                db  1Dh
                db  21h ; !
                db  2Ah ; *
                db  31h ; 1
                db  38h ; 8
                db  3Ch ; <
                db  3Fh ; ?
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  0Dh
                db  0Eh
                db  11h
                db  16h
                db  17h
                db  1Ch
                db  20h
                db  2Ch ; ,
                db  34h ; 4
                db  38h ; 8
                db  3Ah ; :
                db  3Bh ; ;
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  3Eh ; >
                db  0Bh
                db  0Ch
                db  12h
                db  14h
                db  13h
                db  17h
                db  18h
                db  24h ; $
                db  2Eh ; .
                db  33h ; 3
                db  35h ; 5
                db  37h ; 7
                db  3Bh ; ;
                db  3Ch ; <
                db  3Ch ; <
                db  3Ch ; <
                db    9
                db  0Ch
                db  12h
                db  12h
                db  10h
                db  12h
                db  13h
                db  20h
                db  28h ; (
                db  2Dh ; -
                db  32h ; 2
                db  32h ; 2
                db  36h ; 6
                db  38h ; 8
                db  38h ; 8
                db  38h ; 8
                db    8
                db  0Dh
                db  10h
                db  0Eh
                db  10h
                db  11h
                db  0Fh
                db  1Ah
                db  22h ; "
                db  27h ; '
                db  2Dh ; -
                db  2Eh ; .
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  32h ; 2
                db    8
                db  0Dh
                db  10h
                db  0Eh
                db  10h
                db  11h
                db  0Eh
                db  19h
                db  21h ; !
                db  24h ; $
                db  2Ch ; ,
                db  2Ah ; *
                db  30h ; 0
                db  31h ; 1
                db  30h ; 0
                db  30h ; 0
                db    8
                db  0Dh
                db  10h
                db  0Eh
                db  10h
                db  10h
                db  0Eh
                db  18h
                db  20h
                db  23h ; #
                db  2Bh ; +
                db  28h ; (
                db  2Fh ; /
                db  31h ; 1
                db  30h ; 0
                db  2Eh ; .
                db    8
                db  0Dh
                db  0Eh
                db  0Eh
                db  10h
                db  10h
                db  0Eh
                db  18h
                db  20h
                db  22h ; "
                db  2Ah ; *
                db  26h ; &
                db  2Eh ; .
                db  30h ; 0
                db  2Fh ; /
                db  2Eh ; .
                db  80h
                db  80h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  84h
                db  80h
                db  80h
                db  80h
                db  84h
                db  84h
                db  84h
                db  84h
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  84h
                db  84h
                db  84h
                db  80h
                db  80h
                db  80h
                db  84h
                db  84h
                db  84h
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  84h
                db  84h
                db  80h
                db  80h
                db  80h
                db  84h
                db  84h
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db    4
                db    4
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  84h
                db  80h
                db  80h
                db  80h
                db  84h
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db    4
                db  44h ; D
                db    4
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  84h
                db  80h
                db  40h ; @
                db  40h ; @
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  80h
                db  40h ; @
                db  40h ; @
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  80h
                db  42h ; B
                db  42h ; B
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  84h
                db  80h
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  44h ; D
                db  44h ; D
                db  44h ; D
                db  80h
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  44h ; D
                db  44h ; D
                db  80h
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  44h ; D
                db  80h
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  46h ; F
                db  42h ; B
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  42h ; B
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  42h ; B
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  42h ; B
                db  41h ; A
                db  41h ; A
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  42h ; B
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    5
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Bh
                db  1Bh
                db  18h
                db  18h
                db  15h
                db  15h
                db  12h
                db  12h
                db  0Fh
                db  0Fh
                db  0Ch
abf1_start:     db 0, 0, 0, 0, 0, 0, 2, 2
                db 2, 2, 2, 3, 4, 5, 5, 6
                db 7, 8, 9, 0Ah, 0Bh, 0Ch, 0Dh, 0Eh
                db 0Fh, 10h, 12h, 15h, 18h, 1Bh, 1Eh, 0
                db 0, 0, 0, 0, 1, 2, 2, 2
                db 3, 4, 5, 6, 7, 8, 9, 0Ah
                db 0Bh, 0Ch, 0Ch, 0Dh, 0Eh, 0Fh, 10h, 11h
                db 12h, 14h, 17h, 1Bh, 1Eh, 22h, 0, 0
                db 0, 0, 0, 2, 3, 4, 5, 6
                db 7, 9, 0Bh, 0Ch, 0Eh, 0Fh, 10h, 11h
                db 12h, 13h, 14h, 14h, 14h, 14h, 15h, 16h
                db 17h, 18h, 1Ah, 1Fh, 26h, 0, 0, 0
                db 0, 0, 4, 5, 6, 7, 8, 9
                db 0Bh, 0Eh, 11h, 14h, 17h, 1Bh, 1Fh, 22h
                db 24h, 25h, 26h, 26h, 26h, 26h, 25h, 24h
                db 23h, 23h, 23h, 23h, 0, 0, 0, 0
                db 0, 0, 1, 1, 1, 1, 1, 2
                db 3, 3, 4, 5, 6, 7, 8, 9
                db 0Ah, 0Bh, 0Ch, 0Dh, 0Eh, 0Fh, 11h, 13h
                db 15h, 17h, 19h, 0, 0, 0, 0, 0
                db 0, 1, 1, 1, 1, 1, 2, 3
                db 3, 4, 5, 6, 7, 8, 9, 0Ah
                db 0Bh, 0Ch, 0Dh, 0Eh, 0Fh, 11h, 13h, 15h
                db 17h, 19h, 0, 0, 0, 0, 0, 0
                db 1, 1, 1, 1, 1, 2, 3, 3
                db 4, 5, 6, 7, 8, 9, 0Ah, 0Bh
                db 0Ch, 0Dh, 0Eh, 0Fh, 11h, 13h, 15h, 17h
                db 19h, 0, 0, 0, 0, 0, 0, 1
                db 1, 1, 1, 1, 2, 3, 3, 4
                db 5, 6, 7, 8, 9, 0Ah, 0Bh, 0Ch
                db 0Dh, 0Eh, 0Fh, 11h, 13h, 15h, 17h, 19h
                db    3
                db    3
                db    4
                db    4
                db    6
                db    7
                db    8
                db  0Ah
                db  0Bh
                db  0Dh
                db  0Fh
                db  11h
                db  13h
                db  15h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Eh
                db  21h ; !
                db  23h ; #
                db  26h ; &
                db  29h ; )
                db  2Dh ; -
                db  31h ; 1
                db  36h ; 6
                db  3Ah ; :
                db  40h ; @
                db  46h ; F
                db  4Eh ; N
                db  57h ; W
                db    3
                db    3
                db    4
                db    4
                db    6
                db    7
                db    8
                db  0Ah
                db  0Bh
                db  0Dh
                db  0Fh
                db  11h
                db  13h
                db  15h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Eh
                db  21h ; !
                db  23h ; #
                db  26h ; &
                db  29h ; )
                db  2Eh ; .
                db  32h ; 2
                db  38h ; 8
                db  40h ; @
                db  48h ; H
                db  52h ; R
                db  5Ch ; \
                db  65h ; e
                db    3
                db    3
                db    4
                db    4
                db    6
                db    7
                db    8
                db  0Ah
                db  0Bh
                db  0Dh
                db  0Fh
                db  11h
                db  13h
                db  15h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Eh
                db  21h ; !
                db  23h ; #
                db  26h ; &
                db  29h ; )
                db  2Dh ; -
                db  32h ; 2
                db  39h ; 9
                db  41h ; A
                db  4Ch ; L
                db  59h ; Y
                db  67h ; g
                db  74h ; t
                db    3
                db    3
                db    4
                db    4
                db    6
                db    7
                db    8
                db  0Ah
                db  0Bh
                db  0Dh
                db  0Fh
                db  11h
                db  13h
                db  15h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Eh
                db  21h ; !
                db  23h ; #
                db  26h ; &
                db  2Ah ; *
                db  2Fh ; /
                db  34h ; 4
                db  3Ch ; <
                db  47h ; G
                db  52h ; R
                db  62h ; b
                db  71h ; q
                db  80h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  16h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
adf1_start:     db 9,9,9,9,9,9,9,8,6,3,0,0,0,0,0,0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    3
                db    5
                db    7
                db    9
                db  0Bh
                db  0Dh
                db  0Fh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0F9h
                db 0ECh
                db 0E0h
                db 0D5h
                db 0CCh
                db 0C3h
                db 0BBh
                db 0B3h
                db 0ACh
                db 0A6h
                db 0A0h
                db  9Ah
                db  95h
                db  90h
                db  8Ch
                db  88h
                db  84h
                db  80h
                db  7Ch ; |
                db  79h ; y
                db  76h ; v
                db  73h ; s
                db  70h ; p
                db  6Dh ; m
                db  6Bh ; k
                db  68h ; h
                db  66h ; f
                db  66h ; f
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db 0F6h
                db  7Fh ; 
                db  9Ah
                db  7Fh ; 
                db  58h ; X
                db  7Fh ; 
                db  4Ch ; L
                db  7Eh ; ~
                db  60h ; `
                db  75h ; u
                db  94h
                db  68h ; h
                db    0
                db  5Bh ; [
                db  40h ; @
                db  4Dh ; M
                db 0C3h
                db  3Eh ; >
                db 0F6h
                db  30h ; 0
                db  5Ah ; Z
                db  24h ; $
                db 0E4h
                db  18h
                db  6Eh ; n
                db  0Eh
                db  61h ; a
                db    4
                db  3Bh ; ;
                db    2
                db  24h ; $
                db    2
                db  24h ; $
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  40h ; @
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  9Fh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CCh
                db 0CBh
                db 0C9h
                db 0C3h
                db 0BAh
                db 0B0h
                db 0A5h
                db  99h
                db  8Eh
                db  81h
                db  76h ; v
                db  6Ah ; j
                db  5Eh ; ^
                db  50h ; P
                db  41h ; A
                db  32h ; 2
                db  25h ; %
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  1Eh
                db  1Ch
                db  1Ah
                db  18h
                db  16h
                db  14h
                db  12h
                db  10h
                db  0Eh
                db  0Ch
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ah ; *
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  29h ; )
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  37h ; 7
                db  37h ; 7
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  36h ; 6
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  44h ; D
                db  46h ; F
                db  44h ; D
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  43h ; C
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  4Dh ; M
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  67h ; g
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  0Fh
                db  0Eh
                db  0Dh
                db  0Ch
                db  0Bh
                db  0Ah
                db    9
                db    8
                db    7
                db    6
                db    5
                db    4
                db    3
                db    2
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  2Dh ; -
                db  28h ; (
                db  21h ; !
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db  1Ah
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0CDh
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0E6h
                db 0FFh
                db 0FCh
                db 0F9h
                db 0F4h
                db 0EEh
                db 0E9h
                db 0E2h
                db 0D9h
                db 0D0h
                db 0C6h
                db 0BBh
                db 0AFh
                db  9Eh
                db  85h
                db  61h ; a
                db  2Dh ; -
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db  80h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ah
                db  1Bh
                db  1Dh
                db  1Dh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  27h ; '
                db  2Ch ; ,
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Dh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  27h ; '
                db  2Ch ; ,
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Dh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  27h ; '
                db  2Ch ; ,
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  2Fh ; /
                db  1Bh
                db  1Bh
                db  1Ch
                db  1Eh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  25h ; %
                db  2Bh ; +
                db  2Eh ; .
                db  2Eh ; .
                db  2Eh ; .
                db  2Eh ; .
                db  2Eh ; .
                db  2Eh ; .
                db  1Ch
                db  1Ch
                db  1Eh
                db  1Eh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  26h ; &
                db  2Ah ; *
                db  2Ch ; ,
                db  2Ch ; ,
                db  2Ch ; ,
                db  2Ch ; ,
                db  2Ch ; ,
                db  2Ch ; ,
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Fh
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  24h ; $
                db  28h ; (
                db  2Ah ; *
                db  2Ah ; *
                db  2Ah ; *
                db  2Ah ; *
                db  2Ah ; *
                db  2Ah ; *
                db  15h
                db  15h
                db  15h
                db  15h
                db  1Eh
                db  1Eh
                db  21h ; !
                db  24h ; $
                db  23h ; #
                db  24h ; $
                db  25h ; %
                db  25h ; %
                db  25h ; %
                db  25h ; %
                db  25h ; %
                db  25h ; %
                db  14h
                db  14h
                db  14h
                db  14h
                db  19h
                db  19h
                db  1Bh
                db  1Eh
                db  1Dh
                db  1Eh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  1Fh
                db  12h
                db  12h
                db  12h
                db  12h
                db  14h
                db  15h
                db  16h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  18h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  13h
                db  12h
                db  13h
                db  13h
                db  13h
                db  13h
                db  13h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  15h
                db  15h
                db  15h
                db  15h
                db  15h
                db  15h
                db  15h
                db  15h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  12h
                db  12h
                db  12h
                db  12h
                db  10h
                db  10h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  14h
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  11h
                db  12h
                db  13h
                db  17h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Bh
                db  1Bh
                db  10h
                db  10h
                db  10h
                db  10h
                db  11h
                db  13h
                db  14h
                db  16h
                db  19h
                db  1Ah
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  1Bh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  13h
                db  15h
                db  16h
                db  18h
                db  1Ah
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db  1Ch
                db  14h
                db  13h
                db  13h
                db  12h
                db  15h
                db  17h
                db  18h
                db  1Ah
                db  1Bh
                db  1Dh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Eh
                db  1Eh
                db  1Eh
                db  16h
                db  16h
                db  16h
                db  13h
                db  17h
                db  19h
                db  1Ah
                db  1Ch
                db  1Ch
                db  1Eh
                db  1Dh
                db  1Eh
                db  1Fh
                db  1Fh
                db  1Fh
                db  20h
                db  17h
                db  17h
                db  17h
                db  14h
                db  19h
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Dh
                db  1Fh
                db  1Dh
                db  1Fh
                db  20h
                db  20h
                db  20h
                db  22h ; "
                db  17h
                db  17h
                db  17h
                db  15h
                db  1Ah
                db  1Dh
                db  1Dh
                db  1Eh
                db  1Eh
                db  1Fh
                db  1Eh
                db  20h
                db  22h ; "
                db  23h ; #
                db  24h ; $
                db  24h ; $
                db  18h
                db  18h
                db  18h
                db  16h
                db  1Ah
                db  1Dh
                db  1Eh
                db  1Fh
                db  20h
                db  20h
                db  1Fh
                db  22h ; "
                db  24h ; $
                db  25h ; %
                db  25h ; %
                db  25h ; %
                db  17h
                db  14h
                db  15h
                db  17h
                db  1Ah
                db  1Dh
                db  1Fh
                db  20h
                db  21h ; !
                db  21h ; !
                db  21h ; !
                db  23h ; #
                db  25h ; %
                db  24h ; $
                db  25h ; %
                db  26h ; &
                db  15h
                db  15h
                db  16h
                db  17h
                db  19h
                db  1Ch
                db  1Fh
                db  20h
                db  21h ; !
                db  22h ; "
                db  23h ; #
                db  24h ; $
                db  26h ; &
                db  27h ; '
                db  27h ; '
                db  27h ; '
                db  11h
                db  12h
                db  14h
                db  16h
                db  17h
                db  19h
                db  1Bh
                db  1Dh
                db  1Eh
                db  21h ; !
                db  22h ; "
                db  25h ; %
                db  27h ; '
                db  27h ; '
                db  27h ; '
                db  27h ; '
                db  0Bh
                db  0Dh
                db  10h
                db  12h
                db  14h
                db  15h
                db  16h
                db  18h
                db  1Ah
                db  1Fh
                db  22h ; "
                db  25h ; %
                db  28h ; (
                db  28h ; (
                db  28h ; (
                db  2Ah ; *
                db    4
                db    5
                db    8
                db  0Bh
                db  0Eh
                db  0Fh
                db  11h
                db  13h
                db  17h
                db  1Ch
                db  21h ; !
                db  24h ; $
                db  28h ; (
                db  29h ; )
                db  2Ah ; *
                db  2Ah ; *
                db    0
                db    1
                db    2
                db    4
                db    9
                db  0Bh
                db  0Dh
                db  0Fh
                db  12h
                db  18h
                db  1Bh
                db  21h ; !
                db  26h ; &
                db  28h ; (
                db  28h ; (
                db  28h ; (
                db    0
                db    0
                db    1
                db    2
                db    6
                db    8
                db  0Ah
                db  0Ch
                db  0Eh
                db  11h
                db  14h
                db  19h
                db  1Dh
                db  20h
                db  20h
                db  21h ; !
                db    0
                db    0
                db    0
                db    1
                db    4
                db    5
                db    8
                db  0Ah
                db  0Bh
                db  0Ch
                db  0Ch
                db  0Eh
                db  10h
                db  11h
                db  13h
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    5
                db    9
                db  0Dh
                db  11h
                db  15h
                db  1Ah
                db  1Fh
                db  25h ; %
                db  2Ch ; ,
                db  30h ; 0
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  32h ; 2
                db  27h ; '
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  90h
                db  8Fh
                db  8Eh
                db  8Dh
                db  8Ch
                db  8Bh
                db  8Ah
                db  89h
                db  88h
                db  87h
                db  86h
                db  85h
                db  84h
                db  83h
                db  82h
                db  81h
                db  80h
                db  7Fh ; 
                db  7Eh ; ~
                db  7Dh ; }
                db  7Ch ; |
                db  7Bh ; {
                db  7Ah ; z
                db  79h ; y
                db  78h ; x
                db  77h ; w
                db  76h ; v
                db  75h ; u
                db  74h ; t
                db  73h ; s
                db  72h ; r
                db  71h ; q
                db  70h ; p
                db 0D4h
                db  0Ah
                db 0D3h
                db  0Ah
                db 0CDh
                db  0Ah
                db 0CDh
                db  0Ah
                db 0C1h
                db  0Ah
                db 0B0h
                db  0Ah
                db  87h
                db  0Ah
                db  1Eh
                db  0Ah
                db  60h ; `
                db    9
                db  41h ; A
                db    8
                db    8
                db    7
                db 0CCh
                db    5
                db  7Ah ; z
                db    4
                db  74h ; t
                db    3
                db 0C2h
                db    2
                db  5Bh ; [
                db    2
                db    6
                db    2
                db 0BFh
                db    1
                db  80h
                db    1
                db  4Ah ; J
                db    1
                db  0Eh
                db    1
                db 0D3h
                db    0
                db 0A1h
                db    0
                db  6Eh ; n
                db    0
                db  39h ; 9
                db    0
                db  18h
                db    0
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db 0DAh
                db  93h
                db  93h
                db  93h
                db  93h
                db  93h
                db  92h
                db  91h
                db  90h
                db  8Eh
                db  8Ch
                db  89h
                db  86h
                db  83h
                db  7Fh ; 
                db  7Ch ; |
                db  78h ; x
                db  74h ; t
                db  70h ; p
                db  6Ch ; l
                db  67h ; g
                db  63h ; c
                db  60h ; `
                db  5Dh ; ]
                db  5Ch ; \
                db  5Ch ; \
                db  5Ch ; \
                db  5Ch ; \
                db  5Ch ; \
                db  5Fh ; _
                db  63h ; c
                db  65h ; e
                db  65h ; e
                db  65h ; e
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Eh
                db  0Ch
                db  0Ah
                db    8
                db    6
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    5
                db    6
                db    7
                db  64h ; d
                db  64h ; d
                db  64h ; d
                db  64h ; d
                db  64h ; d
                db  64h ; d
                db  64h ; d
                db  62h ; b
                db  5Eh ; ^
                db  5Ah ; Z
                db  55h ; U
                db  52h ; R
                db  51h ; Q
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  50h ; P
                db  49h ; I
                db 0C3h
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================


init_xram_for_serial0:                  ; CODE XREF: TF0_0+EA↑p
                                        ; TF0_0+3F1↑p ...
                jb      RAM_2F.0, code_C006
                ljmp    code_C0EB
; ---------------------------------------------------------------------------

code_C006:                              ; CODE XREF: init_xram_for_serial0↑j
                jb      RAM_2F.1, code_C07A
                mov     A, #17h
                mov     DPTR, #0F981h
                movx    @DPTR, A        ; XRAM[0xF981] = 0x17
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF982] = 0
                mov     A, #1Bh
                mov     DPTR, #0F983h
                movx    @DPTR, A        ; XRAM[0xF983] = 0x1B
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF984] = 0
                mov     A, #0
                mov     DPTR, #0F989h
                movx    @DPTR, A        ; XRAM[0xF989] = 0
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF98A] = 0
                mov     A, #13h
                mov     DPTR, #0F98Bh
                movx    @DPTR, A        ; XRAM[0xF98B] = 0x13
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF98C] = 0
                mov     A, #0
                mov     DPTR, #0F991h
                movx    @DPTR, A        ; XRAM[0xF991] = 0x13
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF992] = 0
                mov     A, #89h
                mov     DPTR, #0F993h
                movx    @DPTR, A        ; XRAM[0xF993] = 0x89
                inc     DPTR
                mov     A, #13h
                movx    @DPTR, A        ; XRAM[0xF994] = 0x13
                mov     A, #4
                mov     DPTR, #0F995h
                movx    @DPTR, A        ; XRAM[0xF995] = 0x4
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF996] = 0
                mov     A, #15h
                mov     DPTR, #0F997h
                movx    @DPTR, A        ; XRAM[0xF997] = 0x15
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF998] = 0
                mov     A, #1Ah
                mov     DPTR, #0F98Dh
                movx    @DPTR, A        ; XRAM[0xF98D] = 0x1A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF98E] = 0
                mov     A, #31h ; '1'
                mov     DPTR, #0F98Fh
                movx    @DPTR, A        ; XRAM[0xF98F] = 0x31
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF990] = 0
                mov     A, #0
                mov     DPTR, #0F987h
                movx    @DPTR, A        ; XRAM[0xF987] = 0
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A        ; XRAM[0xF988] = 0
                ljmp    code_C1CC
; ---------------------------------------------------------------------------

code_C07A:                              ; CODE XREF: init_xram_for_serial0:code_C006↑j
                mov     A, #0FFh
                mov     DPTR, #0F983h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0FFh
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0F989h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F98Bh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F98Dh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #88h
                mov     DPTR, #0F98Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #13h
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F991h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0C8h
                mov     DPTR, #0F993h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F995h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F997h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0Ah
                mov     DPTR, #0F985h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0F987h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_C1CC
; ---------------------------------------------------------------------------

code_C0EB:                              ; CODE XREF: init_xram_for_serial0+3↑j
                jb      RAM_2F.1, code_C15E
                mov     A, #17h
                mov     DPTR, #0F981h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #1Bh
                mov     DPTR, #0F983h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F989h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F98Bh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F991h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #88h
                mov     DPTR, #0F993h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #13h
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F995h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F997h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F98Dh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0F4h
                mov     DPTR, #0F98Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #1
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F987h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                sjmp    code_C1CC
; ---------------------------------------------------------------------------

code_C15E:                              ; CODE XREF: init_xram_for_serial0:code_C0EB↑j
                mov     A, #0FFh
                mov     DPTR, #0F983h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0FFh
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0F989h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F98Bh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0C8h
                mov     DPTR, #0F98Dh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #88h
                mov     DPTR, #0F98Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #13h
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0F991h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0C8h
                mov     DPTR, #0F993h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0
                mov     DPTR, #0F995h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #14h
                mov     DPTR, #0F997h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #0Ah
                mov     DPTR, #0F985h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0F987h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A

code_C1CC:                              ; CODE XREF: init_xram_for_serial0+77↑j
                                        ; init_xram_for_serial0+E8↑j ...
                clr     RAM_2F.2
                clr     RAM_2F.4
                clr     RAM_2F.5
                clr     RAM_2F.6
                clr     A
                mov     DPTR, #0FBB3h
                movx    @DPTR, A
                mov     DPTR, #0F9A3h
                movx    @DPTR, A
                mov     DPTR, #0F9A1h
                movx    @DPTR, A
                jb      RAM_2F.1, code_C1F5
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                orl     IEN0, #10h      ; enable serial channel 0 interrupt
                mov     RAM_77, #0FFh
                ret
; ---------------------------------------------------------------------------

code_C1F5:                              ; CODE XREF: init_xram_for_serial0+1E1↑j
                anl     IEN0, #0EFh     ; disable serial0 interrupt
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     RAM_77, #4
                ret
; End of function init_xram_for_serial0


; =============== S U B R O U T I N E =======================================


RI0_TI0_0:                              ; CODE XREF: RI0_TI0↑j
                push    PSW             ; Program Status Word
                push    ACC             ; Accumulator
                push    B               ; B-Register
                push    DPL             ; Data Pointer, Low Byte
                push    DPH             ; Data Pointer, High Byte
                mov     B, S0CON        ; Serial Channel 0 Control Register
                jnb     B.1, code_C21F  ; B-Register
                anl     S0CON, #0FDh    ; Serial Channel 0 Control Register
                jb      B.3, code_C21F  ; B-Register
                ljmp    code_C47F
; ---------------------------------------------------------------------------

code_C21F:                              ; CODE XREF: RI0_TI0_0+D↑j
                                        ; RI0_TI0_0+13↑j
                jb      B.0, code_C225  ; B-Register
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C225:                              ; CODE XREF: RI0_TI0_0:code_C21F↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                mov     A, RAM_77
                cjne    A, #2, code_C230
                ljmp    code_C3C7
; ---------------------------------------------------------------------------

code_C230:                              ; CODE XREF: RI0_TI0_0+24↑j
                cjne    A, #0FFh, code_C24F
                jnb     B.2, code_C239  ; B-Register
                ljmp    code_C258
; ---------------------------------------------------------------------------

code_C239:                              ; CODE XREF: RI0_TI0_0+2D↑j
                jnb     RAM_2F.1, code_C23F
                ljmp    code_C53D
; ---------------------------------------------------------------------------

code_C23F:                              ; CODE XREF: RI0_TI0_0:code_C239↑j
                mov     A, S0BUF        ; Serial Channel 0 Buffer Register
                jz      code_C246
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C246:                              ; CODE XREF: RI0_TI0_0+3B↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #0FEh
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C24F:                              ; CODE XREF: RI0_TI0_0:code_C230↑j
                cjne    A, #6, code_C277
                jb      B.2, code_C258  ; B-Register
                ljmp    code_C3F8
; ---------------------------------------------------------------------------

code_C258:                              ; CODE XREF: RI0_TI0_0+30↑j
                                        ; RI0_TI0_0+4C↑j
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #6       ; Data Pointer Select Register
                mov     DPTR, #0F9A4h
                pop     DPSEL           ; Data Pointer Select Register
                mov     A, #0
                mov     DPTR, #0F99Ch
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jb      RAM_2F.0, code_C273
                clr     RAM_2F.3
                sjmp    code_C2A0
; ---------------------------------------------------------------------------

code_C273:                              ; CODE XREF: RI0_TI0_0+66↑j
                clr     RAM_2F.3
                sjmp    code_C2A0
; ---------------------------------------------------------------------------

code_C277:                              ; CODE XREF: RI0_TI0_0:code_C24F↑j
                cjne    A, #8, code_C27C
                sjmp    code_C27F
; ---------------------------------------------------------------------------

code_C27C:                              ; CODE XREF: RI0_TI0_0:code_C277↑j
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C27F:                              ; CODE XREF: RI0_TI0_0+74↑j
                jb      B.2, code_C285  ; B-Register
                ljmp    code_C3F8
; ---------------------------------------------------------------------------

code_C285:                              ; CODE XREF: RI0_TI0_0:code_C27F↑j
                mov     DPTR, #0F99Dh
                movx    A, @DPTR
                cjne    A, #1, code_C28C

code_C28C:                              ; CODE XREF: RI0_TI0_0+83↑j
                jnc     code_C291
                ljmp    code_C2A0
; ---------------------------------------------------------------------------

code_C291:                              ; CODE XREF: RI0_TI0_0:code_C28C↑j
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                cjne    A, #4, code_C298

code_C298:                              ; CODE XREF: RI0_TI0_0+8F↑j
                jnc     code_C29D
                ljmp    code_C2A0
; ---------------------------------------------------------------------------

code_C29D:                              ; CODE XREF: RI0_TI0_0:code_C298↑j
                ljmp    code_C3F8
; ---------------------------------------------------------------------------

code_C2A0:                              ; CODE XREF: RI0_TI0_0+6B↑j
                                        ; RI0_TI0_0+6F↑j ...
                mov     A, S0BUF        ; Serial Channel 0 Buffer Register
                jb      RAM_2F.0, code_C2C9
                jnb     RAM_2F.3, code_C2BB
                clr     RAM_2F.3
                add     A, #40h ; '@'
                cjne    A, #40h, code_C2B2 ; '@'
                ljmp    code_C2C9
; ---------------------------------------------------------------------------

code_C2B2:                              ; CODE XREF: RI0_TI0_0+A6↑j
                cjne    A, #0Dh, code_C2B8
                ljmp    code_C2C9
; ---------------------------------------------------------------------------

code_C2B8:                              ; CODE XREF: RI0_TI0_0:code_C2B2↑j
                ljmp    code_C3F8
; ---------------------------------------------------------------------------

code_C2BB:                              ; CODE XREF: RI0_TI0_0+9F↑j
                cjne    A, #40h, code_C2C3 ; '@'
                setb    RAM_2F.3
                ljmp    code_C35D
; ---------------------------------------------------------------------------

code_C2C3:                              ; CODE XREF: RI0_TI0_0:code_C2BB↑j
                cjne    A, #0Dh, code_C2C9
                ljmp    code_C391
; ---------------------------------------------------------------------------

code_C2C9:                              ; CODE XREF: RI0_TI0_0+9C↑j
                                        ; RI0_TI0_0+A9↑j ...
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #6       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                pop     DPSEL           ; Data Pointer Select Register
                mov     B, A            ; B-Register
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                jnz     code_C2E0
                inc     DPTR
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A

code_C2E0:                              ; CODE XREF: RI0_TI0_0+D4↑j
                jb      RAM_2F.0, code_C2E6
                ljmp    code_C35D
; ---------------------------------------------------------------------------

code_C2E6:                              ; CODE XREF: RI0_TI0_0:code_C2E0↑j
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                cjne    A, #1, code_C2EF
                sjmp    code_C2F2
; ---------------------------------------------------------------------------

code_C2EF:                              ; CODE XREF: RI0_TI0_0+E4↑j
                ljmp    code_C308
; ---------------------------------------------------------------------------

code_C2F2:                              ; CODE XREF: RI0_TI0_0+E7↑j
                inc     DPTR
                movx    A, @DPTR
                cjne    A, #0, code_C2F9
                sjmp    code_C2FC
; ---------------------------------------------------------------------------

code_C2F9:                              ; CODE XREF: RI0_TI0_0+EE↑j
                ljmp    code_C308
; ---------------------------------------------------------------------------

code_C2FC:                              ; CODE XREF: RI0_TI0_0+F1↑j
                mov     A, B            ; B-Register
                anl     A, #3Fh
                jnz     code_C304
                setb    RAM_2F.3

code_C304:                              ; CODE XREF: RI0_TI0_0+FA↑j
                add     A, #4
                sjmp    code_C325
; ---------------------------------------------------------------------------

code_C308:                              ; CODE XREF: RI0_TI0_0:code_C2EF↑j
                                        ; RI0_TI0_0:code_C2F9↑j
                jnb     RAM_2F.3, code_C336
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                cjne    A, #4, code_C314
                sjmp    code_C317
; ---------------------------------------------------------------------------

code_C314:                              ; CODE XREF: RI0_TI0_0+109↑j
                ljmp    code_C336
; ---------------------------------------------------------------------------

code_C317:                              ; CODE XREF: RI0_TI0_0+10C↑j
                inc     DPTR
                movx    A, @DPTR
                cjne    A, #0, code_C31E
                sjmp    code_C321
; ---------------------------------------------------------------------------

code_C31E:                              ; CODE XREF: RI0_TI0_0+113↑j
                ljmp    code_C336
; ---------------------------------------------------------------------------

code_C321:                              ; CODE XREF: RI0_TI0_0+116↑j
                mov     A, B            ; B-Register
                add     A, #5

code_C325:                              ; CODE XREF: RI0_TI0_0+100↑j
                mov     B, A            ; B-Register
                clr     A
                addc    A, #0
                xch     A, B            ; B-Register
                mov     DPTR, #0F99Ah
                movx    @DPTR, A
                inc     DPTR
                mov     A, B            ; B-Register
                movx    @DPTR, A
                sjmp    code_C35D
; ---------------------------------------------------------------------------

code_C336:                              ; CODE XREF: RI0_TI0_0:code_C308↑j
                                        ; RI0_TI0_0:code_C314↑j ...
                mov     DPTR, #0F99Bh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F99Dh
                movx    A, @DPTR
                cjne    A, B, code_C343 ; B-Register

code_C343:                              ; CODE XREF: RI0_TI0_0+13A↑j
                jnc     code_C348
                ljmp    code_C35D
; ---------------------------------------------------------------------------

code_C348:                              ; CODE XREF: RI0_TI0_0:code_C343↑j
                mov     DPTR, #0F99Ah
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                cjne    A, B, code_C355 ; B-Register

code_C355:                              ; CODE XREF: RI0_TI0_0+14C↑j
                jnc     code_C35A
                ljmp    code_C35D
; ---------------------------------------------------------------------------

code_C35A:                              ; CODE XREF: RI0_TI0_0:code_C355↑j
                ljmp    code_C391
; ---------------------------------------------------------------------------

code_C35D:                              ; CODE XREF: RI0_TI0_0+BA↑j
                                        ; RI0_TI0_0+DD↑j ...
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F995h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C37F
                anl     S0CON, #0EFh    ; Serial Channel 0 Control Register
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #7
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C37F:                              ; CODE XREF: RI0_TI0_0+16B↑j
                mov     RAM_77, #8
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C385:                              ; CODE XREF: RI0_TI0_0+1DC↓j
                                        ; RI0_TI0_0+205↓j
                mov     A, #0
                mov     DPTR, #0F9A0h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                sjmp    code_C3A3
; ---------------------------------------------------------------------------

code_C391:                              ; CODE XREF: RI0_TI0_0+C0↑j
                                        ; RI0_TI0_0:code_C35A↑j
                mov     DPTR, #0F99Ch
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F9A0h
                movx    @DPTR, A
                inc     DPTR
                xch     A, B            ; B-Register
                movx    @DPTR, A

code_C3A3:                              ; CODE XREF: RI0_TI0_0+189↑j
                jb      RAM_2F.1, code_C3B4
                mov     DPTR, #0F987h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C3B4
                clr     P3.1            ; Port 3 (PDIR=0)

code_C3B4:                              ; CODE XREF: RI0_TI0_0:code_C3A3↑j
                                        ; RI0_TI0_0+1AA↑j ...
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #4
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C3C7:                              ; CODE XREF: RI0_TI0_0+27↑j
                mov     A, B            ; B-Register
                mov     B, S0BUF        ; Serial Channel 0 Buffer Register
                jnb     ACC.2, code_C3D8 ; Accumulator
                mov     DPTR, #0F999h
                movx    A, @DPTR
                cjne    A, B, code_C3D8 ; B-Register
                sjmp    code_C451
; ---------------------------------------------------------------------------

code_C3D8:                              ; CODE XREF: RI0_TI0_0+1C6↑j
                                        ; RI0_TI0_0+1CD↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jb      RAM_2F.1, code_C385
                jb      RAM_2F.2, code_C414
                clr     RAM_2F.4
                clr     RAM_2F.5
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                sjmp    code_C40E
; ---------------------------------------------------------------------------

code_C3F8:                              ; CODE XREF: RI0_TI0_0+4F↑j
                                        ; RI0_TI0_0+7C↑j ...
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jnb     RAM_2F.2, code_C408
                ljmp    code_C512
; ---------------------------------------------------------------------------

code_C408:                              ; CODE XREF: RI0_TI0_0+1FC↑j
                jnb     RAM_2F.1, code_C40E
                ljmp    code_C385
; ---------------------------------------------------------------------------

code_C40E:                              ; CODE XREF: RI0_TI0_0+1F0↑j
                                        ; RI0_TI0_0:code_C408↑j
                mov     RAM_77, #0FFh
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C414:                              ; CODE XREF: RI0_TI0_0+1DF↑j
                mov     DPTR, #0F9A2h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F99Eh
                movx    @DPTR, A
                inc     DPTR
                xch     A, B            ; B-Register
                movx    @DPTR, A
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F98Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jnz     code_C448
                ljmp    code_C4A6
; ---------------------------------------------------------------------------

code_C448:                              ; CODE XREF: RI0_TI0_0+23D↑j
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #3
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C451:                              ; CODE XREF: RI0_TI0_0+1D0↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F99Eh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jnz     code_C46A
                ljmp    code_C4EF
; ---------------------------------------------------------------------------

code_C46A:                              ; CODE XREF: RI0_TI0_0+25F↑j
                mov     DPTR, #0F989h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C47F
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #1
                ljmp    code_C542
; ---------------------------------------------------------------------------

code_C47F:                              ; CODE XREF: RI0_TI0_0+16↑j
                                        ; RI0_TI0_0+26E↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                jb      RAM_2F.0, code_C4A6
                mov     DPTR, #0F99Eh
                movx    A, @DPTR
                cjne    A, #1, code_C495
                sjmp    code_C498
; ---------------------------------------------------------------------------

code_C495:                              ; CODE XREF: RI0_TI0_0+28A↑j
                ljmp    code_C4A6
; ---------------------------------------------------------------------------

code_C498:                              ; CODE XREF: RI0_TI0_0+28D↑j
                inc     DPTR
                movx    A, @DPTR
                cjne    A, #0, code_C49F
                sjmp    code_C4A2
; ---------------------------------------------------------------------------

code_C49F:                              ; CODE XREF: RI0_TI0_0+294↑j
                ljmp    code_C4A6
; ---------------------------------------------------------------------------

code_C4A2:                              ; CODE XREF: RI0_TI0_0+297↑j
                mov     A, #0Dh
                sjmp    code_C4CE
; ---------------------------------------------------------------------------

code_C4A6:                              ; CODE XREF: RI0_TI0_0+23F↑j
                                        ; RI0_TI0_0+283↑j ...
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #7       ; Data Pointer Select Register
                movx    A, @DPTR
                pop     DPSEL           ; Data Pointer Select Register
                jb      RAM_2F.0, code_C4C6
                jbc     RAM_2F.3, code_C4C3
                cjne    A, #40h, code_C4BA ; '@'
                ljmp    code_C4BD
; ---------------------------------------------------------------------------

code_C4BA:                              ; CODE XREF: RI0_TI0_0+2AE↑j
                cjne    A, #0Dh, code_C4C6

code_C4BD:                              ; CODE XREF: RI0_TI0_0+2B1↑j
                setb    RAM_2F.3
                mov     A, #40h ; '@'
                sjmp    code_C4CE
; ---------------------------------------------------------------------------

code_C4C3:                              ; CODE XREF: RI0_TI0_0+2AB↑j
                clr     C
                subb    A, #40h ; '@'

code_C4C6:                              ; CODE XREF: RI0_TI0_0+2A8↑j
                                        ; RI0_TI0_0:code_C4BA↑j
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #7       ; Data Pointer Select Register
                inc     DPTR
                pop     DPSEL           ; Data Pointer Select Register

code_C4CE:                              ; CODE XREF: RI0_TI0_0+29E↑j
                                        ; RI0_TI0_0+2BB↑j
                orl     S0CON, #8       ; Serial Channel 0 Control Register
                mov     S0BUF, A        ; Serial Channel 0 Buffer Register
                mov     DPTR, #0F999h
                movx    @DPTR, A
                jb      RAM_2F.0, code_C4DD
                jb      RAM_2F.3, code_C4EA

code_C4DD:                              ; CODE XREF: RI0_TI0_0+2D1↑j
                mov     DPTR, #0F99Eh
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A
                cjne    A, #0FFh, code_C4EA
                inc     DPTR
                movx    A, @DPTR
                dec     A
                movx    @DPTR, A

code_C4EA:                              ; CODE XREF: RI0_TI0_0+2D4↑j
                                        ; RI0_TI0_0+2DD↑j
                mov     RAM_77, #2
                sjmp    code_C542
; ---------------------------------------------------------------------------

code_C4EF:                              ; CODE XREF: RI0_TI0_0+261↑j
                jnb     RAM_2F.6, code_C503
                clr     RAM_2F.6
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #7       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     S0RELL, A       ; Serial Channel 0 Reload Reg., Low Byte
                movx    A, @DPTR
                inc     DPTR
                mov     S0RELH, A       ; Serial Channel 0 Reload Reg., High Byte
                pop     DPSEL           ; Data Pointer Select Register

code_C503:                              ; CODE XREF: RI0_TI0_0:code_C4EF↑j
                jb      RAM_2F.0, code_C512
                jnb     RAM_2F.4, code_C50C
                ljmp    code_C3B4
; ---------------------------------------------------------------------------

code_C50C:                              ; CODE XREF: RI0_TI0_0+300↑j
                jnb     RAM_2F.5, code_C512
                ljmp    code_C3B4
; ---------------------------------------------------------------------------

code_C512:                              ; CODE XREF: RI0_TI0_0+1FF↑j
                                        ; RI0_TI0_0:code_C503↑j ...
                mov     DPTR, #0F991h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C529
                anl     S0CON, #0EFh    ; Serial Channel 0 Control Register
                anl     IEN0, #0EFh     ; Interrupt Enable Register 0
                mov     RAM_77, #5
                sjmp    code_C542
; ---------------------------------------------------------------------------

code_C529:                              ; CODE XREF: RI0_TI0_0+316↑j
                jnb     RAM_2F.1, code_C53D
                mov     DPTR, #0F983h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C53D
                mov     RAM_77, #0FFh
                sjmp    code_C542
; ---------------------------------------------------------------------------

code_C53D:                              ; CODE XREF: RI0_TI0_0+36↑j
                                        ; RI0_TI0_0:code_C529↑j ...
                mov     RAM_77, #6
                sjmp    code_C542
; ---------------------------------------------------------------------------

code_C542:                              ; CODE XREF: RI0_TI0_0+1C↑j
                                        ; RI0_TI0_0+3D↑j ...
                pop     DPH             ; Data Pointer, High Byte
                pop     DPL             ; Data Pointer, Low Byte
                pop     B               ; B-Register
                pop     ACC             ; Accumulator
                pop     PSW             ; Program Status Word
                reti
; End of function RI0_TI0_0


; =============== S U B R O U T I N E =======================================


code_C54D:                              ; CODE XREF: IE0_0+1C2↑p
                                        ; power_on__ignition_key_turned_+2E12↑p ...
                jnb     RAM_2F.1, code_C553
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C553:                              ; CODE XREF: code_C54D↑j
                mov     PSW.5, C        ; Program Status Word
                mov     A, RAM_77
                cjne    A, #4, code_C55C
                sjmp    code_C55F
; ---------------------------------------------------------------------------

code_C55C:                              ; CODE XREF: code_C54D+A↑j
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C55F:                              ; CODE XREF: code_C54D+D↑j
                jnb     RAM_2F.0, code_C57C
                jb      RAM_2F.4, code_C56A
                lcall   code_D000
                sjmp    code_C5A1
; ---------------------------------------------------------------------------

code_C56A:                              ; CODE XREF: code_C54D+15↑j
                lcall   code_D001+2
                sjmp    code_C5A1
; ---------------------------------------------------------------------------
                db  20h
                db  7Dh ; }
                db    5
                db  12h
                db 0D0h
                db    0
                db  80h
                db  2Ah ; *
                db  12h
                db 0D0h
                db    6
                db  80h
                db  25h ; %
; ---------------------------------------------------------------------------

code_C57C:                              ; CODE XREF: code_C54D:code_C55F↑j
                jb      PSW.5, code_C598 ; Program Status Word
                jnb     RAM_2F.5, code_C585
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C585:                              ; CODE XREF: code_C54D+32↑j
                jb      RAM_2F.4, code_C593
                lcall   code_C69B
                jnb     RAM_2F.5, code_C591
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C591:                              ; CODE XREF: code_C54D+3E↑j
                sjmp    code_C5A1
; ---------------------------------------------------------------------------

code_C593:                              ; CODE XREF: code_C54D:code_C585↑j
                lcall   code_CB61
                sjmp    code_C5A1
; ---------------------------------------------------------------------------

code_C598:                              ; CODE XREF: code_C54D:code_C57C↑j
                jb      RAM_2F.5, code_C59E
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C59E:                              ; CODE XREF: code_C54D:code_C598↑j
                lcall   code_CB4B

code_C5A1:                              ; CODE XREF: code_C54D+1B↑j
                                        ; code_C54D+20↑j ...
                mov     A, RAM_77
                cjne    A, #4, code_C5A8
                sjmp    code_C5AB
; ---------------------------------------------------------------------------

code_C5A8:                              ; CODE XREF: code_C54D+56↑j
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C5AB:                              ; CODE XREF: code_C54D+59↑j
                mov     A, #0
                mov     DPTR, #0F97Fh
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                mov     DPTR, #0F9A2h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                xch     A, B            ; B-Register
                mov     DPTR, #0F99Eh
                movx    @DPTR, A
                inc     DPTR
                xch     A, B            ; B-Register
                movx    @DPTR, A
                orl     A, B            ; B-Register
                jnz     code_C5CE
                ljmp    code_C627
; ---------------------------------------------------------------------------

code_C5CE:                              ; CODE XREF: code_C54D+7C↑j
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h
                mov     DPSEL, #0       ; Data Pointer Select Register
                jb      RAM_2F.0, code_C5DC
                clr     RAM_2F.3

code_C5DC:                              ; CODE XREF: code_C54D+8A↑j
                mov     DPTR, #0F98Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C60C
                mov     DPTR, #0F98Eh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F980h
                movx    A, @DPTR
                cjne    A, B, code_C5F5 ; B-Register

code_C5F5:                              ; CODE XREF: code_C54D+A5↑j
                jnc     code_C5FA
                ljmp    code_C64F
; ---------------------------------------------------------------------------

code_C5FA:                              ; CODE XREF: code_C54D:code_C5F5↑j
                mov     DPTR, #0F98Dh
                movx    A, @DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0F97Fh
                movx    A, @DPTR
                cjne    A, B, code_C607 ; B-Register

code_C607:                              ; CODE XREF: code_C54D+B7↑j
                jnc     code_C60C
                ljmp    code_C64F
; ---------------------------------------------------------------------------

code_C60C:                              ; CODE XREF: code_C54D+99↑j
                                        ; code_C54D:code_C607↑j
                mov     DPTR, #0F987h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jnz     code_C654
                anl     S0CON, #0F7h    ; Serial Channel 0 Control Register
                orl     S0CON, #2       ; Serial Channel 0 Control Register
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #2
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C627:                              ; CODE XREF: code_C54D+7E↑j
                jnb     RAM_2F.5, code_C62D
                ljmp    code_C65B
; ---------------------------------------------------------------------------

code_C62D:                              ; CODE XREF: code_C54D:code_C627↑j
                mov     DPTR, #0F991h
                movx    A, @DPTR
                mov     B, A            ; B-Register
                inc     DPTR
                movx    A, @DPTR
                orl     A, B            ; B-Register
                jz      code_C641
                anl     S0CON, #0EFh    ; Serial Channel 0 Control Register
                mov     RAM_77, #5
                sjmp    code_C65B
; ---------------------------------------------------------------------------

code_C641:                              ; CODE XREF: code_C54D+EA↑j
                anl     S0CON, #0FEh    ; Serial Channel 0 Control Register
                orl     S0CON, #10h     ; Serial Channel 0 Control Register
                orl     IEN0, #10h      ; Interrupt Enable Register 0
                mov     RAM_77, #6
                sjmp    code_C65B
; ---------------------------------------------------------------------------

code_C64F:                              ; CODE XREF: code_C54D+AA↑j
                                        ; code_C54D+BC↑j
                mov     RAM_77, #3
                sjmp    code_C65B
; ---------------------------------------------------------------------------

code_C654:                              ; CODE XREF: code_C54D+C9↑j
                setb    P3.1            ; Port 3 (PDIR=0)
                mov     RAM_77, #0FCh
                sjmp    code_C65B
; ---------------------------------------------------------------------------

code_C65B:                              ; CODE XREF: code_C54D+3↑j
                                        ; code_C54D:code_C55C↑j ...
                ret
; End of function code_C54D


; =============== S U B R O U T I N E =======================================


code_C65C:                              ; CODE XREF: code_C69B+A9↓p
                                        ; code_C69B+F6↓p ...
                push    DPSEL           ; Data Pointer Select Register
                mov     DPSEL, #7       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                add     A, R2
                mov     R2, A
                mov     A, DPL          ; Data Pointer, Low Byte
                cjne    A, #0ACh, code_C678
                mov     A, DPH          ; Data Pointer, High Byte
                cjne    A, #0FBh, code_C678
                pop     DPSEL           ; Data Pointer Select Register
                pop     ACC             ; Accumulator
                pop     ACC             ; Accumulator
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C678:                              ; CODE XREF: code_C65C+B↑j
                                        ; code_C65C+10↑j
                pop     DPSEL           ; Data Pointer Select Register
                ret
; End of function code_C65C


; =============== S U B R O U T I N E =======================================


code_C67B:                              ; CODE XREF: code_C69B:code_CA09↓p
                                        ; code_CB61:code_CBDA↓p
                mov     A, R2
                cpl     A
                inc     A
                mov     DPSEL, #7       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                inc     DPTR
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     R1, DPH         ; Data Pointer, High Byte
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     R2, #0A8h
                mov     R3, #0FAh
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                mov     DPTR, #0F9A2h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                ret
; End of function code_C67B


; =============== S U B R O U T I N E =======================================


code_C69B:                              ; CODE XREF: code_C54D+3B↑p

; FUNCTION CHUNK AT CA24 SIZE 00000127 BYTES
; FUNCTION CHUNK AT CBDE SIZE 000000B7 BYTES

                jnb     RAM_28.1, code_C6C4
                jb      RAM_2F.4, code_C6C4
                jb      RAM_2F.5, code_C6C4
                mov     DPTR, #0F7BCh
                movx    A, @DPTR
                jnz     code_C6C4
                mov     DPTR, #0FCB6h
                movx    A, @DPTR
                jz      code_C6C4
                dec     A
                movx    @DPTR, A
                jnz     code_C6C4
                clr     A
                mov     RAM_2C, A
                mov     RAM_71, A
                mov     RAM_72, A
                mov     RAM_73, A
                mov     RAM_74, A
                mov     RAM_76, A
                anl     RAM_75, #0C0h

code_C6C4:                              ; CODE XREF: code_C69B↑j
                                        ; code_C69B+3↑j ...
                mov     DPTR, #0F9A0h
                movx    A, @DPTR
                mov     R0, A
                inc     DPTR
                movx    A, @DPTR
                mov     R1, A
                mov     R2, #2
                mov     R3, #0
                lcall   subtract_word   ; INPUT - R1:R0
                                        ;         R3:R2
                                        ;
                                        ; OUTPUT - R1:R0 = R1:R0 - R3:R2
                                        ;          A = R1
                                        ;
                                        ; R1 - high, R0 - low
                                        ; R3 - high, R2 - low
                jnc     code_C6D8
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C6D8:                              ; CODE XREF: code_C69B+38↑j
                mov     A, R1
                jz      code_C6DE
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C6DE:                              ; CODE XREF: code_C69B+3E↑j
                mov     A, R0
                mov     R3, A
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                inc     DPTR
                mov     R2, A
                mov     A, R0
                jz      code_C6EF

code_C6E9:                              ; CODE XREF: code_C69B+52↓j
                movx    A, @DPTR
                inc     DPTR
                add     A, R2
                mov     R2, A
                djnz    R0, code_C6E9

code_C6EF:                              ; CODE XREF: code_C69B+4C↑j
                movx    A, @DPTR
                add     A, R2
                jz      code_C6F6
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C6F6:                              ; CODE XREF: code_C69B+56↑j
                movx    @DPTR, A
                inc     DPTR
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     R2, #0
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                inc     DPTR
                jnz     code_C70D
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C70D:                              ; CODE XREF: code_C69B+6D↑j
                cjne    A, #1, code_C71E
                mov     A, R3
                cjne    A, #0, code_C716
                sjmp    code_C719
; ---------------------------------------------------------------------------

code_C716:                              ; CODE XREF: code_C69B+76↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C719:                              ; CODE XREF: code_C69B+79↑j
                mov     A, #0Bh
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C71E:                              ; CODE XREF: code_C69B:code_C70D↑j
                cjne    A, #11h, code_C72C
                mov     A, R3
                cjne    A, #1, code_C727
                sjmp    code_C72A
; ---------------------------------------------------------------------------

code_C727:                              ; CODE XREF: code_C69B+87↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C72A:                              ; CODE XREF: code_C69B+8A↑j
                sjmp    code_C739
; ---------------------------------------------------------------------------

code_C72C:                              ; CODE XREF: code_C69B:code_C71E↑j
                cjne    A, #12h, code_C74C
                mov     A, R3
                cjne    A, #2, code_C735
                sjmp    code_C738
; ---------------------------------------------------------------------------

code_C735:                              ; CODE XREF: code_C69B+95↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C738:                              ; CODE XREF: code_C69B+98↑j
                setb    C

code_C739:                              ; CODE XREF: code_C69B:code_C72A↑j
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                jnc     code_C741
                movx    A, @DPTR
                inc     DPTR
                mov     @R0, A

code_C741:                              ; CODE XREF: code_C69B+A1↑j
                mov     B, @R0          ; B-Register
                mov     A, R0
                lcall   code_C65C
                mov     A, B            ; B-Register
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C74C:                              ; CODE XREF: code_C69B:code_C72C↑j
                cjne    A, #13h, code_C753
                mov     R1, #1
                sjmp    code_C758
; ---------------------------------------------------------------------------

code_C753:                              ; CODE XREF: code_C69B:code_C74C↑j
                cjne    A, #15h, code_C763
                mov     R1, #0

code_C758:                              ; CODE XREF: code_C69B+B6↑j
                mov     A, R3
                cjne    A, #2, code_C75E
                sjmp    code_C761
; ---------------------------------------------------------------------------

code_C75E:                              ; CODE XREF: code_C69B+BE↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C761:                              ; CODE XREF: code_C69B+C1↑j
                sjmp    code_C779
; ---------------------------------------------------------------------------

code_C763:                              ; CODE XREF: code_C69B:code_C753↑j
                cjne    A, #14h, code_C76A
                mov     R1, #1
                sjmp    code_C76F
; ---------------------------------------------------------------------------

code_C76A:                              ; CODE XREF: code_C69B:code_C763↑j
                cjne    A, #16h, code_C7A2
                mov     R1, #0

code_C76F:                              ; CODE XREF: code_C69B+CD↑j
                mov     A, R3
                cjne    A, #3, code_C775
                sjmp    code_C778
; ---------------------------------------------------------------------------

code_C775:                              ; CODE XREF: code_C69B+D5↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C778:                              ; CODE XREF: code_C69B+D8↑j
                setb    C

code_C779:                              ; CODE XREF: code_C69B:code_C761↑j
                movx    A, @DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                jnc     code_C784
                movx    A, @DPTR
                inc     DPTR

code_C784:                              ; CODE XREF: code_C69B+E5↑j
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPH, R0         ; Data Pointer, High Byte
                mov     DPL, B          ; Data Pointer, Low Byte
                jnc     code_C78F
                movx    @DPTR, A

code_C78F:                              ; CODE XREF: code_C69B+F1↑j
                mov     A, DPL          ; Data Pointer, Low Byte
                lcall   code_C65C
                mov     A, DPH          ; Data Pointer, High Byte
                lcall   code_C65C
                lcall   code_CA13

code_C79C:                              ; CODE XREF: code_C69B+80↑j
                                        ; code_C69B+AE↑j ...
                lcall   code_C65C
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_C7A2:                              ; CODE XREF: code_C69B:code_C76A↑j
                cjne    A, #37h, code_C7D1 ; '7'
                mov     A, R3
                cjne    A, #2, code_C7AB
                sjmp    code_C7AE
; ---------------------------------------------------------------------------

code_C7AB:                              ; CODE XREF: code_C69B+10B↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C7AE:                              ; CODE XREF: code_C69B+10E↑j
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R1, A
                mov     DPTR, #0FAA8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     R2, #1
                lcall   read_bytes_from_eeprom ; INPUT: R0, R1, R2
                                        ;        R1 - slave address (contains page block), shifted right by one bit,
                                        ;        R0 - word address (byte offset in page block),
                                        ;        R2 - number of bytes to read
                                        ;        DPTR - XRAM address to store received data to
                                        ; OUTPUT: CY = 0 - success/all ok, 1 - any failure
                jnc     code_C7C7
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C7C7:                              ; CODE XREF: code_C69B+127↑j
                mov     DPTR, #0FAA8h
                mov     R2, #0
                mov     R3, #3
                ljmp    code_C925
; ---------------------------------------------------------------------------

code_C7D1:                              ; CODE XREF: code_C69B:code_C7A2↑j
                cjne    A, #38h, code_C807 ; '8'
                mov     A, R3
                cjne    A, #3, code_C7DA
                sjmp    code_C7DD
; ---------------------------------------------------------------------------

code_C7DA:                              ; CODE XREF: code_C69B+13A↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C7DD:                              ; CODE XREF: code_C69B+13D↑j
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R1, A
                movx    A, @DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                mov     DPTR, #0FAA8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, B            ; B-Register
                movx    @DPTR, A
                mov     R2, #1
                lcall   code_6A94
                jnc     code_C7FD
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C7FD:                              ; CODE XREF: code_C69B+15D↑j
                mov     DPTR, #0FAA8h
                mov     R2, #0
                mov     R3, #3
                ljmp    code_C925
; ---------------------------------------------------------------------------

code_C807:                              ; CODE XREF: code_C69B:code_C7D1↑j
                cjne    A, #21h, code_C82B ; '!'
                mov     A, R3
                cjne    A, #2, code_C810
                sjmp    code_C813
; ---------------------------------------------------------------------------

code_C810:                              ; CODE XREF: code_C69B+170↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C813:                              ; CODE XREF: code_C69B+173↑j
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R3, A
                mov     A, R0
                lcall   code_C65C
                mov     A, R3
                lcall   code_C65C

code_C821:                              ; CODE XREF: code_C69B+18B↓j
                mov     A, @R0
                inc     R0
                lcall   code_C65C
                djnz    R3, code_C821
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_C82B:                              ; CODE XREF: code_C69B:code_C807↑j
                cjne    A, #22h, code_C85E ; '"'
                mov     A, R3
                cjne    A, #3, code_C832

code_C832:                              ; CODE XREF: code_C69B+194↑j
                jnc     code_C837
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C837:                              ; CODE XREF: code_C69B:code_C832↑j
                subb    A, #2
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                cjne    A, B, code_C845 ; B-Register
                sjmp    code_C848
; ---------------------------------------------------------------------------

code_C845:                              ; CODE XREF: code_C69B+1A5↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C848:                              ; CODE XREF: code_C69B+1A8↑j
                mov     R3, A

code_C849:                              ; CODE XREF: code_C69B+1B8↓j
                movx    A, @DPTR
                inc     DPTR
                mov     @R0, A
                mov     B, A            ; B-Register
                mov     A, @R0
                inc     R0
                cjne    A, B, code_C859 ; B-Register
                djnz    R3, code_C849
                clr     A
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C859:                              ; CODE XREF: code_C69B+1B5↑j
                mov     A, #1
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C85E:                              ; CODE XREF: code_C69B:code_C82B↑j
                cjne    A, #23h, code_C865 ; '#'
                mov     R1, #1
                sjmp    code_C86A
; ---------------------------------------------------------------------------

code_C865:                              ; CODE XREF: code_C69B:code_C85E↑j
                cjne    A, #25h, code_C89D ; '%'
                mov     R1, #0

code_C86A:                              ; CODE XREF: code_C69B+1C8↑j
                mov     A, R3
                cjne    A, #3, code_C870
                sjmp    code_C873
; ---------------------------------------------------------------------------

code_C870:                              ; CODE XREF: code_C69B+1D0↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C873:                              ; CODE XREF: code_C69B+1D3↑j
                movx    A, @DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R3, A
                mov     A, B            ; B-Register
                lcall   code_C65C
                mov     A, R0
                lcall   code_C65C
                mov     A, R3
                lcall   code_C65C
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPH, R0         ; Data Pointer, High Byte
                mov     DPL, B          ; Data Pointer, Low Byte

code_C892:                              ; CODE XREF: code_C69B+1FD↓j
                lcall   code_CA13
                lcall   code_C65C
                djnz    R3, code_C892
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_C89D:                              ; CODE XREF: code_C69B:code_C865↑j
                cjne    A, #24h, code_C8A4 ; '$'
                mov     R1, #1
                sjmp    code_C8A9
; ---------------------------------------------------------------------------

code_C8A4:                              ; CODE XREF: code_C69B:code_C89D↑j
                cjne    A, #26h, code_C8ED ; '&'
                mov     R1, #0

code_C8A9:                              ; CODE XREF: code_C69B+207↑j
                mov     A, R3
                cjne    A, #4, code_C8AD

code_C8AD:                              ; CODE XREF: code_C69B+20F↑j
                jnc     code_C8B2
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C8B2:                              ; CODE XREF: code_C69B:code_C8AD↑j
                subb    A, #3
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R3, A
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                cjne    A, B, code_C8C3 ; B-Register
                sjmp    code_C8C6
; ---------------------------------------------------------------------------

code_C8C3:                              ; CODE XREF: code_C69B+223↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C8C6:                              ; CODE XREF: code_C69B+226↑j
                xch     A, R3
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPH, R0         ; Data Pointer, High Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPSEL, #0       ; Data Pointer Select Register

code_C8D1:                              ; CODE XREF: code_C69B+247↓j
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #1       ; Data Pointer Select Register
                movx    @DPTR, A
                mov     B, A            ; B-Register
                lcall   code_CA13
                mov     DPSEL, #0       ; Data Pointer Select Register
                cjne    A, B, code_C8E8 ; B-Register
                djnz    R3, code_C8D1
                clr     A
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C8E8:                              ; CODE XREF: code_C69B+244↑j
                mov     A, #1
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C8ED:                              ; CODE XREF: code_C69B:code_C8A4↑j
                cjne    A, #47h, code_C92F ; 'G'
                mov     A, R3
                cjne    A, #3, code_C8F6
                sjmp    code_C8F9
; ---------------------------------------------------------------------------

code_C8F6:                              ; CODE XREF: code_C69B+256↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C8F9:                              ; CODE XREF: code_C69B+259↑j
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R1, A
                movx    A, @DPTR
                inc     DPTR
                mov     R2, A
                mov     R3, A
                mov     DPTR, #0FAA8h
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     A, R2
                movx    @DPTR, A
                inc     DPTR
                lcall   read_bytes_from_eeprom ; INPUT: R0, R1, R2
                                        ;        R1 - slave address (contains page block), shifted right by one bit,
                                        ;        R0 - word address (byte offset in page block),
                                        ;        R2 - number of bytes to read
                                        ;        DPTR - XRAM address to store received data to
                                        ; OUTPUT: CY = 0 - success/all ok, 1 - any failure
                jnc     code_C917
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C917:                              ; CODE XREF: code_C69B+277↑j
                mov     DPTR, #0FAA8h
                mov     R2, #0
                mov     R0, #3

code_C91E:                              ; CODE XREF: code_C69B+288↓j
                movx    A, @DPTR
                inc     DPTR
                lcall   code_C65C
                djnz    R0, code_C91E

code_C925:                              ; CODE XREF: code_C69B+133↑j
                                        ; code_C69B+169↑j ...
                movx    A, @DPTR
                inc     DPTR
                lcall   code_C65C
                djnz    R3, code_C925
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_C92F:                              ; CODE XREF: code_C69B:code_C8ED↑j
                cjne    A, #48h, code_C958 ; 'H'
                mov     A, R3
                cjne    A, #4, code_C936

code_C936:                              ; CODE XREF: code_C69B+298↑j
                jnc     code_C93B
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C93B:                              ; CODE XREF: code_C69B:code_C936↑j
                subb    A, #3
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R1, A
                movx    A, @DPTR
                inc     DPTR
                cjne    A, B, code_C94C ; B-Register
                sjmp    code_C94F
; ---------------------------------------------------------------------------

code_C94C:                              ; CODE XREF: code_C69B+2AC↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C94F:                              ; CODE XREF: code_C69B+2AF↑j
                mov     R2, A
                lcall   code_6A94
                clr     A
                rlc     A
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C958:                              ; CODE XREF: code_C69B:code_C92F↑j
                cjne    A, #29h, code_C981 ; ')'
                mov     A, R3
                cjne    A, #4, code_C95F

code_C95F:                              ; CODE XREF: code_C69B+2C1↑j
                jnc     code_C964
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C964:                              ; CODE XREF: code_C69B:code_C95F↑j
                subb    A, #3
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R0, A
                movx    A, @DPTR
                inc     DPTR
                mov     R1, A
                movx    A, @DPTR
                inc     DPTR
                cjne    A, B, code_C975 ; B-Register
                sjmp    code_C978
; ---------------------------------------------------------------------------

code_C975:                              ; CODE XREF: code_C69B+2D5↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C978:                              ; CODE XREF: code_C69B+2D8↑j
                mov     R2, A
                lcall   compare_eeprom_and_xram
                clr     A
                rlc     A
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_C981:                              ; CODE XREF: code_C69B:code_C958↑j
                cjne    A, #30h, code_C9DC ; '0'
                mov     A, R3
                cjne    A, #2, code_C98A
                sjmp    code_C98D
; ---------------------------------------------------------------------------

code_C98A:                              ; CODE XREF: code_C69B+2EA↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C98D:                              ; CODE XREF: code_C69B+2ED↑j
                movx    A, @DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     R3, A
                clr     RAM_27.2

code_C996:                              ; CODE XREF: code_C69B+312↓j
                mov     MD0, #0Ah       ; Multiplication/Division Register 0
                mov     MD1, #1Ah       ; Multiplication/Division Register 1
                mov     MD4, B          ; Multiplication/Division Register 4
                mov     MD5, R3         ; Multiplication/Division Register 5
                nop
                nop
                nop
                nop
                mov     R0, MD0         ; Multiplication/Division Register 0
                mov     R1, MD1         ; Multiplication/Division Register 1
                mov     A, MD4          ; Multiplication/Division Register 4
                mov     A, MD5          ; Multiplication/Division Register 5
                jbc     RAM_27.2, code_C996
                setb    RAM_27.2
                clr     C
                clr     A
                subb    A, R0
                mov     R0, A
                clr     A
                subb    A, R1
                mov     R1, A
                setb    RAM_2F.6
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     A, #1
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0FFh
                movx    @DPTR, A
                inc     DPTR
                mov     A, R0
                movx    @DPTR, A
                inc     DPTR
                mov     A, R1
                movx    @DPTR, A
                inc     DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     A, #2
                mov     DPTR, #0F9A2h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ljmp    code_CA0C
; ---------------------------------------------------------------------------

code_C9DC:                              ; CODE XREF: code_C69B:code_C981↑j
                cjne    A, #41h, code_CA24 ; 'A'
                mov     A, R3
                cjne    A, #2, code_C9FE
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     S0BUF, #0Dh     ; Serial Channel 0 Buffer Register

code_C9E8:                              ; CODE XREF: code_C69B+34F↓j
                mov     A, S0CON        ; Serial Channel 0 Control Register
                jnb     ACC.1, code_C9E8 ; Accumulator
                anl     S0CON, #0FDh    ; Serial Channel 0 Control Register
                movx    A, @DPTR
                inc     DPTR
                push    ACC             ; Accumulator
                movx    A, @DPTR
                inc     DPTR
                push    ACC             ; Accumulator
                anl     S0CON, #0FCh    ; Serial Channel 0 Control Register
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_C9FE:                              ; CODE XREF: code_C65C+19↑j
                                        ; code_C69B+3A↑j ...
                mov     A, #0
                mov     DPTR, #0F9A2h
                movx    @DPTR, A
                inc     DPTR
                mov     A, #0
                movx    @DPTR, A
                ret
; ---------------------------------------------------------------------------

code_CA09:                              ; CODE XREF: code_C69B+104↑j
                                        ; code_C69B+18D↑j ...
                lcall   code_C67B

code_CA0C:                              ; CODE XREF: code_C69B+33E↑j
                mov     A, #4
                mov     DPTR, #0FCB6h
                movx    @DPTR, A
                ret
; End of function code_C69B


; =============== S U B R O U T I N E =======================================


code_CA13:                              ; CODE XREF: code_C69B+FE↑p
                                        ; code_C69B:code_C892↑p ...
                mov     A, DPH          ; Data Pointer, High Byte
                cjne    A, #0F4h, code_CA18

code_CA18:                              ; CODE XREF: code_CA13+2↑j
                jnc     code_CA21
                mov     A, R1
                jnz     code_CA21
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                ret
; ---------------------------------------------------------------------------

code_CA21:                              ; CODE XREF: code_CA13:code_CA18↑j
                                        ; code_CA13+8↑j
                movx    A, @DPTR
                inc     DPTR
                ret
; End of function code_CA13

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_C69B

code_CA24:                              ; CODE XREF: code_C69B:code_C9DC↑j
                cjne    A, #2, code_CA7E
                mov     A, R3
                cjne    A, #0, code_C9FE
                clr     A
                lcall   code_C65C
                mov     R1, #0
                mov     R3, #0

code_CA33:                              ; CODE XREF: code_C69B+3D6↓j
                mov     DPTR, #0F605h
                mov     A, R3
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                jz      code_CA6F
                mov     R0, A
                mov     A, R3
                mov     B, #4           ; B-Register
                mul     AB
                mov     DPTR, #63Ch
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                lcall   code_C65C
                mov     A, R0
                anl     A, #1Fh
                jz      code_CA63
                mov     A, #40h ; '@'

code_CA63:                              ; CODE XREF: code_C69B+3C4↑j
                orl     A, R0
                anl     A, #0E0h
                lcall   code_C65C
                inc     R1
                cjne    R1, #81h, code_CA6F
                sjmp    code_CA74
; ---------------------------------------------------------------------------

code_CA6F:                              ; CODE XREF: code_C69B+3A7↑j
                                        ; code_C69B+3CF↑j
                inc     R3
                mov     A, R3
                cjne    A, #53h, code_CA33 ; 'S'

code_CA74:                              ; CODE XREF: code_C69B+3D2↑j
                mov     A, R1
                mov     DPTR, #0FAA8h
                movx    @DPTR, A
                add     A, R2
                mov     R2, A
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_CA7E:                              ; CODE XREF: code_C69B:code_CA24↑j
                cjne    A, #51h, code_CA81 ; 'Q'

code_CA81:                              ; CODE XREF: code_C69B:code_CA7E↑j
                jc      code_CA90
                cjne    A, #54h, code_CA86 ; 'T'

code_CA86:                              ; CODE XREF: code_C69B+3E8↑j
                jnc     code_CA90
                clr     C
                subb    A, #51h ; 'Q'
                mov     DPTR, #7FB0h
                sjmp    code_CAA0
; ---------------------------------------------------------------------------

code_CA90:                              ; CODE XREF: code_C69B:code_CA81↑j
                                        ; code_C69B:code_CA86↑j
                cjne    A, #54h, code_CA93 ; 'T'

code_CA93:                              ; CODE XREF: code_C69B:code_CA90↑j
                jc      code_CABB
                cjne    A, #59h, code_CA98 ; 'Y'

code_CA98:                              ; CODE XREF: code_C69B+3FA↑j
                jnc     code_CABB
                clr     C
                subb    A, #54h ; 'T'
                mov     DPTR, #8000h

code_CAA0:                              ; CODE XREF: code_C69B+3F3↑j
                swap    A
                mov     B, A            ; B-Register
                mov     A, R3
                cjne    A, #0, code_CAA9
                sjmp    code_CAAC
; ---------------------------------------------------------------------------

code_CAA9:                              ; CODE XREF: code_C69B+409↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CAAC:                              ; CODE XREF: code_C69B+40C↑j
                mov     R3, #10h

code_CAAE:                              ; CODE XREF: code_C69B+41B↓j
                mov     A, B            ; B-Register
                movc    A, @A+DPTR
                lcall   code_C65C
                inc     B               ; B-Register
                djnz    R3, code_CAAE
                ljmp    code_CA09
; ---------------------------------------------------------------------------

code_CABB:                              ; CODE XREF: code_C69B:code_CA93↑j
                                        ; code_C69B:code_CA98↑j
                cjne    A, #60h, code_CACC ; '`'
                mov     A, R3
                cjne    A, #0, code_CAC4
                sjmp    code_CAC7
; ---------------------------------------------------------------------------

code_CAC4:                              ; CODE XREF: code_C69B+424↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CAC7:                              ; CODE XREF: code_C69B+427↑j
                mov     A, #0C3h
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_CACC:                              ; CODE XREF: code_C69B:code_CABB↑j
                cjne    A, #62h, code_CAD2 ; 'b'
                ljmp    code_CBDE
; ---------------------------------------------------------------------------

code_CAD2:                              ; CODE XREF: code_C69B:code_CACC↑j
                cjne    A, #63h, code_CAF4 ; 'c'
                mov     A, R3
                cjne    A, #0, code_CADB
                sjmp    code_CADE
; ---------------------------------------------------------------------------

code_CADB:                              ; CODE XREF: code_C69B+43B↑j
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CADE:                              ; CODE XREF: code_C69B+43E↑j
                mov     DPTR, #0FBB3h
                movx    A, @DPTR
                inc     DPTR
                jnz     code_CAE8
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CAE8:                              ; CODE XREF: code_C69B+448↑j
                mov     A, #4
                mov     DPTR, #0FCB6h
                movx    @DPTR, A
                mov     DPTR, #0FBB3h
                ljmp    code_CB6F
; ---------------------------------------------------------------------------

code_CAF4:                              ; CODE XREF: code_C69B:code_CAD2↑j
                mov     B, A            ; B-Register
                cjne    A, #64h, code_CAFC ; 'd'
                ljmp    code_CB10
; ---------------------------------------------------------------------------

code_CAFC:                              ; CODE XREF: code_C69B+45B↑j
                cjne    A, #61h, code_CB02 ; 'a'
                ljmp    code_CB10
; ---------------------------------------------------------------------------

code_CB02:                              ; CODE XREF: code_C69B:code_CAFC↑j
                cjne    A, #71h, code_CB08 ; 'q'
                ljmp    code_CB10
; ---------------------------------------------------------------------------

code_CB08:                              ; CODE XREF: code_C69B:code_CB02↑j
                cjne    A, #7Fh, code_CB0B

code_CB0B:                              ; CODE XREF: code_C69B:code_CB08↑j
                jnc     code_CB10
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CB10:                              ; CODE XREF: code_C69B+45E↑j
                                        ; code_C69B+464↑j ...
                mov     A, R3
                cjne    A, #1, code_CB14

code_CB14:                              ; CODE XREF: code_C69B+476↑j
                jnc     code_CB19
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CB19:                              ; CODE XREF: code_C69B:code_CB14↑j
                                        ; code_C69B:code_CB28↓j
                movx    A, @DPTR
                inc     DPTR
                jnz     code_CB20
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CB20:                              ; CODE XREF: code_C69B+480↑j
                cjne    A, #0C4h, code_CB23

code_CB23:                              ; CODE XREF: code_C69B:code_CB20↑j
                jc      code_CB28
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CB28:                              ; CODE XREF: code_C69B:code_CB23↑j
                djnz    R3, code_CB19
                mov     A, B            ; B-Register
                cjne    A, #64h, code_CB32 ; 'd'
                ljmp    code_CBB4
; ---------------------------------------------------------------------------

code_CB32:                              ; CODE XREF: code_C69B+491↑j
                cjne    A, #61h, code_CB3E ; 'a'
                mov     A, #4
                mov     DPTR, #0FCB6h
                movx    @DPTR, A
                ljmp    code_CB69
; ---------------------------------------------------------------------------

code_CB3E:                              ; CODE XREF: code_C69B:code_CB32↑j
                cjne    A, #71h, code_CB46 ; 'q'
                setb    RAM_2F.4
                ljmp    code_CB61
; ---------------------------------------------------------------------------

code_CB46:                              ; CODE XREF: code_C69B:code_CB3E↑j
                setb    RAM_2F.5
                ljmp    code_C9FE
; END OF FUNCTION CHUNK FOR code_C69B

; =============== S U B R O U T I N E =======================================


code_CB4B:                              ; CODE XREF: code_C54D:code_C59E↑p
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                inc     DPTR
                clr     C
                subb    A, #7Fh
                jz      code_CB61
                dec     A
                cjne    A, RAM_6D, code_CB5E
                sjmp    code_CB61
; ---------------------------------------------------------------------------

code_CB5E:                              ; CODE XREF: code_CB4B+E↑j
                ljmp    code_C9FE
; End of function code_CB4B


; =============== S U B R O U T I N E =======================================


code_CB61:                              ; CODE XREF: code_C54D:code_C593↑p
                                        ; code_C69B+4A8↑j ...
                mov     R2, #0
                mov     DPSEL, #7       ; Data Pointer Select Register
                mov     DPTR, #0FAA8h

code_CB69:                              ; CODE XREF: code_C69B+4A0↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F9A5h

code_CB6F:                              ; CODE XREF: code_C69B+456↑j
                                        ; code_CB61+47↓j ...
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                jz      code_CBDA
                dec     A
                mov     B, #3           ; B-Register
                mul     AB
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPTR, #100h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     R0, A
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                jz      code_CBAA
                mov     DPL, R0         ; Data Pointer, Low Byte
                mov     DPH, A          ; Data Pointer, High Byte
                mov     R1, #0

code_CB9F:                              ; CODE XREF: code_CB61+44↓j
                lcall   code_CA13
                lcall   code_C65C
                djnz    B, code_CB9F    ; B-Register
                sjmp    code_CB6F
; ---------------------------------------------------------------------------

code_CBAA:                              ; CODE XREF: code_CB61+36↑j
                                        ; code_CB61+4E↓j
                mov     A, @R0
                lcall   code_C65C
                inc     R0
                djnz    B, code_CBAA    ; B-Register
                sjmp    code_CB6F
; ---------------------------------------------------------------------------

code_CBB4:                              ; CODE XREF: code_C69B+494↑j
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPTR, #0FBB3h
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F9A5h

code_CBC0:                              ; CODE XREF: code_CB61+6F↓j
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #1       ; Data Pointer Select Register
                movx    @DPTR, A
                mov     B, A            ; B-Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                cjne    A, B, code_CBD5 ; B-Register
                jnz     code_CBC0
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_CBD5:                              ; CODE XREF: code_CB61+6C↑j
                mov     A, #1
                ljmp    code_C79C
; ---------------------------------------------------------------------------

code_CBDA:                              ; CODE XREF: code_CB61+13↑j
                lcall   code_C67B
                ret
; End of function code_CB61

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR code_C69B

code_CBDE:                              ; CODE XREF: code_C69B+434↑j
                mov     A, R3
                cjne    A, #2, code_CBE2

code_CBE2:                              ; CODE XREF: code_C69B+544↑j
                jnc     code_CBE7
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CBE7:                              ; CODE XREF: code_C69B:code_CBE2↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F9A5h

code_CBED:                              ; CODE XREF: code_C69B+597↓j
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                jnz     code_CBF7
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CBF7:                              ; CODE XREF: code_C69B+557↑j
                cjne    A, #0C4h, code_CBFA

code_CBFA:                              ; CODE XREF: code_C69B:code_CBF7↑j
                jc      code_CBFF
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CBFF:                              ; CODE XREF: code_C69B:code_CBFA↑j
                dec     A
                mov     B, #3           ; B-Register
                mul     AB
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPTR, #100h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                mov     DPSEL, #0       ; Data Pointer Select Register
                inc     B               ; B-Register
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, #0
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R3
                clr     C
                subb    A, B            ; B-Register
                jnc     code_CC31
                ljmp    code_C9FE
; ---------------------------------------------------------------------------

code_CC31:                              ; CODE XREF: code_C69B+591↑j
                mov     R3, A
                jnz     code_CBED
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0F9A5h

code_CC3A:                              ; CODE XREF: code_C69B+5DF↓j
                                        ; code_C69B+5F0↓j
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                jz      code_CC8F
                dec     A
                mov     B, #3           ; B-Register
                mul     AB
                mov     DPSEL, #1       ; Data Pointer Select Register
                mov     DPTR, #100h
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     B, A            ; B-Register
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     R0, A
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                jz      code_CC7C
                mov     DPL, R0         ; Data Pointer, Low Byte
                mov     DPH, A          ; Data Pointer, High Byte

code_CC68:                              ; CODE XREF: code_C69B+5DC↓j
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #1       ; Data Pointer Select Register
                movx    @DPTR, A
                mov     R1, A
                movx    A, @DPTR
                inc     DPTR
                cjne    A, RAM_1, code_CC8D
                djnz    B, code_CC68    ; B-Register
                sjmp    code_CC3A
; ---------------------------------------------------------------------------

code_CC7C:                              ; CODE XREF: code_C69B+5C7↑j
                                        ; code_C69B+5ED↓j
                mov     DPSEL, #0       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     @R0, A
                mov     R1, A
                mov     A, @R0
                inc     R0
                cjne    A, RAM_1, code_CC8D
                djnz    B, code_CC7C    ; B-Register
                sjmp    code_CC3A
; ---------------------------------------------------------------------------

code_CC8D:                              ; CODE XREF: code_C69B+5D9↑j
                                        ; code_C69B+5EA↑j
                mov     A, #1

code_CC8F:                              ; CODE XREF: code_C69B+5A4↑j
                lcall   code_C65C
                ljmp    code_CA09
; END OF FUNCTION CHUNK FOR code_C69B
; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh

; =============== S U B R O U T I N E =======================================


code_D000:                              ; CODE XREF: code_C54D+18↑p
                clr     A

code_D001:                              ; CODE XREF: code_C54D:code_C56A↑p
                mov     DPTR, #0FE1Fh
; End of function code_D000

                movx    @DPTR, A
                mov     DPTR, #0F9A0h
                movx    A, @DPTR
                add     A, #0FDh
                jc      code_D010
                ljmp    code_D130
; ---------------------------------------------------------------------------

code_D010:                              ; CODE XREF: code:D00B↑j
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                jb      ACC.7, code_D01A ; Accumulator
                ljmp    code_D130
; ---------------------------------------------------------------------------

code_D01A:                              ; CODE XREF: code:D014↑j
                mov     A, #3
                mov     DPTR, #0FE26h
                movx    @DPTR, A
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                anl     A, #3Fh
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                movx    A, @DPTR
                jnz     code_D03B
                mov     A, #4
                mov     DPTR, #0FE26h
                movx    @DPTR, A
                mov     DPTR, #0F9A7h
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                movx    @DPTR, A

code_D03B:                              ; CODE XREF: code:D02B↑j
                mov     R4, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, R4
                inc     A
                mov     DPTR, #0FE21h
                movx    @DPTR, A
                mov     R4, A
                mov     DPTR, #0F9A0h
                movx    A, @DPTR
                xrl     A, R4
                jz      code_D051
                ljmp    code_D130
; ---------------------------------------------------------------------------

code_D051:                              ; CODE XREF: code:D04C↑j
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE25h
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE20h
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R6, A
                mov     R7, #0

code_D06C:                              ; CODE XREF: code:D095↓j
                mov     DPTR, #0FE21h
                movx    A, @DPTR
                add     A, #0FFh
                mov     R4, A
                clr     A
                addc    A, #0FFh
                mov     R5, A
                mov     A, R7
                mov     R3, #0
                mov     R2, A
                mov     A, R4
                setb    C
                subb    A, R2
                mov     A, R3
                xrl     A, #80h
                xch     A, R5
                xrl     A, #80h
                subb    A, R5
                jc      code_D097
                mov     A, R7
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                add     A, R6
                mov     R6, A
                inc     R7
                sjmp    code_D06C
; ---------------------------------------------------------------------------

code_D097:                              ; CODE XREF: code:D085↑j
                mov     A, R6
                mov     DPTR, #0FE20h
                movx    @DPTR, A
                mov     A, R2
                mov     DPTR, #0FE1Fh
                movx    @DPTR, A
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                dec     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                xrl     A, R6
                jz      code_D0B4
                sjmp    code_D130
; ---------------------------------------------------------------------------

code_D0B4:                              ; CODE XREF: code:D0B0↑j
                mov     DPTR, #0F9A5h
                movx    A, @DPTR
                xrl     A, #10h
                jz      code_D0BE
                sjmp    code_D130
; ---------------------------------------------------------------------------

code_D0BE:                              ; CODE XREF: code:D0BA↑j
                mov     DPTR, #0F9A4h
                movx    A, @DPTR
                jnb     ACC.0, code_D0C7 ; Accumulator
                sjmp    code_D0C7
; ---------------------------------------------------------------------------

code_D0C7:                              ; CODE XREF: code:D0C2↑j
                                        ; code:D0C5↑j
                mov     DPTR, #0FE25h
                movx    A, @DPTR
                cjne    A, #81h, code_D0D2
                lcall   code_D4FB
                ret
; ---------------------------------------------------------------------------

code_D0D2:                              ; CODE XREF: code:D0CB↑j
                cjne    A, #82h, code_D0D9
                lcall   code_D516
                ret
; ---------------------------------------------------------------------------

code_D0D9:                              ; CODE XREF: code:code_D0D2↑j
                cjne    A, #10h, code_D0E0
                lcall   code_D52E
                ret
; ---------------------------------------------------------------------------

code_D0E0:                              ; CODE XREF: code:code_D0D9↑j
                cjne    A, #20h, code_D0E7 ; ' '
                lcall   code_D5C7
                ret
; ---------------------------------------------------------------------------

code_D0E7:                              ; CODE XREF: code:code_D0E0↑j
                cjne    A, #3Eh, code_D0EE ; '>'
                lcall   code_D5E4
                ret
; ---------------------------------------------------------------------------

code_D0EE:                              ; CODE XREF: code:code_D0E7↑j
                cjne    A, #1Ah, code_D0F5
                lcall   code_D5EE
                ret
; ---------------------------------------------------------------------------

code_D0F5:                              ; CODE XREF: code:code_D0EE↑j
                cjne    A, #21h, code_D0FC ; '!'
                lcall   code_D62A
                ret
; ---------------------------------------------------------------------------

code_D0FC:                              ; CODE XREF: code:code_D0F5↑j
                cjne    A, #23h, code_D103 ; '#'
                lcall   code_DB43
                ret
; ---------------------------------------------------------------------------

code_D103:                              ; CODE XREF: code:code_D0FC↑j
                cjne    A, #2Ch, code_D10A ; ','
                lcall   code_D894
                ret
; ---------------------------------------------------------------------------

code_D10A:                              ; CODE XREF: code:code_D103↑j
                cjne    A, #3Bh, code_D111 ; ';'
                lcall   code_D65D
                ret
; ---------------------------------------------------------------------------

code_D111:                              ; CODE XREF: code:code_D10A↑j
                cjne    A, #18h, code_D118
                lcall   code_DC0B
                ret
; ---------------------------------------------------------------------------

code_D118:                              ; CODE XREF: code:code_D111↑j
                cjne    A, #14h, code_D11F
                lcall   code_DC5E
                ret
; ---------------------------------------------------------------------------

code_D11F:                              ; CODE XREF: code:code_D118↑j
                cjne    A, #30h, code_D126 ; '0'
                lcall   code_DCAE
                ret
; ---------------------------------------------------------------------------

code_D126:                              ; CODE XREF: code:code_D11F↑j
                mov     A, #11h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; ---------------------------------------------------------------------------

code_D130:                              ; CODE XREF: code:D00D↑j
                                        ; code:D017↑j ...
                clr     A
                mov     DPTR, #0F9A2h
                movx    @DPTR, A
                ret

; =============== S U B R O U T I N E =======================================


code_D136:                              ; CODE XREF: code_D250+100↓p
                                        ; code_D387+170↓p ...
                mov     DPTR, #0FE25h
                movx    A, @DPTR
                orl     A, #40h
                mov     DPTR, #0FAABh
                movx    @DPTR, A
                lcall   code_D195
                ret
; End of function code_D136


; =============== S U B R O U T I N E =======================================


code_D144:                              ; CODE XREF: code:D12C↑p
                                        ; code_D52E:code_D5C3↓p ...
                mov     A, #3
                mov     DPTR, #0FE03h
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, #7Fh
                movx    @DPTR, A
                mov     DPTR, #0FE25h
                movx    A, @DPTR
                mov     DPTR, #0FE03h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE28h
                movx    A, @DPTR
                mov     DPTR, #0FE03h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     A, #3
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D195
                ret
; End of function code_D144


; =============== S U B R O U T I N E =======================================


code_D195:                              ; CODE XREF: code_D136+A↑p
                                        ; code_D144+4D↑p
                clr     A
                mov     DPTR, #0FE00h
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, #80h
                movx    @DPTR, A
                mov     DPTR, #0F9A6h
                movx    A, @DPTR
                mov     DPTR, #0FE00h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0F9A5h
                movx    A, @DPTR
                mov     DPTR, #0FE00h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                add     A, #0C0h
                jc      code_D1ED
                movx    A, @DPTR
                mov     DPTR, #0FAA8h
                mov     R4, A
                movx    A, @DPTR
                orl     A, R4
                movx    @DPTR, A
                sjmp    code_D202
; ---------------------------------------------------------------------------

code_D1ED:                              ; CODE XREF: code_D195+4C↑j
                movx    A, @DPTR
                mov     DPTR, #0FE00h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A

code_D202:                              ; CODE XREF: code_D195+56↑j
                mov     DPTR, #0FE00h
                movx    A, @DPTR
                add     A, R4
                inc     DPTR
                inc     DPTR
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE01h
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R6, A
                mov     R7, #0

code_D213:                              ; CODE XREF: code_D195+94↓j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                setb    C
                subb    A, R7
                jc      code_D22B
                mov     A, R7
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                add     A, R6
                mov     R6, A
                inc     R7
                sjmp    code_D213
; ---------------------------------------------------------------------------

code_D22B:                              ; CODE XREF: code_D195+84↑j
                mov     A, R6
                mov     DPTR, #0FE01h
                movx    @DPTR, A
                mov     A, R7
                mov     DPTR, #0FE00h
                movx    @DPTR, A
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R6
                movx    @DPTR, A
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     DPTR, #0F9A2h
                movx    @DPTR, A
                ret
; End of function code_D195


; =============== S U B R O U T I N E =======================================


code_D250:                              ; CODE XREF: code_D5EE+16↓p
                mov     A, #5
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                movx    A, @DPTR
                inc     A
                inc     DPTR
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                mov     A, #90h
                mov     DPTR, #0FE03h
                movx    @DPTR, A

code_D265:                              ; CODE XREF: code_D250+EB↓j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                add     A, #60h ; '`'
                jnc     code_D270
                ljmp    code_D33E
; ---------------------------------------------------------------------------

code_D270:                              ; CODE XREF: code_D250+1B↑j
                movx    A, @DPTR
                mov     R4, A
                lcall   code_D354
                mov     DPTR, #0FE07h
                mov     A, R5
                movx    @DPTR, A
                inc     DPTR
                mov     A, R4
                movx    @DPTR, A
                inc     A
                orl     A, R5
                jnz     code_D284
                ljmp    code_D335
; ---------------------------------------------------------------------------

code_D284:                              ; CODE XREF: code_D250+2F↑j
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                inc     A
                mov     R4, A
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     R5, A
                mov     A, R4
                add     A, #1
                xch     A, R4
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R5
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Eh
                mov     R7, A
                movc    A, @A+DPTR
                xch     A, R7
                inc     A
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                mov     A, R4
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                lcall   code_E687
                mov     DPTR, #0FE0Dh
                movx    A, @DPTR
                swap    A
                anl     A, #0F0h
                orl     A, #0Fh
                mov     DPTR, #0FE06h
                movx    @DPTR, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     R6, A
                inc     DPTR
                movx    A, @DPTR
                mov     R7, A
                mov     DPTR, #0FE0Ch
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                movx    @DPTR, A

code_D2E9:                              ; CODE XREF: code_D250+C1↓j
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                jz      code_D313
                add     A, #0F1h
                jnc     code_D2F9
                movx    A, @DPTR
                add     A, #0F1h
                movx    @DPTR, A
                sjmp    code_D302
; ---------------------------------------------------------------------------

code_D2F9:                              ; CODE XREF: code_D250+A1↑j
                mov     A, R7
                anl     A, #0F0h
                mov     R7, A
                movx    A, @DPTR
                add     A, R7
                mov     R7, A
                clr     A
                movx    @DPTR, A

code_D302:                              ; CODE XREF: code_D250+A7↑j
                mov     A, R6
                add     A, #1
                xch     A, R6
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R7
                movx    @DPTR, A
                sjmp    code_D2E9
; ---------------------------------------------------------------------------

code_D313:                              ; CODE XREF: code_D250+9D↑j
                mov     A, R6
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                mov     A, R7
                inc     DPTR
                movx    @DPTR, A
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                mov     R7, A
                mov     A, R6
                clr     C
                subb    A, R7
                mov     R4, A
                mov     A, R7
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     A, R6
                mov     DPTR, #0FE04h
                movx    @DPTR, A

code_D335:                              ; CODE XREF: code_D250+31↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                ljmp    code_D265
; ---------------------------------------------------------------------------

code_D33E:                              ; CODE XREF: code_D250+1D↑j
                mov     DPTR, #0FE2Eh
                movx    A, @DPTR
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                add     A, #0FDh
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D250


; =============== S U B R O U T I N E =======================================


code_D354:                              ; CODE XREF: code_D250+22↑p
                                        ; code_D5EE+1B↓p ...
                mov     A, R4
                mov     DPTR, #0FE01h
                movx    @DPTR, A
                mov     R7, #0

code_D35B:                              ; CODE XREF: code_D354+27↓j
                mov     DPTR, #34Bh
                clr     A
                movc    A, @A+DPTR
                setb    C
                subb    A, R7
                jc      code_D37D
                mov     A, R7
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Ch
                movc    A, @A+DPTR
                mov     R4, A
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                xrl     A, R4
                jnz     code_D37A
                mov     A, R7
                mov     R5, #0
                mov     R4, A
                ret
; ---------------------------------------------------------------------------

code_D37A:                              ; CODE XREF: code_D354+1F↑j
                inc     R7
                sjmp    code_D35B
; ---------------------------------------------------------------------------

code_D37D:                              ; CODE XREF: code_D354+E↑j
                mov     A, R7
                mov     DPTR, #0FE00h
                movx    @DPTR, A
                clr     A
                mov     R5, A
                dec     A
                mov     R4, A
                ret
; End of function code_D354


; =============== S U B R O U T I N E =======================================


code_D387:                              ; CODE XREF: code_D5EE+2E↓p
                                        ; code_D62A+2F↓p ...
                mov     A, R4
                mov     DPTR, #0FE0Fh
                movx    @DPTR, A
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Eh
                mov     R7, A
                movc    A, @A+DPTR
                xch     A, R7
                inc     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE08h
                xch     A, R7
                movx    @DPTR, A
                inc     DPTR
                xch     A, R7
                movx    @DPTR, A
                mov     A, R4
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Ch
                movc    A, @A+DPTR
                mov     DPTR, #0FE06h
                movx    @DPTR, A
                add     A, #10h
                jnc     code_D3C0
                movx    A, @DPTR
                add     A, #6
                jc      code_D3C0
                mov     DPTR, #0FE23h
                movx    A, @DPTR
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                sjmp    code_D3D0
; ---------------------------------------------------------------------------

code_D3C0:                              ; CODE XREF: code_D387+28↑j
                                        ; code_D387+2D↑j
                mov     DPTR, #0FE0Fh
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #350h
                movc    A, @A+DPTR
                mov     DPTR, #0FE04h
                movx    @DPTR, A

code_D3D0:                              ; CODE XREF: code_D387+37↑j
                mov     A, #4
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE03h
                movx    @DPTR, A

code_D3F3:                              ; CODE XREF: code_D387+166↓j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     R4, A
                inc     DPTR
                movx    A, @DPTR
                setb    C
                subb    A, R4
                jnc     code_D401
                ljmp    code_D4F0
; ---------------------------------------------------------------------------

code_D401:                              ; CODE XREF: code_D387+75↑j
                mov     A, #2
                mov     DPTR, #0FE07h
                movx    @DPTR, A
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                add     A, #10h
                jnc     code_D418
                movx    A, @DPTR
                add     A, #6
                jc      code_D418
                mov     A, #1
                inc     DPTR
                movx    @DPTR, A

code_D418:                              ; CODE XREF: code_D387+86↑j
                                        ; code_D387+8B↑j
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE0Ah
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                cjne    A, #2, code_D436
                inc     DPTR
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_D440
; ---------------------------------------------------------------------------

code_D436:                              ; CODE XREF: code_D387+9F↑j
                inc     DPTR
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR

code_D440:                              ; CODE XREF: code_D387+AD↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                jnz     code_D451
                lcall   code_E665
                sjmp    code_D465
; ---------------------------------------------------------------------------

code_D451:                              ; CODE XREF: code_D387+C3↑j
                dec     A
                jnz     code_D459
                lcall   code_E677
                sjmp    code_D465
; ---------------------------------------------------------------------------

code_D459:                              ; CODE XREF: code_D387+CB↑j
                movx    A, @DPTR
                cjne    A, #2, code_D462
                lcall   code_E687
                sjmp    code_D465
; ---------------------------------------------------------------------------

code_D462:                              ; CODE XREF: code_D387+D3↑j
                lcall   code_E698

code_D465:                              ; CODE XREF: code_D387+C8↑j
                                        ; code_D387+D0↑j ...
                mov     DPTR, #0FE0Dh
                movx    A, @DPTR
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE0Ah
                movx    A, @DPTR
                cjne    A, #2, code_D497
                mov     DPTR, #0FE0Bh
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_D4A3
; ---------------------------------------------------------------------------

code_D497:                              ; CODE XREF: code_D387+FE↑j
                mov     DPTR, #0FE0Bh
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR

code_D4A3:                              ; CODE XREF: code_D387+10E↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     RAM_2, A
                mov     DPTR, #0FE0Ah
                movx    A, @DPTR
                jnz     code_D4B7
                lcall   code_E665
                sjmp    code_D4CE
; ---------------------------------------------------------------------------

code_D4B7:                              ; CODE XREF: code_D387+129↑j
                dec     A
                jnz     code_D4BF
                lcall   code_E677
                sjmp    code_D4CE
; ---------------------------------------------------------------------------

code_D4BF:                              ; CODE XREF: code_D387+131↑j
                mov     DPTR, #0FE0Ah
                movx    A, @DPTR
                cjne    A, #2, code_D4CB
                lcall   code_E687
                sjmp    code_D4CE
; ---------------------------------------------------------------------------

code_D4CB:                              ; CODE XREF: code_D387+13C↑j
                lcall   code_E698

code_D4CE:                              ; CODE XREF: code_D387+12E↑j
                                        ; code_D387+136↑j ...
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                add     A, #5
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                ljmp    code_D3F3
; ---------------------------------------------------------------------------

code_D4F0:                              ; CODE XREF: code_D387+77↑j
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                add     A, #0FDh
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D387


; =============== S U B R O U T I N E =======================================


code_D4FB:                              ; CODE XREF: code:D0CE↑p
                mov     A, #6Bh ; 'k'
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     A, #8Fh
                mov     DPTR, #0FAADh
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE23h
                movx    @DPTR, A
                mov     A, #3
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D4FB


; =============== S U B R O U T I N E =======================================


code_D516:                              ; CODE XREF: code:D0D5↑p
                clr     A
                mov     DPTR, #0FE23h
                movx    @DPTR, A
                inc     A
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D516

; ---------------------------------------------------------------------------
                db  74h ; t
                db  10h
                db  90h
                db 0FEh
                db  28h ; (
                db 0F0h
                db  12h
                db 0D1h
                db  44h ; D
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_D52E:                              ; CODE XREF: code:D0DC↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                mov     R4, A
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE22h
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE27h
                movx    @DPTR, A
                mov     DPTR, #0FE2Ah
                movx    A, @DPTR
                jnb     ACC.0, code_D561 ; Accumulator
                sjmp    code_D5A9
; ---------------------------------------------------------------------------

code_D561:                              ; CODE XREF: code_D52E+2E↑j
                mov     DPTR, #0FE22h
                movx    A, @DPTR
                xrl     A, #81h
                jz      code_D576
                movx    A, @DPTR
                xrl     A, #82h
                jz      code_D576
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                sjmp    code_D5C3
; ---------------------------------------------------------------------------

code_D576:                              ; CODE XREF: code_D52E+39↑j
                                        ; code_D52E+3E↑j
                mov     DPTR, #0FE27h
                movx    A, @DPTR
                dec     A
                jz      code_D599
                movx    A, @DPTR
                xrl     A, #2
                jz      code_D599
                movx    A, @DPTR
                xrl     A, #3
                jz      code_D599
                movx    A, @DPTR
                xrl     A, #4
                jz      code_D599
                movx    A, @DPTR
                xrl     A, #5
                jz      code_D599
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                sjmp    code_D5C3
; ---------------------------------------------------------------------------

code_D599:                              ; CODE XREF: code_D52E+4D↑j
                                        ; code_D52E+52↑j ...
                lcall   code_DD8D
                mov     DPTR, #0FE2Ah
                movx    A, @DPTR
                jnb     ACC.0, code_D5A5 ; Accumulator
                sjmp    code_D5C3
; ---------------------------------------------------------------------------

code_D5A5:                              ; CODE XREF: code_D52E+72↑j
                movx    A, @DPTR
                orl     A, #1
                movx    @DPTR, A

code_D5A9:                              ; CODE XREF: code_D52E+31↑j
                mov     DPTR, #0FE22h
                movx    A, @DPTR
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     DPTR, #0FE27h
                movx    A, @DPTR
                mov     DPTR, #0FAADh
                movx    @DPTR, A
                mov     A, #3
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; ---------------------------------------------------------------------------

code_D5C3:                              ; CODE XREF: code_D52E+46↑j
                                        ; code_D52E+69↑j ...
                lcall   code_D144
                ret
; End of function code_D52E


; =============== S U B R O U T I N E =======================================


code_D5C7:                              ; CODE XREF: code:D0E3↑p
                mov     DPTR, #0FE2Ah
                movx    A, @DPTR
                jnb     ACC.0, code_D5D0 ; Accumulator
                sjmp    code_D5D0
; ---------------------------------------------------------------------------

code_D5D0:                              ; CODE XREF: code_D5C7+4↑j
                                        ; code_D5C7+7↑j
                mov     A, #1
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D5C7

; ---------------------------------------------------------------------------
                db  74h ; t
                db  10h
                db  90h
                db 0FEh
                db  28h ; (
                db 0F0h
                db  12h
                db 0D1h
                db  44h ; D
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_D5E4:                              ; CODE XREF: code:D0EA↑p
                mov     A, #1
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D5E4


; =============== S U B R O U T I N E =======================================


code_D5EE:                              ; CODE XREF: code:D0F1↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Eh
                movx    @DPTR, A
                cjne    A, #81h, code_D608
                lcall   code_D250
                ret
; ---------------------------------------------------------------------------

code_D608:                              ; CODE XREF: code_D5EE+13↑j
                mov     R4, A
                lcall   code_D354
                mov     DPTR, #0FE10h
                mov     A, R5
                movx    @DPTR, A
                inc     DPTR
                mov     A, R4
                movx    @DPTR, A
                inc     A
                orl     A, R5
                jnz     code_D61A
                sjmp    code_D620
; ---------------------------------------------------------------------------

code_D61A:                              ; CODE XREF: code_D5EE+28↑j
                movx    A, @DPTR
                mov     R4, A
                lcall   code_D387
                ret
; ---------------------------------------------------------------------------

code_D620:                              ; CODE XREF: code_D5EE+2A↑j
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; End of function code_D5EE


; =============== S U B R O U T I N E =======================================


code_D62A:                              ; CODE XREF: code:D0F8↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Eh
                movx    @DPTR, A
                mov     R4, A
                lcall   code_D354
                mov     DPTR, #0FE10h
                mov     A, R5
                movx    @DPTR, A
                inc     DPTR
                mov     A, R4
                movx    @DPTR, A
                inc     A
                orl     A, R5
                jnz     code_D657
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; ---------------------------------------------------------------------------

code_D657:                              ; CODE XREF: code_D62A+21↑j
                movx    A, @DPTR
                mov     R4, A
                lcall   code_D387
                ret
; End of function code_D62A


; =============== S U B R O U T I N E =======================================


code_D65D:                              ; CODE XREF: code:D10D↑p
                mov     A, #2
                mov     DPTR, #0FE07h
                movx    @DPTR, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE06h
                movx    @DPTR, A
                mov     R4, A
                lcall   code_D354
                mov     DPTR, #0FE08h
                mov     A, R5
                movx    @DPTR, A
                inc     DPTR
                mov     A, R4
                movx    @DPTR, A
                inc     A
                orl     A, R5
                jnz     code_D690
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; ---------------------------------------------------------------------------

code_D690:                              ; CODE XREF: code_D65D+27↑j
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Eh
                mov     R5, A
                movc    A, @A+DPTR
                xch     A, R5
                inc     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE0Ah
                xch     A, R5
                movx    @DPTR, A
                inc     DPTR
                xch     A, R5
                movx    @DPTR, A
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                add     A, #10h
                jnc     code_D6C2
                movx    A, @DPTR
                add     A, #6
                jc      code_D6C2
                mov     DPTR, #0FE23h
                movx    A, @DPTR
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                mov     A, #1
                mov     DPTR, #0FE07h
                movx    @DPTR, A
                sjmp    code_D6D2
; ---------------------------------------------------------------------------

code_D6C2:                              ; CODE XREF: code_D65D+4E↑j
                                        ; code_D65D+53↑j
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #350h
                movc    A, @A+DPTR
                mov     DPTR, #0FE04h
                movx    @DPTR, A

code_D6D2:                              ; CODE XREF: code_D65D+63↑j
                mov     A, #2
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                clr     A
                movx    @DPTR, A
                inc     DPTR
                movx    @DPTR, A

code_D6DF:                              ; CODE XREF: code_D65D:code_D771↓j
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                mov     R5, #0
                mov     R4, A
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                clr     C
                subb    A, R4
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                xrl     A, #80h
                xch     A, R5
                xrl     A, #80h
                xch     A, R5
                subb    A, R5
                jnc     code_D774
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE0Ch
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                cjne    A, #2, code_D720
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                inc     DPTR
                mov     R4, A
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                add     A, R4
                sjmp    code_D733
; ---------------------------------------------------------------------------

code_D720:                              ; CODE XREF: code_D65D+AA↑j
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                inc     DPTR
                mov     R4, A
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR
                add     A, R4

code_D733:                              ; CODE XREF: code_D65D+C1↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                jnz     code_D744
                lcall   code_E665
                sjmp    code_D758
; ---------------------------------------------------------------------------

code_D744:                              ; CODE XREF: code_D65D+E0↑j
                dec     A
                jnz     code_D74C
                lcall   code_E677
                sjmp    code_D758
; ---------------------------------------------------------------------------

code_D74C:                              ; CODE XREF: code_D65D+E8↑j
                movx    A, @DPTR
                cjne    A, #2, code_D755
                lcall   code_E687
                sjmp    code_D758
; ---------------------------------------------------------------------------

code_D755:                              ; CODE XREF: code_D65D+F0↑j
                lcall   code_E698

code_D758:                              ; CODE XREF: code_D65D+E5↑j
                                        ; code_D65D+ED↑j ...
                mov     DPTR, #0FE0Fh
                movx    A, @DPTR
                mov     DPTR, #0FE05h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                jnz     code_D771
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A

code_D771:                              ; CODE XREF: code_D65D+10F↑j
                ljmp    code_D6DF
; ---------------------------------------------------------------------------

code_D774:                              ; CODE XREF: code_D65D+9A↑j
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                mov     DPTR, #0FE05h
                mov     R4, A
                movx    A, @DPTR
                clr     C
                subb    A, R4
                movx    @DPTR, A
                jz      code_D78C
                mov     A, #10h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; ---------------------------------------------------------------------------

code_D78C:                              ; CODE XREF: code_D65D+123↑j
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #2
                mov     R4, A
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                clr     A
                movx    @DPTR, A
                inc     DPTR
                movx    @DPTR, A

code_D79E:                              ; CODE XREF: code_D65D:code_D87F↓j
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                mov     R5, #0
                mov     R4, A
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                clr     C
                subb    A, R4
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                xrl     A, #80h
                xch     A, R5
                xrl     A, #80h
                xch     A, R5
                subb    A, R5
                jc      code_D7BB
                ljmp    code_D882
; ---------------------------------------------------------------------------

code_D7BB:                              ; CODE XREF: code_D65D+159↑j
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE0Ch
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                cjne    A, #2, code_D7E2
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                inc     DPTR
                mov     R4, A
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                add     A, R4
                sjmp    code_D7F5
; ---------------------------------------------------------------------------

code_D7E2:                              ; CODE XREF: code_D65D+16C↑j
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     B, #5           ; B-Register
                mul     AB
                inc     DPTR
                mov     R4, A
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR
                add     A, R4

code_D7F5:                              ; CODE XREF: code_D65D+183↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                jnz     code_D806
                lcall   code_E665
                sjmp    code_D81A
; ---------------------------------------------------------------------------

code_D806:                              ; CODE XREF: code_D65D+1A2↑j
                dec     A
                jnz     code_D80E
                lcall   code_E677
                sjmp    code_D81A
; ---------------------------------------------------------------------------

code_D80E:                              ; CODE XREF: code_D65D+1AA↑j
                movx    A, @DPTR
                cjne    A, #2, code_D817
                lcall   code_E687
                sjmp    code_D81A
; ---------------------------------------------------------------------------

code_D817:                              ; CODE XREF: code_D65D+1B2↑j
                lcall   code_E698

code_D81A:                              ; CODE XREF: code_D65D+1A7↑j
                                        ; code_D65D+1AF↑j ...
                mov     DPTR, #0FE0Fh
                movx    A, @DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE0Dh
                mov     R4, A
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, R4
                mov     A, R4
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                mov     DPTR, #0FE0Ch
                movx    A, @DPTR
                jnz     code_D854
                lcall   code_E6A8
                sjmp    code_D866
; ---------------------------------------------------------------------------

code_D854:                              ; CODE XREF: code_D65D+1F0↑j
                dec     A
                jnz     code_D85C
                lcall   code_E6BA
                sjmp    code_D866
; ---------------------------------------------------------------------------

code_D85C:                              ; CODE XREF: code_D65D+1F8↑j
                mov     DPTR, #0FE0Ch
                movx    A, @DPTR
                cjne    A, #3, code_D866
                lcall   code_E6CA

code_D866:                              ; CODE XREF: code_D65D+1F5↑j
                                        ; code_D65D+1FD↑j ...
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                jnz     code_D87F
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A

code_D87F:                              ; CODE XREF: code_D65D+21D↑j
                ljmp    code_D79E
; ---------------------------------------------------------------------------

code_D882:                              ; CODE XREF: code_D65D+15B↑j
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_D65D


; =============== S U B R O U T I N E =======================================


code_D894:                              ; CODE XREF: code:D106↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                mov     R6, A
                clr     A
                mov     R5, A
                mov     DPTR, #0FE18h
                xch     A, R5
                movx    @DPTR, A
                inc     DPTR
                xch     A, R5
                movx    @DPTR, A
                mov     A, R6
                mov     DPTR, #0FE15h
                movx    @DPTR, A
                mov     A, R6
                add     A, #1
                xch     A, R6
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                xrl     A, #0F0h
                mov     R4, A
                mov     A, R6
                mov     DPTR, #0FE15h
                movx    @DPTR, A
                mov     A, R4
                jz      code_D8C5
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_D8C5:                              ; CODE XREF: code_D894+2C↑j
                mov     R4, #0F0h
                lcall   code_D354
                mov     A, R4
                mov     DPTR, #0FE14h
                movx    @DPTR, A
                inc     A
                jnz     code_D8D5
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_D8D5:                              ; CODE XREF: code_D894+3C↑j
                clr     A
                mov     DPTR, #0FE23h
                movx    @DPTR, A

code_D8DA:                              ; CODE XREF: code_D894+28A↓j
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, R4
                mov     R4, A
                clr     A
                rlc     A
                mov     R5, A
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                mov     R7, #0
                mov     R6, A
                mov     A, R4
                setb    C
                subb    A, R6
                mov     A, R7
                xrl     A, #80h
                xch     A, R5
                xrl     A, #80h
                subb    A, R5
                jnc     code_D8FE
                ljmp    code_DB21
; ---------------------------------------------------------------------------

code_D8FE:                              ; CODE XREF: code_D894+65↑j
                mov     DPTR, #0FE23h
                movx    A, @DPTR
                cjne    A, #10h, code_D908
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_D908:                              ; CODE XREF: code_D894+6E↑j
                mov     A, R6
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                dec     A
                jz      code_D919
                ljmp    code_DA70
; ---------------------------------------------------------------------------

code_D919:                              ; CODE XREF: code_D894+80↑j
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE11h
                movx    @DPTR, A
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE12h
                movx    @DPTR, A
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Eh
                movx    @DPTR, A
                mov     R4, A
                lcall   code_D354
                mov     A, R4
                mov     DPTR, #0FE10h
                movx    @DPTR, A
                inc     A
                jnz     code_D96D
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_D96D:                              ; CODE XREF: code_D894+D4↑j
                mov     A, R4
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #350h
                movc    A, @A+DPTR
                mov     DPTR, #0FE13h
                movx    @DPTR, A
                mov     A, R4
                mov     B, #5           ; B-Register
                mul     AB
                mov     DPTR, #34Eh
                mov     R7, A
                movc    A, @A+DPTR
                xch     A, R7
                inc     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE16h
                xch     A, R7
                movx    @DPTR, A
                inc     DPTR
                xch     A, R7
                movx    @DPTR, A
                mov     R4, #1
                mov     A, R4
                mov     DPTR, #0FE10h
                movx    @DPTR, A
                dec     A
                mov     DPTR, #0FE14h
                movx    @DPTR, A

code_D99B:                              ; CODE XREF: code_D894+185↓j
                mov     DPTR, #0FE14h
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE13h
                movx    A, @DPTR
                setb    C
                subb    A, R4
                jc      code_DA1B
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE1Ah
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE16h
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                lcall   code_E687
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE10h
                movx    A, @DPTR
                xrl     A, R4
                jnz     code_D9E0
                sjmp    code_DA1B
; ---------------------------------------------------------------------------

code_D9E0:                              ; CODE XREF: code_D894+148↑j
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE10h
                movx    A, @DPTR
                setb    C
                subb    A, R4
                jc      code_D9FA
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_D9FA:                              ; CODE XREF: code_D894+161↑j
                mov     DPTR, #0FE1Dh
                movx    A, @DPTR
                mov     DPTR, #0FE10h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE17h
                movx    A, @DPTR
                add     A, #5
                movx    @DPTR, A
                mov     DPTR, #0FE16h
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0FE14h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                sjmp    code_D99B
; ---------------------------------------------------------------------------

code_DA1B:                              ; CODE XREF: code_D894+112↑j
                                        ; code_D894+14A↑j
                mov     DPTR, #0FE14h
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE13h
                movx    A, @DPTR
                xrl     A, R4
                jnz     code_DA2A
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_DA2A:                              ; CODE XREF: code_D894+191↑j
                mov     DPTR, #0FE12h
                movx    A, @DPTR
                mov     R4, A
                mov     DPTR, #0FE1Dh
                movx    A, @DPTR
                xrl     A, R4
                jz      code_DA39
                ljmp    code_DB34
; ---------------------------------------------------------------------------

code_DA39:                              ; CODE XREF: code_D894+1A0↑j
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE19h
                movx    A, @DPTR
                add     A, #0
                mov     R4, A
                mov     DPTR, #0FE18h
                movx    A, @DPTR
                addc    A, #0FDh
                mov     DPL, R4         ; Data Pointer, Low Byte
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE16h
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                lcall   code_E687
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                ljmp    code_DB0A
; ---------------------------------------------------------------------------

code_DA70:                              ; CODE XREF: code_D894+82↑j
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                cjne    A, #3, code_DA83
                sjmp    code_DA86
; ---------------------------------------------------------------------------

code_DA83:                              ; CODE XREF: code_D894+1EA↑j
                ljmp    code_DB08
; ---------------------------------------------------------------------------

code_DA86:                              ; CODE XREF: code_D894+1ED↑j
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE1Dh
                movx    @DPTR, A
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE1Ah
                movx    @DPTR, A
                mov     A, R7
                mov     DPTR, #0FE1Eh
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE1Bh
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, R7       ; Data Pointer Select Register
                mov     RAM_2, #2
                lcall   code_E6BA
                mov     DPTR, #0FE15h
                movx    A, @DPTR
                add     A, #2
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE19h
                movx    A, @DPTR
                add     A, #0
                mov     R4, A
                mov     DPTR, #0FE18h
                movx    A, @DPTR
                addc    A, #0FDh
                mov     DPL, R4         ; Data Pointer, Low Byte
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE1Ah
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #5
                lcall   code_E677
                sjmp    code_DB0A
; ---------------------------------------------------------------------------

code_DB08:                              ; CODE XREF: code_D894:code_DA83↑j
                sjmp    code_DB34
; ---------------------------------------------------------------------------

code_DB0A:                              ; CODE XREF: code_D894+1D9↑j
                                        ; code_D894+272↑j
                mov     DPTR, #0FE19h
                movx    A, @DPTR
                add     A, #5
                movx    @DPTR, A
                mov     DPTR, #0FE18h
                movx    A, @DPTR
                addc    A, #0
                movx    @DPTR, A
                mov     DPTR, #0FE23h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                ljmp    code_D8DA
; ---------------------------------------------------------------------------

code_DB21:                              ; CODE XREF: code_D894+67↑j
                mov     R4, #0F0h
                lcall   code_D354
                mov     A, R4
                mov     DPTR, #0FE15h
                movx    @DPTR, A
                inc     A
                jnz     code_DB30
                sjmp    code_DB34
; ---------------------------------------------------------------------------

code_DB30:                              ; CODE XREF: code_D894+298↑j
                lcall   code_D387
                ret
; ---------------------------------------------------------------------------

code_DB34:                              ; CODE XREF: code_D894+2E↑j
                                        ; code_D894+3E↑j ...
                clr     A
                mov     DPTR, #0FE23h
                movx    @DPTR, A
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; End of function code_D894


; =============== S U B R O U T I N E =======================================


code_DB43:                              ; CODE XREF: code:D0FF↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #2
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #2
                lcall   code_E6BA
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FAACh
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                cjne    A, #2, code_DBA5
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_DBB1
; ---------------------------------------------------------------------------

code_DBA5:                              ; CODE XREF: code_DB43+50↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     R7, A
                inc     DPTR
                movx    A, @DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R7         ; Data Pointer, High Byte
                movx    A, @DPTR

code_DBB1:                              ; CODE XREF: code_DB43+60↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                mov     RAM_2, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                jnz     code_DBD0
                lcall   code_E665
                sjmp    code_DC01
; ---------------------------------------------------------------------------

code_DBD0:                              ; CODE XREF: code_DB43+86↑j
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                dec     A
                jnz     code_DBE7
                lcall   code_E677
                sjmp    code_DC01
; ---------------------------------------------------------------------------

code_DBE7:                              ; CODE XREF: code_DB43+9D↑j
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                cjne    A, #2, code_DBFE
                lcall   code_E687
                sjmp    code_DC01
; ---------------------------------------------------------------------------

code_DBFE:                              ; CODE XREF: code_DB43+B3↑j
                lcall   code_E698

code_DC01:                              ; CODE XREF: code_DB43+8B↑j
                                        ; code_DB43+A2↑j ...
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_DB43


; =============== S U B R O U T I N E =======================================


code_DC0B:                              ; CODE XREF: code:D114↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                mov     R4, A
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R5, A
                mov     A, R4
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Bh
                movx    @DPTR, A
                mov     A, R4
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Ch
                movx    @DPTR, A
                mov     A, R5
                mov     DPTR, #0FE2Dh
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #0FE09h
                movx    @DPTR, A
                mov     A, R5
                jnz     code_DC54
                lcall   code_DEA0
                ret
; ---------------------------------------------------------------------------

code_DC54:                              ; CODE XREF: code_DC0B+43↑j
                mov     A, #11h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; End of function code_DC0B


; =============== S U B R O U T I N E =======================================


code_DC5E:                              ; CODE XREF: code:D11B↑p
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                mov     R4, A
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R5, A
                mov     A, R4
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE2Ch
                movx    @DPTR, A
                mov     A, R5
                mov     DPTR, #0FE2Bh
                movx    @DPTR, A
                jnz     code_DC96
                mov     DPTR, #0FE2Ch
                movx    A, @DPTR
                jnz     code_DC96
                lcall   code_DECB
                ret
; ---------------------------------------------------------------------------

code_DC96:                              ; CODE XREF: code_DC5E+2C↑j
                                        ; code_DC5E+32↑j
                mov     A, R5
                inc     A
                jnz     code_DCA4
                mov     DPTR, #0FE2Ch
                movx    A, @DPTR
                jnz     code_DCA4
                lcall   code_DF0E
                ret
; ---------------------------------------------------------------------------

code_DCA4:                              ; CODE XREF: code_DC5E+3A↑j
                                        ; code_DC5E+40↑j
                mov     A, #11h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; End of function code_DC5E


; =============== S U B R O U T I N E =======================================


code_DCAE:                              ; CODE XREF: code:D122↑p
                mov     DPTR, #0FE07h
                clr     A
                movx    @DPTR, A
                inc     DPTR
                inc     A
                movx    @DPTR, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                inc     A
                mov     R4, A
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R5, A
                mov     A, R4
                add     A, #1
                xch     A, R4
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     R6, A
                mov     A, R5
                mov     DPTR, #0FE2Fh
                movx    @DPTR, A
                dec     A
                mov     R5, A
                mov     A, R6
                mov     R7, A
                mov     DPTR, #0FE30h
                movx    @DPTR, A
                mov     R2, A
                mov     R3, #0
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                mov     R3, A
                inc     DPTR
                movx    A, @DPTR
                inc     R2
                sjmp    code_DCF8
; ---------------------------------------------------------------------------

code_DCF3:                              ; CODE XREF: code_DCAE:code_DCF8↓j
                add     A, ACC          ; Accumulator
                xch     A, R3
                rlc     A
                xch     A, R3

code_DCF8:                              ; CODE XREF: code_DCAE+43↑j
                djnz    R2, code_DCF3
                movx    @DPTR, A
                mov     DPTR, #0FE07h
                xch     A, R3
                movx    @DPTR, A
                xch     A, R3
                mov     A, R5
                inc     DPTR
                inc     DPTR
                movx    @DPTR, A
                mov     A, R4
                inc     DPTR
                movx    @DPTR, A
                mov     A, R5
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #67h ; 'g'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R7, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPTR, #0FE08h
                mov     R5, A
                movx    A, @DPTR
                anl     A, R5
                mov     R6, A
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                anl     A, R7
                orl     A, R6
                jnz     code_DD36
                mov     A, #11h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; ---------------------------------------------------------------------------

code_DD36:                              ; CODE XREF: code_DCAE+7C↑j
                mov     A, #3
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                mov     DPTR, #0FE30h
                movx    A, @DPTR
                jnz     code_DD47
                lcall   code_E39C
                sjmp    code_DD8C
; ---------------------------------------------------------------------------

code_DD47:                              ; CODE XREF: code_DCAE+92↑j
                dec     A
                jnz     code_DD4F
                lcall   code_E3A9
                sjmp    code_DD8C
; ---------------------------------------------------------------------------

code_DD4F:                              ; CODE XREF: code_DCAE+9A↑j
                movx    A, @DPTR
                cjne    A, #5, code_DD58
                lcall   code_E3CB
                sjmp    code_DD8C
; ---------------------------------------------------------------------------

code_DD58:                              ; CODE XREF: code_DCAE+A2↑j
                cjne    A, #6, code_DD60
                lcall   code_E3D8
                sjmp    code_DD8C
; ---------------------------------------------------------------------------

code_DD60:                              ; CODE XREF: code_DCAE:code_DD58↑j
                cjne    A, #7, code_DD6B
                lcall   code_E593
                lcall   code_E651
                sjmp    code_DD8C
; ---------------------------------------------------------------------------

code_DD6B:                              ; CODE XREF: code_DCAE:code_DD60↑j
                cjne    A, #8, code_DD8C
                lcall   code_E593
                mov     DPTR, #0FE09h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     R4, A
                mov     A, B            ; B-Register
                addc    A, #4
                mov     R5, A
                mov     DPL, R4         ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR
                lcall   code_E6EB
                lcall   code_E651

code_DD8C:                              ; CODE XREF: code_DCAE+97↑j
                                        ; code_DCAE+9F↑j ...
                ret
; End of function code_DCAE


; =============== S U B R O U T I N E =======================================


code_DD8D:                              ; CODE XREF: code_D52E:code_D599↑p
                clr     A
                mov     DPTR, #0FE23h
                movx    @DPTR, A
                ret
; End of function code_DD8D


; =============== S U B R O U T I N E =======================================


code_DD93:                              ; CODE XREF: code_DDAA+D0↓p
                                        ; code_DDAA+EE↓p
                mov     A, R4
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     DPTR, #0FE03h
                movx    @DPTR, A
                mov     B, #3           ; B-Register
                mul     AB
                inc     A
                inc     A
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_DD93


; =============== S U B R O U T I N E =======================================


code_DDAA:                              ; CODE XREF: code_DE9C↓p
                                        ; code_DEA0+C↓p
                clr     A
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                inc     DPTR
                inc     DPTR
                movx    @DPTR, A
                mov     A, #2
                inc     DPTR
                movx    @DPTR, A
                clr     A
                mov     DPTR, #0FE04h
                movx    @DPTR, A

code_DDBB:                              ; CODE XREF: code_DDAA+E4↓j
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                mov     R5, #0
                mov     R4, A
                mov     DPTR, #790h
                clr     A
                movc    A, @A+DPTR
                setb    C
                subb    A, R4
                mov     DPTR, #78Fh
                clr     A
                movc    A, @A+DPTR
                subb    A, R5
                jnc     code_DDD4
                ljmp    code_DE91
; ---------------------------------------------------------------------------

code_DDD4:                              ; CODE XREF: code_DDAA+25↑j
                mov     A, R4
                add     A, #5
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F6h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                anl     A, #0E0h
                mov     DPTR, #0FE06h
                movx    @DPTR, A
                jnz     code_DDEA
                ljmp    code_DE88
; ---------------------------------------------------------------------------

code_DDEA:                              ; CODE XREF: code_DDAA+3B↑j
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                inc     DPTR
                inc     DPTR
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #639h
                movc    A, @A+DPTR
                mov     DPTR, #0FE08h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #639h
                movc    A, @A+DPTR
                mov     DPTR, #0FE08h
                mov     R4, A
                movx    A, @DPTR
                mov     R5, A
                inc     A
                movx    @DPTR, A
                mov     A, R5
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #639h
                movc    A, @A+DPTR
                mov     R4, A
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE08h
                movx    A, @DPTR
                mov     R4, A
                inc     A
                movx    @DPTR, A
                mov     A, R4
                add     A, #0A8h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0FAh
                mov     DPH, A          ; Data Pointer, High Byte
                mov     R4, DPL         ; Data Pointer, Low Byte
                mov     R5, DPH         ; Data Pointer, High Byte
                mov     DPTR, #0FE2Dh
                movx    A, @DPTR
                mov     DPL, R4         ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                mov     DPTR, #0FE07h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                cjne    A, #26h, code_DE88 ; '&'
                mov     R4, A
                lcall   code_DD93
                clr     A
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                mov     A, #2
                mov     DPTR, #0FE08h
                movx    @DPTR, A

code_DE88:                              ; CODE XREF: code_DDAA+3D↑j
                                        ; code_DDAA+CC↑j
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                ljmp    code_DDBB
; ---------------------------------------------------------------------------

code_DE91:                              ; CODE XREF: code_DDAA+27↑j
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                jz      code_DE9B
                mov     R4, A
                lcall   code_DD93

code_DE9B:                              ; CODE XREF: code_DDAA+EB↑j
                ret
; End of function code_DDAA


; =============== S U B R O U T I N E =======================================


code_DE9C:                              ; CODE XREF: code_DEA0+1D↓p
                lcall   code_DDAA
                ret
; End of function code_DE9C


; =============== S U B R O U T I N E =======================================


code_DEA0:                              ; CODE XREF: code_DC0B+45↑p
                mov     DPTR, #0FE2Bh
                movx    A, @DPTR
                jnz     code_DEB0
                mov     DPTR, #0FE2Ch
                movx    A, @DPTR
                jnz     code_DEB0
                lcall   code_DDAA
                ret
; ---------------------------------------------------------------------------

code_DEB0:                              ; CODE XREF: code_DEA0+4↑j
                                        ; code_DEA0+A↑j
                mov     DPTR, #0FE2Bh
                movx    A, @DPTR
                inc     A
                jnz     code_DEC1
                mov     DPTR, #0FE2Ch
                movx    A, @DPTR
                jnz     code_DEC1
                lcall   code_DE9C
                ret
; ---------------------------------------------------------------------------

code_DEC1:                              ; CODE XREF: code_DEA0+15↑j
                                        ; code_DEA0+1B↑j
                mov     A, #11h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                lcall   code_D144
                ret
; End of function code_DEA0


; =============== S U B R O U T I N E =======================================


code_DECB:                              ; CODE XREF: code_DC5E+34↑p
                                        ; code_DF0E↓p
                mov     R7, #0

code_DECD:                              ; CODE XREF: code_DECB+22↓j
                mov     A, R7
                mov     R5, #0
                mov     R4, A
                mov     DPTR, #790h
                clr     A
                movc    A, @A+DPTR
                setb    C
                subb    A, R4
                mov     DPTR, #78Fh
                clr     A
                movc    A, @A+DPTR
                subb    A, R5
                jc      code_DEEF
                mov     A, R7
                add     A, #5
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F6h
                mov     DPH, A          ; Data Pointer, High Byte
                mov     A, R5
                movx    @DPTR, A
                inc     R7
                sjmp    code_DECD
; ---------------------------------------------------------------------------

code_DEEF:                              ; CODE XREF: code_DECB+13↑j
                mov     A, R4
                mov     DPTR, #0FE03h
                movx    @DPTR, A
                mov     DPTR, #0FE2Bh
                movx    A, @DPTR
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     DPTR, #0FE2Ch
                movx    A, @DPTR
                mov     DPTR, #0FAADh
                movx    @DPTR, A
                mov     A, #3
                mov     DPTR, #0FE24h
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_DECB


; =============== S U B R O U T I N E =======================================


code_DF0E:                              ; CODE XREF: code_DC5E+42↑p
                lcall   code_DECB
                ret
; End of function code_DF0E


; =============== S U B R O U T I N E =======================================


code_DF12:                              ; CODE XREF: code_E1DF+F5↓p
                                        ; code_E3D8+122↓p
                mov     A, R4
                mov     DPTR, #0FE00h
                movx    @DPTR, A
                mov     A, R5
                inc     DPTR
                movx    @DPTR, A
                mov     A, R4
                anl     A, R5
                mov     R4, A

code_DF1D:                              ; CODE XREF: code_DF12+17↓j
                mov     A, R5
                jb      ACC.0, code_DF2B ; Accumulator
                mov     A, R4
                clr     C
                rrc     A
                mov     R4, A
                mov     A, R5
                clr     C
                rrc     A
                mov     R5, A
                sjmp    code_DF1D
; ---------------------------------------------------------------------------

code_DF2B:                              ; CODE XREF: code_DF12+C↑j
                mov     A, R4
                mov     DPTR, #0FE00h
                movx    @DPTR, A
                mov     A, R5
                inc     DPTR
                movx    @DPTR, A
                ret
; End of function code_DF12


; =============== S U B R O U T I N E =======================================


code_DF34:                              ; CODE XREF: code_E39C+6↓p
                                        ; code_E3D8+2F↓p ...
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE00h
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     A, R4
                mov     DPTR, #0FE01h
                movx    @DPTR, A
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_DF76
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_DF93
; ---------------------------------------------------------------------------

code_DF76:                              ; CODE XREF: code_DF34+1F↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR

code_DF93:                              ; CODE XREF: code_DF34+40↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_DFB4
                lcall   code_E665
                sjmp    code_DFEF
; ---------------------------------------------------------------------------

code_DFB4:                              ; CODE XREF: code_DF34+79↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_DFD0
                lcall   code_E677
                sjmp    code_DFEF
; ---------------------------------------------------------------------------

code_DFD0:                              ; CODE XREF: code_DF34+95↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_DFEC
                lcall   code_E687
                sjmp    code_DFEF
; ---------------------------------------------------------------------------

code_DFEC:                              ; CODE XREF: code_DF34+B0↑j
                lcall   code_E698

code_DFEF:                              ; CODE XREF: code_DF34+7E↑j
                                        ; code_DF34+9A↑j ...
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #64h ; 'd'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE00h
                mov     R4, A
                movx    A, @DPTR
                orl     A, R4
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE00h
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E052
                lcall   code_E6A8
                sjmp    code_E088
; ---------------------------------------------------------------------------

code_E052:                              ; CODE XREF: code_DF34+117↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E06E
                lcall   code_E6BA
                sjmp    code_E088
; ---------------------------------------------------------------------------

code_E06E:                              ; CODE XREF: code_DF34+133↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #3, code_E088
                lcall   code_E6CA

code_E088:                              ; CODE XREF: code_DF34+11C↑j
                                        ; code_DF34+138↑j ...
                ret
; End of function code_DF34


; =============== S U B R O U T I N E =======================================


code_E089:                              ; CODE XREF: code_E3CB+6↓p
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE00h
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     A, R4
                mov     DPTR, #0FE01h
                movx    @DPTR, A
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E0CB
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_E0E8
; ---------------------------------------------------------------------------

code_E0CB:                              ; CODE XREF: code_E089+1F↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR

code_E0E8:                              ; CODE XREF: code_E089+40↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E109
                lcall   code_E665
                sjmp    code_E144
; ---------------------------------------------------------------------------

code_E109:                              ; CODE XREF: code_E089+79↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E125
                lcall   code_E677
                sjmp    code_E144
; ---------------------------------------------------------------------------

code_E125:                              ; CODE XREF: code_E089+95↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E141
                lcall   code_E687
                sjmp    code_E144
; ---------------------------------------------------------------------------

code_E141:                              ; CODE XREF: code_E089+B0↑j
                lcall   code_E698

code_E144:                              ; CODE XREF: code_E089+7E↑j
                                        ; code_E089+9A↑j ...
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #64h ; 'd'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cpl     A
                mov     DPTR, #0FE00h
                mov     R4, A
                movx    A, @DPTR
                anl     A, R4
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #61h ; 'a'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE00h
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E1A8
                lcall   code_E6A8
                sjmp    code_E1DE
; ---------------------------------------------------------------------------

code_E1A8:                              ; CODE XREF: code_E089+118↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E1C4
                lcall   code_E6BA
                sjmp    code_E1DE
; ---------------------------------------------------------------------------

code_E1C4:                              ; CODE XREF: code_E089+134↑j
                mov     DPTR, #0FE01h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #60h ; '`'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #3, code_E1DE
                lcall   code_E6CA

code_E1DE:                              ; CODE XREF: code_E089+11D↑j
                                        ; code_E089+139↑j ...
                ret
; End of function code_E089


; =============== S U B R O U T I N E =======================================


code_E1DF:                              ; CODE XREF: code_E3A9↓p
                                        ; code_E593+22↓p
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                dec     A
                mov     DPTR, #0FE02h
                movx    @DPTR, A
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Eh ; '^'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE03h
                movx    @DPTR, A
                dec     A
                jz      code_E202
                ljmp    code_E2DE
; ---------------------------------------------------------------------------

code_E202:                              ; CODE XREF: code_E1DF+1E↑j
                mov     DPSEL, #3       ; Data Pointer Select Register
                inc     DPTR
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E241
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_E25E
; ---------------------------------------------------------------------------

code_E241:                              ; CODE XREF: code_E1DF+3F↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR

code_E25E:                              ; CODE XREF: code_E1DF+60↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E27F
                lcall   code_E665
                sjmp    code_E2BA
; ---------------------------------------------------------------------------

code_E27F:                              ; CODE XREF: code_E1DF+99↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E29B
                lcall   code_E677
                sjmp    code_E2BA
; ---------------------------------------------------------------------------

code_E29B:                              ; CODE XREF: code_E1DF+B5↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E2B7
                lcall   code_E687
                sjmp    code_E2BA
; ---------------------------------------------------------------------------

code_E2B7:                              ; CODE XREF: code_E1DF+D0↑j
                lcall   code_E698

code_E2BA:                              ; CODE XREF: code_E1DF+9E↑j
                                        ; code_E1DF+BA↑j ...
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Fh ; '_'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                mov     R4, A
                lcall   code_DF12
                mov     A, R4
                mov     DPTR, #0FAAEh
                movx    @DPTR, A
                sjmp    code_E2E1
; ---------------------------------------------------------------------------

code_E2DE:                              ; CODE XREF: code_E1DF+20↑j
                mov     DPSEL, #3       ; Data Pointer Select Register

code_E2E1:                              ; CODE XREF: code_E1DF+FD↑j
                mov     DPTR, #0FAAEh
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E31F
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_E33C
; ---------------------------------------------------------------------------

code_E31F:                              ; CODE XREF: code_E1DF+11D↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR

code_E33C:                              ; CODE XREF: code_E1DF+13E↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     RAM_2, A
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E360
                lcall   code_E665
                sjmp    code_E39B
; ---------------------------------------------------------------------------

code_E360:                              ; CODE XREF: code_E1DF+17A↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E37C
                lcall   code_E677
                sjmp    code_E39B
; ---------------------------------------------------------------------------

code_E37C:                              ; CODE XREF: code_E1DF+196↑j
                mov     DPTR, #0FE02h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E398
                lcall   code_E687
                sjmp    code_E39B
; ---------------------------------------------------------------------------

code_E398:                              ; CODE XREF: code_E1DF+1B1↑j
                lcall   code_E698

code_E39B:                              ; CODE XREF: code_E1DF+17F↑j
                                        ; code_E1DF+19B↑j ...
                ret
; End of function code_E1DF


; =============== S U B R O U T I N E =======================================


code_E39C:                              ; CODE XREF: code_DCAE+94↑p
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                dec     A
                mov     R4, A
                lcall   code_DF34
                lcall   code_E651
                ret
; End of function code_E39C


; =============== S U B R O U T I N E =======================================


code_E3A9:                              ; CODE XREF: code_DCAE+9C↑p
                lcall   code_E1DF
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #50h ; 'P'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE24h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                lcall   code_E651
                ret
; End of function code_E3A9


; =============== S U B R O U T I N E =======================================


code_E3CB:                              ; CODE XREF: code_DCAE+A5↑p
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                dec     A
                mov     R4, A
                lcall   code_E089
                lcall   code_E651
                ret
; End of function code_E3CB


; =============== S U B R O U T I N E =======================================


code_E3D8:                              ; CODE XREF: code_DCAE+AD↑p
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                dec     A
                mov     DPTR, #0FE03h
                movx    @DPTR, A
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #3
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                movx    A, @DPTR
                jz      code_E402
                inc     A
                jz      code_E402
                mov     A, #12h
                mov     DPTR, #0FE28h
                movx    @DPTR, A
                ret
; ---------------------------------------------------------------------------

code_E402:                              ; CODE XREF: code_E3D8+1E↑j
                                        ; code_E3D8+21↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     R4, A
                lcall   code_DF34
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Fh ; '_'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R4, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                anl     A, R4
                mov     DPTR, #0FE04h
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                inc     DPTR
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E467
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                sjmp    code_E484
; ---------------------------------------------------------------------------

code_E467:                              ; CODE XREF: code_E3D8+6C↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR

code_E484:                              ; CODE XREF: code_E3D8+8D↑j
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E4A5
                lcall   code_E665
                sjmp    code_E4E0
; ---------------------------------------------------------------------------

code_E4A5:                              ; CODE XREF: code_E3D8+C6↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E4C1
                lcall   code_E677
                sjmp    code_E4E0
; ---------------------------------------------------------------------------

code_E4C1:                              ; CODE XREF: code_E3D8+E2↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #2, code_E4DD
                lcall   code_E687
                sjmp    code_E4E0
; ---------------------------------------------------------------------------

code_E4DD:                              ; CODE XREF: code_E3D8+FD↑j
                lcall   code_E698

code_E4E0:                              ; CODE XREF: code_E3D8+CB↑j
                                        ; code_E3D8+E7↑j ...
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Fh ; '_'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     R4, A
                lcall   code_DF12
                mov     A, R4
                mov     DPTR, #0FAAEh
                movx    @DPTR, A
                mov     DPTR, #0FE04h
                movx    A, @DPTR
                inc     DPTR
                mov     R4, A
                movx    A, @DPTR
                anl     A, R4
                movx    @DPTR, A
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     RAM_2, #1
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E553
                lcall   code_E6A8
                sjmp    code_E589
; ---------------------------------------------------------------------------

code_E553:                              ; CODE XREF: code_E3D8+174↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E56F
                lcall   code_E6BA
                sjmp    code_E589
; ---------------------------------------------------------------------------

code_E56F:                              ; CODE XREF: code_E3D8+190↑j
                mov     DPTR, #0FE03h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #3, code_E589
                lcall   code_E6CA

code_E589:                              ; CODE XREF: code_E3D8+179↑j
                                        ; code_E3D8+195↑j ...
                mov     DPTR, #0FE24h
                movx    A, @DPTR
                inc     A
                movx    @DPTR, A
                lcall   code_E651
                ret
; End of function code_E3D8


; =============== S U B R O U T I N E =======================================


code_E593:                              ; CODE XREF: code_DCAE+B5↑p
                                        ; code_DCAE+C0↑p
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                dec     A
                mov     R4, A
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Eh ; '^'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     DPTR, #0FE06h
                movx    @DPTR, A
                mov     A, R4
                mov     DPTR, #0FE05h
                movx    @DPTR, A
                lcall   code_DF34
                lcall   code_E1DF
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Ch ; '\'
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                mov     R5, A
                mov     A, #1
                movc    A, @A+DPTR
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     DPH, R5         ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     DPTR, #0FE26h
                movx    A, @DPTR
                add     A, #3
                add     A, #0A4h
                mov     DPL, A          ; Data Pointer, Low Byte
                clr     A
                addc    A, #0F9h
                mov     DPH, A          ; Data Pointer, High Byte
                movx    A, @DPTR
                mov     DPSEL, #0       ; Data Pointer Select Register
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                mov     RAM_2, A
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                jnz     code_E60F
                lcall   code_E6A8
                sjmp    code_E645
; ---------------------------------------------------------------------------

code_E60F:                              ; CODE XREF: code_E593+75↑j
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                dec     A
                jnz     code_E62B
                lcall   code_E6BA
                sjmp    code_E645
; ---------------------------------------------------------------------------

code_E62B:                              ; CODE XREF: code_E593+91↑j
                mov     DPTR, #0FE05h
                movx    A, @DPTR
                mov     B, #0Eh         ; B-Register
                mul     AB
                add     A, #5Bh ; '['
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, B            ; B-Register
                addc    A, #4
                mov     DPH, A          ; Data Pointer, High Byte
                clr     A
                movc    A, @A+DPTR
                cjne    A, #3, code_E645
                lcall   code_E6CA

code_E645:                              ; CODE XREF: code_E593+7A↑j
                                        ; code_E593+96↑j ...
                mov     DPTR, #0FE06h
                movx    A, @DPTR
                mov     DPTR, #0FE24h
                mov     R4, A
                movx    A, @DPTR
                add     A, R4
                movx    @DPTR, A
                ret
; End of function code_E593


; =============== S U B R O U T I N E =======================================


code_E651:                              ; CODE XREF: code_DCAE+B8↑p
                                        ; code_DCAE+DB↑p ...
                mov     DPTR, #0FE2Fh
                movx    A, @DPTR
                mov     DPTR, #0FAACh
                movx    @DPTR, A
                mov     DPTR, #0FE30h
                movx    A, @DPTR
                mov     DPTR, #0FAADh
                movx    @DPTR, A
                lcall   code_D136
                ret
; End of function code_E651


; =============== S U B R O U T I N E =======================================


code_E665:                              ; CODE XREF: code_D387+C5↑p
                                        ; code_D387+12B↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     DPSEL, #3       ; Data Pointer Select Register

code_E66D:                              ; CODE XREF: code_E665+C↓j
                mov     A, @R0
                inc     R0
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E66D
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E665


; =============== S U B R O U T I N E =======================================


code_E677:                              ; CODE XREF: code_D387+CD↑p
                                        ; code_D387+133↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E677
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E677


; =============== S U B R O U T I N E =======================================


code_E687:                              ; CODE XREF: code_D250+79↑p
                                        ; code_D387+D6↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                clr     A
                movc    A, @A+DPTR
                inc     DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E687
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E687


; =============== S U B R O U T I N E =======================================


code_E698:                              ; CODE XREF: code_D387:code_D462↑p
                                        ; code_D387:code_D4CB↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E698
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E698


; =============== S U B R O U T I N E =======================================


code_E6A8:                              ; CODE XREF: code_D65D+1F2↑p
                                        ; code_DF34+119↑p ...
                mov     DPSEL, #3       ; Data Pointer Select Register
                mov     R0, DPL         ; Data Pointer, Low Byte
                mov     DPSEL, #4       ; Data Pointer Select Register

code_E6B0:                              ; CODE XREF: code_E6A8+C↓j
                movx    A, @DPTR
                inc     DPTR
                movx    @R0, A
                inc     R0
                djnz    R2, code_E6B0
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E6A8


; =============== S U B R O U T I N E =======================================


code_E6BA:                              ; CODE XREF: code_D65D+1FA↑p
                                        ; code_D894+243↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E6BA
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E6BA


; =============== S U B R O U T I N E =======================================


code_E6CA:                              ; CODE XREF: code_D65D+206↑p
                                        ; code_DF34+151↑p ...
                mov     DPSEL, #4       ; Data Pointer Select Register
                movx    A, @DPTR
                inc     DPTR
                mov     DPSEL, #3       ; Data Pointer Select Register
                movx    @DPTR, A
                inc     DPTR
                djnz    R2, code_E6CA
                mov     DPSEL, #0       ; Data Pointer Select Register
                ret
; End of function code_E6CA

; ---------------------------------------------------------------------------
                db  7Fh ; 
                db    0
                db  75h ; u
                db  92h
                db    4
                db 0E0h
                db  60h ; `
                db    4
                db 0A3h
                db  0Fh
                db  80h
                db 0F6h
                db  75h ; u
                db  92h
                db    0
                db  22h ; "
                db  22h ; "

; =============== S U B R O U T I N E =======================================


code_E6EB:                              ; CODE XREF: code_DCAE+D8↑p
                mov     A, #7
                movc    A, @A+DPTR
                push    ACC             ; Accumulator
                mov     A, #6
                movc    A, @A+DPTR
                push    ACC             ; Accumulator
                ret
; End of function code_E6EB

; ---------------------------------------------------------------------------
                db  22h ; "
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db    2
                db 0F0h
                db  9Ah
                db    0
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

fail_control_loop_trampoline:           ; CODE XREF: power_on__ignition_key_turned_+5BB↑j
                ljmp    fail_control_loop
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_
; ---------------------------------------------------------------------------
                db    0
                db 0E5h
                db 0DBh
                db  54h ; T
                db  80h
                db  60h ; `
                db  0Bh
                db 0C2h
                db    0
                db 0D2h
                db    1
                db 0D0h
                db 0E0h
                db 0D0h
                db 0E0h
                db    2
                db 0F2h
                db  0Eh
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  22h ; "
                db 0E5h
                db 0DBh
                db  54h ; T
                db  80h
                db  60h ; `
                db  0Bh
                db 0C2h
                db    0
                db 0D2h
                db    1
                db 0D0h
                db 0E0h
                db 0D0h
                db 0E0h
                db    2
                db 0F2h
                db  0Eh
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db 0C0h
                db 0F0h
                db 0C0h
                db    1
                db 0E8h
                db 0C0h
                db 0E0h
                db  78h ; x
                db  7Eh ; ~
                db 0E9h
                db 0C0h
                db 0E0h
                db  79h ; y
                db  7Ch ; |
                db  53h ; S
                db 0FAh
                db 0BFh
                db 0E7h
                db 0F4h
                db  56h ; V
                db    8
                db  86h
                db  82h
                db 0F6h
                db  75h ; u
                db 0F0h
                db    8
                db  13h
                db  92h
                db 0FDh
                db 0D2h
                db 0FEh
                db 0A2h
                db 0FFh
                db 0C2h
                db 0FEh
                db 0D5h
                db 0F0h
                db 0F4h
                db  13h
                db 0F4h
                db  65h ; e
                db  82h
                db 0F5h
                db  83h
                db 0E5h
                db  82h
                db  55h ; U
                db  83h
                db  47h ; G
                db 0F7h
                db    9
                db 0E5h
                db  82h
                db 0F4h
                db  55h ; U
                db  83h
                db  47h ; G
                db 0F7h
                db    9
                db    8
                db 0B8h
                db  80h
                db 0D1h
                db  43h ; C
                db 0FAh
                db  40h ; @
                db 0D0h
                db 0E0h
                db 0F9h
                db 0D0h
                db 0E0h
                db 0F8h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  83h
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db 0D0h
                db    1
                db 0D0h
                db 0F0h
                db  22h ; "
                db  92h
                db    3
                db 0C2h
                db    0
                db 0D2h
                db    2
                db    2
                db 0F2h
                db  0Eh
                db 0C2h
                db    0
                db 0D2h
                db    5
                db    2
                db 0F2h
                db  0Eh
                db 0E5h
                db 0B2h
                db  54h ; T
                db    2
                db  70h ; p
                db    3
                db    2
                db  23h ; #
                db  92h
                db  75h ; u
                db 0D0h
                db    0
                db 0C2h
                db 0AFh
                db 0E4h
                db 0F5h
                db  87h
                db  75h ; u
                db 0B1h
                db 0A1h
                db 0F5h
                db 0B2h
                db  75h ; u
                db 0B4h
                db 0D5h
                db  43h ; C
                db 0B1h
                db  10h
                db 0F5h
                db 0F6h
                db  53h ; S
                db 0B1h
                db 0EFh
                db 0F5h
                db 0C1h
                db 0F5h
                db 0C9h
                db 0F5h
                db 0F6h
                db 0F5h
                db 0C0h
                db 0F5h
                db 0D1h
                db 0F5h
                db 0A8h
                db 0F5h
                db 0B8h
                db 0F5h
                db  9Ah
                db 0F5h
                db  88h
                db 0F5h
                db  89h
                db 0F5h
                db 0C8h
                db  75h ; u
                db 0E1h
                db  40h ; @
                db  75h ; u
                db 0BCh
                db  40h ; @
                db 0F5h
                db 0BEh
                db 0F5h
                db 0BFh
                db 0F5h
                db 0D8h
                db 0F5h
                db  92h
                db  43h ; C
                db 0B1h
                db  40h ; @
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db  80h
                db 0FFh
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db  90h
                db  0Ch
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0A0h
                db 0FFh
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0B0h
                db  29h ; )
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0E8h
                db  80h
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0F8h
                db  80h
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0FAh
                db    0
                db  43h ; C
                db 0B9h
                db  80h
                db  75h ; u
                db 0F9h
                db  31h ; 1
                db  53h ; S
                db 0B1h
                db 0FCh
                db  43h ; C
                db  87h
                db  80h
                db 0D2h
                db 0DFh
                db  75h ; u
                db  86h
                db  80h
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db 0E5h
                db 0FAh
                db 0A2h
                db 0E4h
                db 0B3h
                db  92h
                db  0Fh
                db  75h ; u
                db  3Fh ; ?
                db    0
                db  75h ; u
                db  20h
                db    0
                db 0C2h
                db  78h ; x
                db 0C2h
                db  79h ; y
                db  12h
                db 0C0h
                db    0
                db  75h ; u
                db 0BAh
                db 0FFh
                db  75h ; u
                db 0AAh
                db 0CCh
                db  75h ; u
                db  98h
                db  58h ; X
                db  43h ; C
                db 0A8h
                db  10h
                db 0C2h
                db  94h
                db  43h ; C
                db 0F9h
                db  80h
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D2h
                db 0DEh
                db  53h ; S
                db 0B1h
                db  7Fh ; 
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
; ---------------------------------------------------------------------------

code_F152:                              ; CODE XREF: code:code_F152↓j
                djnz    ACC, code_F152  ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, #2Ch ; ','
                anl     A, #3Fh
                orl     A, #0
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_F163:                              ; CODE XREF: code:F16C↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_F163    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_F177:                              ; CODE XREF: code:code_F177↓j
                djnz    ACC, code_F177  ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, #1
                orl     A, #40h
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_F186:                              ; CODE XREF: code:F18F↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_F186    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_F19A:                              ; CODE XREF: code:code_F19A↓j
                djnz    ACC, code_F19A  ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, #30h ; '0'
                anl     A, #3Fh
                mov     DPTR, #24EFh
                movc    A, @A+DPTR
                orl     A, #80h
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_F1AF:                              ; CODE XREF: code:F1B8↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_F1AF    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_F1C3:                              ; CODE XREF: code:code_F1C3↓j
                djnz    ACC, code_F1C3  ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, #1Fh
                anl     A, #1Fh
                orl     A, #0C0h
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_F1D4:                              ; CODE XREF: code:F1DD↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_F1D4    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_F1E8:                              ; CODE XREF: code:code_F1E8↓j
                djnz    ACC, code_F1E8  ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, #0E0h
                anl     P9, #7Fh        ; Port 9 (PDIR=0)
                mov     B, #8           ; B-Register

code_F1F5:                              ; CODE XREF: code:F1FE↓j
                rlc     A
                mov     P1.5, C         ; Port 1 (PDIR=0)
                orl     P9, #40h        ; Port 9 (PDIR=0)
                anl     P9, #0BFh       ; Port 9 (PDIR=0)
                djnz    B, code_F1F5    ; B-Register
                rlc     A
                orl     P9, #80h        ; Port 9 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

code_F209:                              ; CODE XREF: code:code_F209↓j
                djnz    ACC, code_F209  ; Accumulator
                pop     ACC             ; Accumulator

code_F20E:                              ; CODE XREF: code:F34C↓j
                setb    IEN0.7          ; Interrupt Enable Register 0
                mov     RAM_30, RAM_20
                mov     RAM_41, #0
                mov     R0, #83h
                mov     R1, #7Ch ; '|'
                mov     R2, #0
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     A, @R1
                mov     @R1, #0
                inc     R1
                mov     B, @R1          ; B-Register
                mov     @R1, #0
                setb    IEN0.7          ; Interrupt Enable Register 0
                inc     R1
                jnb     ACC.0, code_F22F ; Accumulator
                orl     RAM_2, #3

code_F22F:                              ; CODE XREF: code:F229↑j
                jnb     B.0, code_F235  ; B-Register
                orl     RAM_2, #3

code_F235:                              ; CODE XREF: code:code_F22F↑j
                jnb     ACC.1, code_F23B ; Accumulator
                orl     RAM_2, #4

code_F23B:                              ; CODE XREF: code:code_F235↑j
                jnb     B.1, code_F241  ; B-Register
                orl     RAM_2, #8

code_F241:                              ; CODE XREF: code:code_F23B↑j
                jnb     ACC.2, code_F247 ; Accumulator
                orl     RAM_2, #10h

code_F247:                              ; CODE XREF: code:code_F241↑j
                jnb     B.2, code_F24D  ; B-Register
                orl     RAM_2, #20h

code_F24D:                              ; CODE XREF: code:code_F247↑j
                jnb     ACC.3, code_F253 ; Accumulator
                orl     RAM_2, #40h

code_F253:                              ; CODE XREF: code:code_F24D↑j
                jnb     B.3, code_F259  ; B-Register
                orl     RAM_2, #80h

code_F259:                              ; CODE XREF: code:code_F253↑j
                mov     @R0, RAM_2
                inc     R0
                mov     R2, #0
                jnb     ACC.4, code_F264 ; Accumulator
                orl     RAM_2, #3

code_F264:                              ; CODE XREF: code:F25E↑j
                jnb     B.4, code_F26A  ; B-Register
                orl     RAM_2, #3

code_F26A:                              ; CODE XREF: code:code_F264↑j
                jnb     ACC.5, code_F270 ; Accumulator
                orl     RAM_2, #4

code_F270:                              ; CODE XREF: code:code_F26A↑j
                jnb     B.5, code_F276  ; B-Register
                orl     RAM_2, #8

code_F276:                              ; CODE XREF: code:code_F270↑j
                jnb     ACC.6, code_F27C ; Accumulator
                orl     RAM_2, #10h

code_F27C:                              ; CODE XREF: code:code_F276↑j
                jnb     B.6, code_F282  ; B-Register
                orl     RAM_2, #20h

code_F282:                              ; CODE XREF: code:code_F27C↑j
                jnb     ACC.7, code_F288 ; Accumulator
                orl     RAM_2, #40h

code_F288:                              ; CODE XREF: code:code_F282↑j
                jnb     B.7, code_F28E  ; B-Register
                orl     RAM_2, #80h

code_F28E:                              ; CODE XREF: code:code_F288↑j
                mov     @R0, RAM_2
                inc     R0
                mov     R2, #0
                mov     R0, #85h
                jnb     P4.7, code_F2DB ; Port 4 (PDIR=0)
                anl     P6, #7Fh        ; Port 6 (PDIR=0)
                nop
                setb    P4.6            ; Port 4 (PDIR=0)
                nop
                clr     P4.6            ; Port 4 (PDIR=0)
                nop
                clr     PSW.5           ; Program Status Word

code_F2A4:                              ; CODE XREF: code:F2D6↓j
                jb      PSW.5, code_F2B3 ; Program Status Word
                mov     R1, #8

code_F2A9:                              ; CODE XREF: code:F2B0↓j
                mov     C, P4.7         ; Port 4 (PDIR=0)
                setb    P4.6            ; Port 4 (PDIR=0)
                rrc     A
                clr     P4.6            ; Port 4 (PDIR=0)
                djnz    R1, code_F2A9
                mov     R1, A

code_F2B3:                              ; CODE XREF: code:code_F2A4↑j
                cpl     PSW.5           ; Program Status Word
                mov     A, R1
                rl      A
                rl      A
                mov     R1, A
                cpl     A
                anl     A, #3
                mov     C, ACC.0        ; Accumulator
                anl     C, ACC.1        ; Accumulator
                addc    A, #0
                mov     B, A            ; B-Register
                mov     A, R1
                rl      A
                rl      A
                mov     R1, A
                cpl     A
                anl     A, #3
                mov     C, ACC.0        ; Accumulator
                anl     C, ACC.1        ; Accumulator
                addc    A, #0
                swap    A
                orl     A, B            ; B-Register
                mov     @R0, A
                inc     R0
                cjne    R0, #89h, code_F2A4
                sjmp    code_F310
; ---------------------------------------------------------------------------

code_F2DB:                              ; CODE XREF: code:F295↑j
                anl     P6, #7Fh        ; Port 6 (PDIR=0)

code_F2DE:                              ; CODE XREF: code:F30D↓j
                mov     R1, #2

code_F2E0:                              ; CODE XREF: code:F2E7↓j
                mov     C, P4.7         ; Port 4 (PDIR=0)
                setb    P4.6            ; Port 4 (PDIR=0)
                rlc     A
                clr     P4.6            ; Port 4 (PDIR=0)
                djnz    R1, code_F2E0
                cpl     A
                anl     A, #3
                mov     C, ACC.0        ; Accumulator
                anl     C, ACC.1        ; Accumulator
                addc    A, #0
                mov     B, A            ; B-Register
                mov     R1, #2

code_F2F6:                              ; CODE XREF: code:F2FD↓j
                mov     C, P4.7         ; Port 4 (PDIR=0)
                setb    P4.6            ; Port 4 (PDIR=0)
                rlc     A
                clr     P4.6            ; Port 4 (PDIR=0)
                djnz    R1, code_F2F6
                cpl     A
                anl     A, #3
                mov     C, ACC.0        ; Accumulator
                anl     C, ACC.1        ; Accumulator
                addc    A, #0
                swap    A
                orl     A, B            ; B-Register
                mov     @R0, A
                inc     R0
                cjne    R0, #89h, code_F2DE

code_F310:                              ; CODE XREF: code:F2D9↑j
                orl     P6, #80h        ; Port 6 (PDIR=0)
                mov     A, RAM_52
                mov     B, A            ; B-Register
                jz      code_F328
                mov     R0, RAM_51
                mov     A, @R0
                anl     A, B            ; B-Register

code_F31E:                              ; CODE XREF: code:F326↓j
                xch     A, B            ; B-Register
                rrc     A
                jc      code_F328
                xch     A, B            ; B-Register
                rrc     A
                sjmp    code_F31E
; ---------------------------------------------------------------------------

code_F328:                              ; CODE XREF: code:F317↑j
                                        ; code:F321↑j
                xch     A, B            ; B-Register
                mov     RAM_50, A

code_F32C:                              ; CODE XREF: code:F336↓j
                setb    IEN0.6          ; Interrupt Enable Register 0
                setb    IEN1.6          ; Interrupt Enable Register 1
                clr     C
                lcall   code_C54D
                mov     A, RAM_41
                jz      code_F32C
                cjne    A, #1Eh, code_F33B

code_F33B:                              ; CODE XREF: code:F338↑j
                jc      code_F342
                cjne    A, #2Ch, code_F340 ; ','

code_F340:                              ; CODE XREF: code:F33D↑j
                jc      code_F34F

code_F342:                              ; CODE XREF: code:code_F33B↑j
                clr     RAM_20.0
                clr     RAM_20.1
                clr     RAM_20.2
                clr     RAM_20.3
                setb    RAM_20.5
                ljmp    code_F20E
; ---------------------------------------------------------------------------

code_F34F:                              ; CODE XREF: code:code_F340↑j
                clr     IEN0.7          ; Interrupt Enable Register 0
                mov     R0, A
                mov     A, RAM_40
                jnz     code_F376
                mov     P0, #0FFh       ; Port 0 (PDIR=0)
                mov     P1, #0CFh       ; Port 1 (PDIR=0)
                mov     P2, #0FFh       ; Port 2 (PDIR=0)
                mov     P3, #0FFh       ; Port 3 (PDIR=0)
                mov     P4, #0BFh       ; Port 4 (PDIR=0)
                mov     P5, #9Fh        ; Port 5 (PDIR=0)
                mov     P6, #0FFh       ; Port 6 (PDIR=0)
                mov     P9, #0B3h       ; Port 9 (PDIR=0)
                mov     RAM_7E, #40h ; '@'
                mov     RAM_7F, #40h ; '@'
                sjmp    code_F394
; ---------------------------------------------------------------------------

code_F376:                              ; CODE XREF: code:F354↑j
                mov     P0, #0FFh       ; Port 0 (PDIR=0)
                mov     P1, #0CCh       ; Port 1 (PDIR=0)
                mov     P2, #0FFh       ; Port 2 (PDIR=0)
                mov     P3, #0FFh       ; Port 3 (PDIR=0)
                mov     P4, #80h        ; Port 4 (PDIR=0)
                mov     P5, #80h        ; Port 5 (PDIR=0)
                mov     P6, #0FFh       ; Port 6 (PDIR=0)
                mov     P9, #0BDh       ; Port 9 (PDIR=0)
                mov     RAM_7E, #0AEh
                mov     RAM_7F, #0AEh

code_F394:                              ; CODE XREF: code:F374↑j
                mov     A, R0
                push    ACC             ; Accumulator
                mov     R0, #7Eh ; '~'
                anl     P6, #0BFh       ; Port 6 (PDIR=0)

code_F39C:                              ; CODE XREF: code:F3B0↓j
                mov     A, @R0
                inc     R0
                mov     @R0, A
                mov     B, #8           ; B-Register

code_F3A2:                              ; CODE XREF: code:F3AB↓j
                rrc     A
                mov     P5.5, C         ; Port 5 (PDIR=0)
                setb    P5.6            ; Port 5 (PDIR=0)
                mov     C, P5.7         ; Port 5 (PDIR=0)
                clr     P5.6            ; Port 5 (PDIR=0)
                djnz    B, code_F3A2    ; B-Register
                rrc     A
                inc     R0
                cjne    R0, #80h, code_F39C
                orl     P6, #40h        ; Port 6 (PDIR=0)
                pop     ACC             ; Accumulator
                mov     R0, A
                setb    RAM_20.0
                clr     RAM_20.1
                clr     RAM_20.2
                clr     RAM_20.3
                clr     RAM_20.5
                mov     A, RAM_61
                clr     C
                subb    A, #55h ; 'U'
                jz      code_F3CA

code_F3CA:                              ; CODE XREF: code:F3C8↑j
                mov     DPTR, #0F3D5h
                mov     A, R0
                clr     C
                subb    A, #1Eh
                mov     R0, A
                rl      A
                add     A, R0
                jmp     @A+DPTR
; ---------------------------------------------------------------------------
                db    2
                db 0F3h
                db 0FFh
                db    2
                db 0F4h
                db  2Ah ; *
                db    2
                db 0F4h
                db  47h ; G
                db    2
                db 0F6h
                db  7Ch ; |
                db    2
                db 0F6h
                db  7Fh ; 
                db    2
                db 0F6h
                db 0BDh
                db    2
                db 0F7h
                db 0A8h
                db    2
                db 0FAh
                db    2
                db    2
                db 0F7h
                db 0BBh
                db    2
                db 0F8h
                db 0C4h
                db    2
                db 0FAh
                db 0AEh
                db    2
                db 0F9h
                db  73h ; s
                db    2
                db 0F9h
                db 0FFh
                db    2
                db 0F9h
                db 0D5h
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db  90h
                db    0
                db    0
                db 0E4h
                db  93h
                db 0A3h
                db  28h ; (
                db 0F8h
                db 0E4h
                db  93h
                db 0A3h
                db  39h ; 9
                db 0F9h
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db 0E5h
                db  83h
                db 0B4h
                db    0
                db 0EDh
                db 0E5h
                db  82h
                db  70h ; p
                db 0E9h
                db  88h
                db  42h ; B
                db  89h
                db  43h ; C
                db 0E8h
                db  49h ; I
                db  60h ; `
                db    2
                db 0D2h
                db    3
                db    2
                db 0F0h
                db  8Ch
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db    8
                db 0E8h
                db  70h ; p
                db    1
                db    9
                db 0E8h
                db 0B4h
                db 0E8h
                db 0F7h
                db 0E9h
                db 0B4h
                db    3
                db 0F3h
                db  12h
                db 0F0h
                db    8
                db 0A2h
                db 0FCh
                db 0B3h
                db 0B3h
                db 0B3h
                db  92h
                db 0FCh
                db  80h
                db 0E3h
                db  75h ; u
                db  52h ; R
                db    0
                db 0E5h
                db  3Fh ; ?
                db 0B4h
                db    1
                db  2Eh ; .
                db  90h
                db 0F6h
                db 0F1h
                db  12h
                db 0F7h
                db  0Fh
                db  75h ; u
                db 0F0h
                db 0C0h
                db  90h
                db 0F5h
                db    0
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0F9h
                db 0E5h
                db 0F0h
                db  60h ; `
                db  12h
                db  8Ch
                db 0DCh
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0E5h
                db 0D9h
                db 0F0h
                db 0A3h
                db 0D5h
                db 0F0h
                db 0EEh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0DEh
                db 0B4h
                db    3
                db  19h
                db  75h ; u
                db  51h ; Q
                db  83h
                db  75h ; u
                db  52h ; R
                db 0C0h
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db  7Eh ; ~
                db    8
                db  80h
                db    3
                db  53h ; S
                db  7Eh ; ~
                db 0F7h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db    4
                db  12h
                db  75h ; u
                db  51h ; Q
                db  88h
                db  75h ; u
                db  52h ; R
                db    7
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db  90h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db    5
                db  12h
                db  75h ; u
                db  51h ; Q
                db  87h
                db  75h ; u
                db  52h ; R
                db  70h ; p
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0ECh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  0Fh
                db  13h
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db 0F9h
                db    4
                db  80h
                db    3
                db  53h ; S
                db 0F9h
                db 0FBh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  10h
                db  12h
                db  75h ; u
                db  51h ; Q
                db  86h
                db  75h ; u
                db  52h ; R
                db    7
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0E9h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  11h
                db  12h
                db  75h ; u
                db  51h ; Q
                db  85h
                db  75h ; u
                db  52h ; R
                db  70h ; p
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0E8h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  14h
                db  2Eh ; .
                db  90h
                db 0F6h
                db 0F1h
                db  12h
                db 0F7h
                db  0Fh
                db  75h ; u
                db 0F0h
                db 0C0h
                db  90h
                db 0F5h
                db    0
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0F8h
                db 0E5h
                db 0F0h
                db  60h ; `
                db  12h
                db  8Ch
                db 0DCh
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0E5h
                db 0D9h
                db 0F0h
                db 0A3h
                db 0D5h
                db 0F0h
                db 0EEh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0DEh
                db 0B4h
                db  15h
                db  0Ch
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0FBh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  16h
                db  19h
                db  75h ; u
                db  51h ; Q
                db  84h
                db  75h ; u
                db  52h ; R
                db 0C0h
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db  7Eh ; ~
                db  80h
                db  80h
                db    3
                db  53h ; S
                db  7Eh ; ~
                db  7Fh ; 
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  17h
                db  12h
                db  75h ; u
                db  51h ; Q
                db  88h
                db  75h ; u
                db  52h ; R
                db  70h ; p
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0EDh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  19h
                db  19h
                db  75h ; u
                db  51h ; Q
                db  84h
                db  75h ; u
                db  52h ; R
                db  0Ch
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db  7Eh ; ~
                db  20h
                db  80h
                db    3
                db  53h ; S
                db  7Eh ; ~
                db 0DFh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  1Ah
                db  12h
                db  75h ; u
                db  51h ; Q
                db  87h
                db  75h ; u
                db  52h ; R
                db    7
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db  91h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  1Dh
                db  13h
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db 0F9h
                db    8
                db  80h
                db    3
                db  53h ; S
                db 0F9h
                db 0F7h
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  1Fh
                db  19h
                db  75h ; u
                db  51h ; Q
                db  84h
                db  75h ; u
                db  52h ; R
                db  30h ; 0
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  53h ; S
                db  7Eh ; ~
                db 0BFh
                db  80h
                db    3
                db  43h ; C
                db  7Eh ; ~
                db  40h ; @
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  20h
                db  19h
                db  75h ; u
                db  51h ; Q
                db  83h
                db  75h ; u
                db  52h ; R
                db    3
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  53h ; S
                db 0F9h
                db 0FDh
                db  80h
                db    3
                db  43h ; C
                db 0F9h
                db    2
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  21h ; !
                db  19h
                db  75h ; u
                db  51h ; Q
                db  83h
                db  75h ; u
                db  52h ; R
                db  0Ch
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db  7Eh ; ~
                db    2
                db  80h
                db    3
                db  53h ; S
                db  7Eh ; ~
                db 0FDh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  22h ; "
                db  12h
                db  75h ; u
                db  51h ; Q
                db  86h
                db  75h ; u
                db  52h ; R
                db  70h ; p
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0EBh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  23h ; #
                db  12h
                db  75h ; u
                db  51h ; Q
                db  85h
                db  75h ; u
                db  52h ; R
                db    7
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0EAh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  2Bh ; +
                db  12h
                db  75h ; u
                db  51h ; Q
                db  84h
                db  75h ; u
                db  52h ; R
                db    3
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0FCh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db 0B4h
                db  2Eh ; .
                db  19h
                db  75h ; u
                db  51h ; Q
                db  83h
                db  75h ; u
                db  52h ; R
                db  30h ; 0
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db  50h ; P
                db    5
                db  43h ; C
                db  7Eh ; ~
                db    4
                db  80h
                db    3
                db  53h ; S
                db  7Eh ; ~
                db 0FBh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0EDh
                db 0B4h
                db  34h ; 4
                db  0Ch
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0FAh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db    2
                db 0F0h
                db  93h
                db    2
                db 0F0h
                db  93h
                db 0E5h
                db  3Fh ; ?
                db 0B4h
                db    8
                db  0Ah
                db 0A2h
                db  92h
                db 0B3h
                db  92h
                db 0FCh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F6h
                db 0B4h
                db    9
                db  0Ah
                db 0A2h
                db 0B5h
                db 0B3h
                db  92h
                db 0FCh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F6h
                db 0B4h
                db  0Dh
                db  0Dh
                db 0E5h
                db 0F9h
                db 0A2h
                db 0E5h
                db 0B3h
                db 0B3h
                db  92h
                db 0FCh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F3h
                db 0B4h
                db  2Ah ; *
                db  0Ch
                db 0E5h
                db 0B2h
                db 0A2h
                db 0E1h
                db 0B3h
                db  92h
                db 0FCh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0F4h
                db    2
                db 0F0h
                db  93h
                db  75h ; u
                db  46h ; F
                db    0
                db  75h ; u
                db  47h ; G
                db    0
                db 0E5h
                db  3Fh ; ?
                db 0B4h
                db  31h ; 1
                db  26h ; &
                db 0A2h
                db 0C5h
                db  50h ; P
                db  1Dh
                db 0C2h
                db 0C5h
                db 0A2h
                db 0FCh
                db 0B3h
                db 0B3h
                db 0B3h
                db  92h
                db 0FCh
                db 0E5h
                db  46h ; F
                db    4
                db 0F5h
                db  46h ; F
                db  70h ; p
                db  0Dh
                db 0F5h
                db  47h ; G
                db    4
                db 0F5h
                db  47h ; G
                db  70h ; p
                db    6
                db  75h ; u
                db  46h ; F
                db 0FFh
                db  75h ; u
                db  47h ; G
                db 0FFh
                db  12h
                db 0F0h
                db  1Eh
                db  80h
                db 0DAh
                db    2
                db 0F0h
                db  93h
                db    1
                db    5
                db    7
                db  0Bh
                db  14h
                db    4
                db  1Bh
                db    9
                db  1Ch
                db    1
                db  24h ; $
                db    8
                db  27h ; '
                db    2
                db  28h ; (
                db    6
                db  2Ch ; ,
                db  0Eh
                db  2Dh ; -
                db    7
                db  32h ; 2
                db  0Dh
                db  33h ; 3
                db  0Ah
                db  35h ; 5
                db  0Ch
                db  36h ; 6
                db    3
                db 0FFh
                db 0FFh
                db 0E4h
                db  93h
                db 0A3h
                db 0F8h
                db 0E4h
                db  93h
                db 0A3h
                db 0FCh
                db 0B8h
                db 0FFh
                db    3
                db    2
                db 0F0h
                db  93h
                db 0E8h
                db 0B5h
                db  3Fh ; ?
                db 0EEh
                db  22h ; "
                db  75h ; u
                db  89h
                db    1
                db 0C2h
                db  8Ch
                db  75h ; u
                db  8Ah
                db  66h ; f
                db  75h ; u
                db  8Ch
                db 0FDh
                db 0C2h
                db  8Dh
                db 0D2h
                db  8Ch
                db  90h
                db 0F5h
                db    0
                db  75h ; u
                db 0F0h
                db    0
                db  30h ; 0
                db  8Dh
                db 0FDh
                db  8Ch
                db 0DCh
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0A8h
                db 0D9h
                db 0E5h
                db 0DAh
                db 0F0h
                db 0A3h
                db 0E8h
                db 0F0h
                db 0A3h
                db 0C2h
                db  8Ch
                db  75h ; u
                db  8Ah
                db  66h ; f
                db  75h ; u
                db  8Ch
                db 0FDh
                db 0C2h
                db  8Dh
                db 0D2h
                db  8Ch
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db 0D5h
                db 0F0h
                db 0D6h
                db  22h ; "
                db  90h
                db 0F5h
                db    0
                db  75h ; u
                db 0F0h
                db    0
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db  7Ah ; z
                db    0
                db 0E0h
                db 0A3h
                db  28h ; (
                db 0F8h
                db 0E0h
                db 0A3h
                db  39h ; 9
                db 0F9h
                db  74h ; t
                db    0
                db  3Ah ; :
                db 0FAh
                db 0D5h
                db 0F0h
                db 0F1h
                db  89h
                db  46h ; F
                db  8Ah
                db  47h ; G
                db  90h
                db 0F5h
                db    0
                db  75h ; u
                db 0F0h
                db 0FFh
                db 0A3h
                db 0E0h
                db 0A3h
                db 0F8h
                db 0F9h
                db 0A3h
                db 0E0h
                db 0A3h
                db 0B5h
                db    0
                db    0
                db  50h ; P
                db    1
                db 0F8h
                db 0B5h
                db    1
                db    0
                db  40h ; @
                db    1
                db 0F9h
                db 0D5h
                db 0F0h
                db 0EEh
                db  88h
                db  44h ; D
                db  89h
                db  45h ; E
                db 0E9h
                db 0C3h
                db  98h
                db 0F5h
                db  48h ; H
                db  22h ; "
                db  90h
                db 0F6h
                db 0F1h
                db  12h
                db 0F7h
                db  0Fh
                db  12h
                db 0F7h
                db  22h ; "
                db  12h
                db 0F7h
                db  62h ; b
                db    2
                db 0F0h
                db  8Ch
                db  0Bh
                db    0
                db 0FFh
                db 0FFh
                db  90h
                db 0F7h
                db 0B7h
                db  12h
                db 0F7h
                db  0Fh
                db  74h ; t
                db  2Ch ; ,
                db  54h ; T
                db  3Fh ; ?
                db  44h ; D
                db    0
                db  53h ; S
                db 0F9h
                db  7Fh ; 
                db  75h ; u
                db 0F0h
                db    8
                db  33h ; 3
                db  92h
                db  95h
                db  43h ; C
                db 0F9h
                db  40h ; @
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D5h
                db 0F0h
                db 0F4h
                db  33h ; 3
                db  43h ; C
                db 0F9h
                db  80h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db  74h ; t
                db    1
                db  44h ; D
                db  40h ; @
                db  53h ; S
                db 0F9h
                db  7Fh ; 
                db  75h ; u
                db 0F0h
                db    8
                db  33h ; 3
                db  92h
                db  95h
                db  43h ; C
                db 0F9h
                db  40h ; @
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D5h
                db 0F0h
                db 0F4h
                db  33h ; 3
                db  43h ; C
                db 0F9h
                db  80h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db  74h ; t
                db  30h ; 0
                db  54h ; T
                db  3Fh ; ?
                db  90h
                db  24h ; $
                db 0EFh
                db  93h
                db  44h ; D
                db  80h
                db  53h ; S
                db 0F9h
                db  7Fh ; 
                db  75h ; u
                db 0F0h
                db    8
                db  33h ; 3
                db  92h
                db  95h
                db  43h ; C
                db 0F9h
                db  40h ; @
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D5h
                db 0F0h
                db 0F4h
                db  33h ; 3
                db  43h ; C
                db 0F9h
                db  80h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db  74h ; t
                db  1Fh
                db  54h ; T
                db  1Fh
                db  44h ; D
                db 0C0h
                db  53h ; S
                db 0F9h
                db  7Fh ; 
                db  75h ; u
                db 0F0h
                db    8
                db  33h ; 3
                db  92h
                db  95h
                db  43h ; C
                db 0F9h
                db  40h ; @
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D5h
                db 0F0h
                db 0F4h
                db  33h ; 3
                db  43h ; C
                db 0F9h
                db  80h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db 0ECh
                db  13h
                db 0E4h
                db  33h ; 3
                db  44h ; D
                db 0E0h
                db  53h ; S
                db 0F9h
                db  7Fh ; 
                db  75h ; u
                db 0F0h
                db    8
                db  33h ; 3
                db  92h
                db  95h
                db  43h ; C
                db 0F9h
                db  40h ; @
                db  53h ; S
                db 0F9h
                db 0BFh
                db 0D5h
                db 0F0h
                db 0F4h
                db  33h ; 3
                db  43h ; C
                db 0F9h
                db  80h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db 0D2h
                db  94h
                db  75h ; u
                db  89h
                db    1
                db 0C2h
                db  8Ch
                db  75h ; u
                db  8Ah
                db  56h ; V
                db  75h ; u
                db  8Ch
                db 0D6h
                db 0C2h
                db  8Dh
                db 0D2h
                db  8Ch
                db  30h ; 0
                db  8Dh
                db 0FDh
                db 0C2h
                db  94h
                db 0C0h
                db 0E0h
                db  74h ; t
                db  0Eh
                db 0D5h
                db 0E0h
                db 0FDh
                db 0D0h
                db 0E0h
                db  75h ; u
                db 0DCh
                db    0
                db  43h ; C
                db 0DCh
                db  40h ; @
                db  75h ; u
                db 0DAh
                db    0
                db  20h
                db 0DCh
                db 0FDh
                db 0E5h
                db 0D9h
                db  85h
                db 0DAh
                db 0F0h
                db  24h ; $
                db  14h
                db  50h ; P
                db    2
                db  74h ; t
                db 0FFh
                db  85h
                db 0F0h
                db  46h ; F
                db 0F5h
                db  47h ; G
                db 0F5h
                db  44h ; D
                db 0F5h
                db  45h ; E
                db  75h ; u
                db  48h ; H
                db    0
                db  12h
                db 0F0h
                db  1Eh
                db    2
                db 0F0h
                db  8Ch
                db  12h
                db 0F0h
                db  1Eh
                db  74h ; t
                db  1Fh
                db 0F9h
                db  75h ; u
                db 0F0h
                db    9
                db  12h
                db  55h ; U
                db  26h ; &
                db 0C3h
                db  94h
                db    0
                db  50h ; P
                db    1
                db 0E4h
                db  75h ; u
                db 0F0h
                db  75h ; u
                db 0A4h
                db  33h ; 3
                db 0E5h
                db 0F0h
                db  33h ; 3
                db  50h ; P
                db    2
                db  74h ; t
                db 0FFh
                db 0B5h
                db    1
                db    0
                db 0B3h
                db  40h ; @
                db 0DCh
                db 0C2h
                db 0AFh
                db  75h ; u
                db  86h
                db  80h
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  43h ; C
                db 0FAh
                db    1
                db  80h
                db 0FEh
                db 0E5h
                db  82h
                db  85h
                db  83h
                db 0F0h
                db  90h
                db 0F9h
                db  75h ; u
                db 0F0h
                db  90h
                db 0F9h
                db  7Ah ; z
                db 0F0h
                db 0E5h
                db 0F0h
                db  90h
                db 0F9h
                db  76h ; v
                db 0F0h
                db  90h
                db 0F9h
                db  7Bh ; {
                db 0F0h
                db  90h
                db 0F9h
                db  77h ; w
                db 0E8h
                db 0F0h
                db 0A3h
                db 0E9h
                db 0F0h
                db  90h
                db 0F9h
                db  7Ch ; |
                db 0E8h
                db 0F0h
                db 0A3h
                db 0E9h
                db 0F0h
                db 0EAh
                db  90h
                db 0F9h
                db  79h ; y
                db 0F0h
                db  90h
                db 0F9h
                db  7Eh ; ~
                db 0F0h
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  12h
                db  6Bh ; k
                db  91h
                db  40h ; @
                db  3Bh ; ;
                db  75h ; u
                db  89h
                db    1
                db 0C2h
                db  8Ch
                db  75h ; u
                db  8Ah
                db 0D6h
                db  75h ; u
                db  8Ch
                db  97h
                db 0C2h
                db  8Dh
                db 0D2h
                db  8Ch
                db  30h ; 0
                db  8Dh
                db 0FDh
                db  90h
                db 0F9h
                db  7Eh ; ~
                db 0E0h
                db  70h ; p
                db 0DFh
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  90h
                db 0F9h
                db  77h ; w
                db 0E0h
                db 0F8h
                db 0A3h
                db 0E0h
                db 0F9h
                db  90h
                db 0F9h
                db  79h ; y
                db 0E0h
                db 0FAh
                db  90h
                db 0F9h
                db  76h ; v
                db 0E0h
                db 0F5h
                db 0F0h
                db  90h
                db 0F9h
                db  75h ; u
                db 0E0h
                db 0F5h
                db  82h
                db  85h
                db 0F0h
                db  83h
                db  12h
                db  6Ah ; j
                db 0FEh
                db  22h ; "
                db 0D2h
                db 0AEh
                db 0D2h
                db 0BEh
                db  12h
                db  6Bh ; k
                db    2
                db  22h ; "
                db  90h
                db 0FFh
                db    0
                db  7Ah ; z
                db  42h ; B
                db  12h
                db  6Ch ; l
                db  0Ah
                db  90h
                db 0FFh
                db    0
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db  7Ah ; z
                db  42h ; B
                db  12h
                db 0F8h
                db 0F6h
                db  40h ; @
                db  49h ; I
                db  12h
                db 0F0h
                db    8
                db  90h
                db 0FFh
                db  42h ; B
                db 0E4h
                db  7Ah ; z
                db  30h ; 0
                db 0F0h
                db 0A3h
                db 0DAh
                db 0FCh
                db  90h
                db 0FFh
                db  42h ; B
                db  7Ah ; z
                db  32h ; 2
                db  12h
                db  6Ch ; l
                db  0Ah
                db  90h
                db 0FFh
                db  42h ; B
                db  78h ; x
                db  42h ; B
                db  79h ; y
                db    0
                db  7Ah ; z
                db  32h ; 2
                db  12h
                db 0F8h
                db 0F6h
                db  40h ; @
                db  26h ; &
                db  12h
                db 0F0h
                db    8
                db  90h
                db 0FFh
                db  74h ; t
                db 0E4h
                db  7Ah ; z
                db  0Ah
                db 0F0h
                db 0A3h
                db 0DAh
                db 0FCh
                db  90h
                db 0FFh
                db  74h ; t
                db  7Ah ; z
                db  0Ch
                db  12h
                db  6Ch ; l
                db  0Ah
                db  90h
                db 0FFh
                db  74h ; t
                db  78h ; x
                db  74h ; t
                db  79h ; y
                db    0
                db  7Ah ; z
                db  0Ch
                db  12h
                db 0F8h
                db 0F6h
                db  40h ; @
                db    3
                db  12h
                db 0F0h
                db    8
                db    2
                db 0F0h
                db  8Ah
                db 0E5h
                db  3Eh ; >
                db  20h
                db 0E7h
                db  0Eh
                db  90h
                db 0FFh
                db    0
                db  78h ; x
                db    0
                db 0A9h
                db  3Eh ; >
                db  7Ah ; z
                db    0
                db  12h
                db 0F9h
                db  6Bh ; k
                db  80h
                db  14h
                db  90h
                db 0FFh
                db    0
                db  78h ; x
                db    0
                db 0E5h
                db  3Eh ; >
                db 0C2h
                db 0E7h
                db 0F9h
                db  7Ah ; z
                db    0
                db  12h
                db 0F8h
                db 0F6h
                db  40h ; @
                db    3
                db  12h
                db 0F0h
                db    8
                db    2
                db 0F0h
                db  8Ah
                db    2
                db 0F0h
                db  8Ch
                db  90h
                db 0FFh
                db    0
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db  7Ah ; z
                db  42h ; B
                db  12h
                db  6Bh ; k
                db    2
                db  40h ; @
                db  0Ah
                db  90h
                db 0FFh
                db    0
                db  7Ah ; z
                db  42h ; B
                db  12h
                db  6Bh ; k
                db 0F1h
                db  50h ; P
                db    5
                db 0D2h
                db    3
                db    2
                db 0F0h
                db  8Ch
                db  90h
                db 0F6h
                db 0F1h
                db  12h
                db 0F7h
                db  0Fh
                db  12h
                db 0F7h
                db  22h ; "
                db  12h
                db 0F7h
                db  62h ; b
                db  90h
                db 0FFh
                db  30h ; 0
                db 0ECh
                db  25h ; %
                db  82h
                db 0F5h
                db  82h
                db 0E5h
                db  83h
                db  34h ; 4
                db    0
                db 0F5h
                db  83h
                db 0E0h
                db 0FCh
                db 0ECh
                db  85h
                db  44h ; D
                db 0F0h
                db  12h
                db  5Fh ; _
                db 0E2h
                db 0E5h
                db 0F0h
                db  75h ; u
                db 0F0h
                db  20h
                db  12h
                db  5Fh ; _
                db 0E2h
                db 0E5h
                db  44h ; D
                db  25h ; %
                db 0F0h
                db  20h
                db 0F7h
                db    4
                db  50h ; P
                db    2
                db  74h ; t
                db 0FFh
                db 0F5h
                db  44h ; D
                db 0ECh
                db  85h
                db  45h ; E
                db 0F0h
                db  12h
                db  5Fh ; _
                db 0E2h
                db 0E5h
                db 0F0h
                db  75h ; u
                db 0F0h
                db  20h
                db  12h
                db  5Fh ; _
                db 0E2h
                db 0E5h
                db  45h ; E
                db  25h ; %
                db 0F0h
                db  20h
                db 0F7h
                db    4
                db  50h ; P
                db    2
                db  74h ; t
                db 0FFh
                db 0F5h
                db  45h ; E
                db 0E5h
                db  45h ; E
                db 0C3h
                db  95h
                db  44h ; D
                db 0F5h
                db  48h ; H
                db 0A8h
                db  46h ; F
                db 0A9h
                db  47h ; G
                db  8Ch
                db 0F0h
                db  12h
                db  5Fh ; _
                db 0FBh
                db 0ECh
                db  30h ; 0
                db 0E7h
                db    9
                db 0C3h
                db 0E8h
                db  95h
                db  46h ; F
                db 0F8h
                db 0E9h
                db  95h
                db  47h ; G
                db 0F9h
                db  75h ; u
                db 0F0h
                db  20h
                db  12h
                db  60h ; `
                db  0Dh
                db 0AAh
                db  46h ; F
                db 0ABh
                db  47h ; G
                db  12h
                db  61h ; a
                db  3Fh ; ?
                db 0ECh
                db  20h
                db 0E7h
                db    6
                db  50h ; P
                db    4
                db  78h ; x
                db 0FFh
                db  79h ; y
                db 0FFh
                db  88h
                db  46h ; F
                db  89h
                db  47h ; G
                db    2
                db 0F0h
                db  8Ch
                db  75h ; u
                db 0E9h
                db  10h
                db  75h ; u
                db 0EAh
                db  27h ; '
                db  75h ; u
                db 0EDh
                db  2Ch ; ,
                db  75h ; u
                db 0EEh
                db    1
                db    0
                db    0
                db    0
                db    0
                db 0A8h
                db 0E9h
                db 0A9h
                db 0EAh
                db 0AAh
                db 0EDh
                db 0ABh
                db 0EEh
                db 0E8h
                db 0B4h
                db  21h ; !
                db  12h
                db 0E9h
                db 0B4h
                db    0
                db  0Eh
                db 0EAh
                db 0B4h
                db  64h ; d
                db  0Ah
                db 0EBh
                db 0B4h
                db    0
                db    6
                db  78h ; x
                db    0
                db  79h ; y
                db    0
                db  80h
                db    4
                db  78h ; x
                db  34h ; 4
                db  79h ; y
                db  12h
                db  88h
                db  42h ; B
                db  89h
                db  43h ; C
                db 0E8h
                db  49h ; I
                db  60h ; `
                db    2
                db 0D2h
                db    3
                db    2
                db 0F0h
                db  8Ch
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR power_on__ignition_key_turned_

fail_control_loop:                      ; CODE XREF: power_on__ignition_key_turned_:fail_control_loop_trampoline↑j
                clr     A               ; A = 0
                mov     PCON, A         ; PCON = 0
                                        ; Disable power saving,
                                        ; SMOD = 0, serial baud rate not doubled
                mov     SYSCON, #0A1h   ; SYSCON = 0xA1 = 1010 0001
                                        ; CLKP = 1 - P1.6/CLKOUT outputs the system clock which is 1/6 or 1/12 of
                                        ; the oscillator frequency.
                                        ; EALE = 1
                                        ; XMAP1 = 0 - RD/WR signals not activated when accessing XRAM
                                        ; XMAP0 = 1 - When XMAP0 is set, the access to the XRAM is enabled and
                                        ;             all accesses using MOVX instructions with an address in
                                        ;             the range of F400H to FFFFH will access internally the XRAM
                mov     SYSCON1, A      ; SYSCON1 = 0
                                        ;  - programming disabled
                                        ;  - code and data memory not unswapped
                                        ;  - chip mode switch disabled
                mov     PRSC, #0D5h     ; PRSC = 0xD5
                                        ; T2P1 = 0; T2P0 = 1 - set timer2 freq = f_osc/12 or f_osc/24
                                        ; T1P1 = 0; T1P0 = 1 - divider ratio = 1:2
                                        ; T0P1 = 0; T0P0 = 1 - divider ratio = 1:2
                orl     SYSCON, #10h    ; SYSCON.RMAP = 1
                mov     CMEN, A         ; CC1EN = 0
                anl     SYSCON, #0EFh   ; SYSCON.RMAP = 0
                mov     CCEN, A         ; CCEN = 0
                mov     CC4EN, A        ; CC4EN = 0
                mov     CMEN, A         ; CMEN = 0
                mov     IRCON0, A       ; IRCON0 = 0
                mov     IRCON1, A       ; IRCON1 = 0
                mov     IEN0, A         ; Interrupt Enable Register 0
                mov     IEN1, A         ; Interrupt Enable Register 1
                mov     IEN2, A         ; IEN0 = IEN1 = IEN2 = 0
                                        ;
                                        ; timer0, timer1 overflow interrupt disabled
                                        ; timer2 interrupt disabled
                mov     TCON, A         ; TCON = 0
                mov     TMOD, A         ; TMOD = 0
                mov     T2CON, A        ; T2CON = 0
                mov     CTCON, #40h ; '@' ; CTCON = 0x40
                                        ; CTP = 1, CLK0..2 = 0, compare timer input clock = f_osc / 2
                mov     CT1CON, #40h ; '@' ; CT1CON = 0x40
                                        ; CT1P = 1, CLK10..12 = 0, compare timer1 input clock = f_osc / 2
                mov     IEN3, A         ; IEN0 = 0 - disable interrupts: all, timer2, serial channel 0, timer1 overflow, external 1, timer0 overflow, external 0
                                        ; IEN1 = 0 - disable interrupts: timer2 external reload, external interrupts 2-6, adc
                                        ; IEN2 = 0 - disable interrupts: register compare match interrupt, compare timer interrupt, CM0-7 compare match interrupt, serial iface1
                                        ; IEN3 = 0 - disable interrupts: compare timer1 overflow, compare timer1 - general capture/compare interrupt.
                mov     IRCON2, A       ; IRCON0 = 0
                                        ; clear interrupt flags of compare timer1
                mov     ADCON0, A       ; ADCON0 = 0
                mov     DPSEL, A        ; DPSEL = 0
                mov     TMOD, #1        ; TMOD = 0x01
                                        ; timer0 mode - 16 bit timer, no gate control
                                        ; timer1 mode - 8 bit timer, no gate control
                clr     TCON.4          ; TCON &= ~(1 << 4), stop timer0
                mov     TL0, #7Bh ; '{' ; Timer 0, Low Byte
                mov     TH0, #0FFh      ; Timer 0, High Byte
                clr     TCON.5          ; clear timer0 overflow bit
                setb    TCON.4          ; restart timer0 with initial value of 0xFF7B
                clr     PSW.5           ; Program Status Word
                mov     R0, #0
                mov     R1, #0

wait_until_timer0_overflows:            ; CODE XREF: power_on__ignition_key_turned_:wait_until_timer0_overflows↓j
                                        ; code:done_with_this_part↓j
                jnb     TCON.5, wait_until_timer0_overflows ; wait until timer0 overflows,
                                        ; output of timer0 overflow is:
                                        ;  R1, R0, PSW.5 (F1)
                                        ;
                                        ; F1 - selects table of addresses
                                        ;  - 0xFB57 when cleared
                                        ;  - 0xFB66 when set
                                        ;
                                        ; R1 - primary jump table selector, max valid value = 0x04 (primary_jump_table_0 and primary_jump_table_1)
                                        ;
                                        ; R0 - secondary jump table selector, max value 0x36 (secondary_jump_table_0, secondary_jump_table_1)
                                        ;
                                        ; PSW.5 (F0) - jump table set selector
                                        ;
                                        ; Function of timer0?
                                        ;
                                        ; How R1, R0, PSW.F0 are set in select_next_jump_table:
                                        ;  - R1/R0 are incremented
                                        ;  - PSW.F0 is negated
                                        ;
                                        ; The following sequence of table selector tuples:
                                        ; ++(F0,       R0,       R1)
                                        ;    0x01 max  0x36 max  0x04 max
                                        ;  - F0 = 0, R0 = 0, R1 = 0
                                        ;  - F0 = 1, R0 = 0, R1 = 0
                                        ;  - F0 = 0, R0 = 1, R1 = 0
                                        ;  - F0 = 1, R0 = 1, R1 = 0
                                        ;  - F0 = 0, R0 = 2, R1 = 0
                                        ; ...
                                        ;  - F0 = 1, R0 = 0x36, R1 = 0
                                        ;  - F0 = 0, R0 = 0, R1 = 0x01
                                        ;  - F0 = 1, R0 = 1, R1 = 0x01
                                        ;  - F0 = 0, R0 = 2, R1 = 0x01
                                        ; ...
                                        ;  - F0 = 1, R0 = 0x36, R1 = 0x04
                                        ;
                                        ; Any "function" in jump table should finish with jump to select_next-jump_table
                clr     TCON.4          ; stop timer0 operation
                mov     TL0, #7Bh ; '{' ; Timer 0, Low Byte
                mov     TH0, #0FFh      ; Reload timer0 with 0xFF7B. 0x85 ticks to overflow at freq f_osc / 2.
                clr     TCON.5          ; Timer Control Register
                setb    TCON.4          ; restart timer0 with initial value of 0xFF7B
                jb      PSW.5, code_FB50 ; Program Status Word
                mov     DPTR, #primary_jump_table_0
                sjmp    code_FB53
; ---------------------------------------------------------------------------

code_FB50:                              ; CODE XREF: power_on__ignition_key_turned_+D7B6↑j
                mov     DPTR, #primary_jump_table_1

code_FB53:                              ; CODE XREF: power_on__ignition_key_turned_+D7BC↑j
                mov     A, R1           ; what value is in R1?
                rl      A
                add     A, R1           ; A = R1 * 3, 3 bytes is ljmp instr with 2-byte address
                jmp     @A+DPTR         ; DPTR is either 0xFB57 or 0xFB66
; END OF FUNCTION CHUNK FOR power_on__ignition_key_turned_ ; The other values, succeeding these adresses, look good also.
                                        ; What is the value of R1 at the moment?
; ---------------------------------------------------------------------------

primary_jump_table_0:                   ; DATA XREF: power_on__ignition_key_turned_+D7B9↑o
                ljmp    primary_jump_table_0_0 ; R1 = 0, will get here after the first timer0 overflow
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table ; R1 = 1
; ---------------------------------------------------------------------------
                ljmp    primary_jump_table_0_2 ; R1 = 2
; ---------------------------------------------------------------------------
                ljmp    primary_jump_table_0_3 ; R1 = 3
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table ; R1 = 4
; ---------------------------------------------------------------------------

primary_jump_table_1:                   ; DATA XREF: power_on__ignition_key_turned_:code_FB50↑o
                ljmp    primary_jump_table_1_0 ; R1 = 0
; ---------------------------------------------------------------------------
                ljmp    primary_jump_table_1_1 ; R1 = 1
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table ; R1 = 2
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table ; R1 = 3
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table ; R1 = 4
; ---------------------------------------------------------------------------

select_next_jump_table_trampoline_0:    ; CODE XREF: code:FB82↓j
                                        ; code:FB8E↓j ...
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

primary_jump_table_0_0:                 ; CODE XREF: code:primary_jump_table_0↑j
                mov     DPTR, #secondary_jump_table_0_0 ; DPTR = 0xFBBA
                                        ; A = R0
                                        ;
                                        ; R0 contains offset (in ljmp cmds) in jump table, which is pointed to by DPTR
                mov     A, R0
                sjmp    perform_jump_through_jump_table ; INPUT:
                                        ;  - R0 - secondary jump table selector
                                        ;  - R1 - primary jump table selector
                                        ;  - DPTR - jump table base address
                                        ;  - Acc = R0
; ---------------------------------------------------------------------------

primary_jump_table_0_2:                 ; CODE XREF: code:FB5D↑j
                mov     DPTR, #secondary_jump_table_0_23
                mov     A, R0
                jb      ACC.0, select_next_jump_table_trampoline_0 ; Accumulator
                rr      A
                sjmp    perform_jump_through_jump_table ; INPUT:
                                        ;  - R0 - secondary jump table selector
                                        ;  - R1 - primary jump table selector
                                        ;  - DPTR - jump table base address
                                        ;  - Acc = R0
; ---------------------------------------------------------------------------

primary_jump_table_0_3:                 ; CODE XREF: code:FB60↑j
                mov     DPTR, #secondary_jump_table_0_23
                mov     A, R0
                add     A, #37h ; '7'
                jb      ACC.0, select_next_jump_table_trampoline_0 ; Accumulator
                rrc     A

perform_jump_through_jump_table:        ; CODE XREF: code:FB7C↑j
                                        ; code:FB86↑j ...
                mov     B, #3           ; INPUT:
                                        ;  - R0 - secondary jump table selector
                                        ;  - R1 - primary jump table selector
                                        ;  - DPTR - jump table base address
                                        ;  - Acc = R0
                mul     AB              ; B:A = A * 0x03
                add     A, DPL          ; Data Pointer, Low Byte
                mov     DPL, A          ; Data Pointer, Low Byte
                mov     A, DPH          ; Data Pointer, High Byte
                addc    A, B            ; B-Register
                mov     DPH, A          ; DPTR += (A * 0x03)
                                        ; DPTR += (R0 * 0x03)
                                        ;
                                        ; Acc contains offset (in ljmp cmds) in jump table, which is pointed to by DPTR
                                        ;
                                        ; one of the tables is @ 0xFBBA
                clr     A
                jmp     @A+DPTR
; ---------------------------------------------------------------------------

primary_jump_table_1_0:                 ; CODE XREF: code:primary_jump_table_1↑j
                mov     DPTR, #0FD04h
                mov     A, R0
                clr     C
                subb    A, #0Ah
                jc      select_next_jump_table_trampoline_0 ; if (R0 < 0x10) jump ...
                sjmp    perform_jump_through_jump_table ; if (R0 >= 0x10) jump ...
; ---------------------------------------------------------------------------

primary_jump_table_1_1:                 ; CODE XREF: code:FB69↑j
                mov     DPTR, #0FD04h
                mov     A, R0
                cjne    A, #0Ah, code_FBB4

code_FBB4:                              ; CODE XREF: code:FBB1↑j
                jnc     select_next_jump_table_trampoline_0
                add     A, #2Dh ; '-'
                sjmp    perform_jump_through_jump_table ; INPUT:
                                        ;  - R0 - secondary jump table selector
                                        ;  - R1 - primary jump table selector
                                        ;  - DPTR - jump table base address
                                        ;  - Acc = R0
; ---------------------------------------------------------------------------

secondary_jump_table_0_0:               ; DATA XREF: code:primary_jump_table_0_0↑o
                ljmp    turn_on_ignition_coil_1_4 ; R0 = 0
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 1
; ---------------------------------------------------------------------------
                ljmp    code_FDB1       ; R0 = 2
; ---------------------------------------------------------------------------
                ljmp    enqueue_bypass_air_open ; R0 = 3
; ---------------------------------------------------------------------------
                ljmp    ventilate_adsorber ; R0 = 4
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 5
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 6
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 7
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 8
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 9
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0d
; ---------------------------------------------------------------------------
                ljmp    code_FDC1       ; R0 = 0x0e
; ---------------------------------------------------------------------------
                ljmp    turn_off_injector_2 ; R0 = 0x0f
; ---------------------------------------------------------------------------
                ljmp    turn_off_injector_1 ; R0 = 0x10
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x11
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x12
; ---------------------------------------------------------------------------
                ljmp    turn_on_ignition_coil_2_3 ; R0 = 0x13
; ---------------------------------------------------------------------------
                ljmp    code_FDD6       ; R0 = 0x14
; ---------------------------------------------------------------------------
                ljmp    code_FDDB       ; R0 = 0x15
; ---------------------------------------------------------------------------
                ljmp    close_egr_valve ; R0 = 0x16
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x17
; ---------------------------------------------------------------------------
                ljmp    code_FDE6       ; R0 = 0x18
; ---------------------------------------------------------------------------
                ljmp    enqueue_bypass_air_close ; R0 = 0x19
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1b
; ---------------------------------------------------------------------------
                ljmp    code_FDF1       ; R0 = 0x1c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1d
; ---------------------------------------------------------------------------
                ljmp    code_FDF7       ; R0 = 0x1e
; ---------------------------------------------------------------------------
                ljmp    code_FDFD       ; R0 = 0x1f
; ---------------------------------------------------------------------------
                ljmp    code_FE03       ; R0 = 0x20
; ---------------------------------------------------------------------------
                ljmp    turn_off_injector_4 ; R0 = 0x21
; ---------------------------------------------------------------------------
                ljmp    turn_off_injector_3 ; R0 = 0x22
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x23
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x24
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x25
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x26
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x27
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x28
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x29
; ---------------------------------------------------------------------------
                ljmp    code_FE13       ; R0 = 0x2a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2c
; ---------------------------------------------------------------------------
                ljmp    code_FE18       ; R0 = 0x2d
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2e
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2f
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x30
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x31
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x32
; ---------------------------------------------------------------------------
                ljmp    code_FE1E       ; R0 = 0x33
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x34
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x35
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x36
; ---------------------------------------------------------------------------

secondary_jump_table_0_23:              ; DATA XREF: code:primary_jump_table_0_2↑o
                                        ; code:primary_jump_table_0_3↑o
                ljmp    select_next_jump_table_trampoline ; R0 = 0
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 1
; ---------------------------------------------------------------------------
                ljmp    code_FE23       ; R0 = 2
; ---------------------------------------------------------------------------
                ljmp    code_FE29       ; R0 = 3
; ---------------------------------------------------------------------------
                ljmp    code_FE2E       ; R0 = 4
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 5
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 6
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 7
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 8
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 9
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0d
; ---------------------------------------------------------------------------
                ljmp    code_FE33       ; R0 = 0x0e
; ---------------------------------------------------------------------------
                ljmp    code_FE39       ; R0 = 0x0f
; ---------------------------------------------------------------------------
                ljmp    code_FE3E       ; R0 = 0x10
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x11
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x12
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x13
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x14
; ---------------------------------------------------------------------------
                ljmp    code_FE43       ; R0 = 0x15
; ---------------------------------------------------------------------------
                ljmp    code_FE49       ; R0 = 0x16
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x17
; ---------------------------------------------------------------------------
                ljmp    code_FE4E       ; R0 = 0x18
; ---------------------------------------------------------------------------
                ljmp    code_FE54       ; R0 = 0x19
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1b
; ---------------------------------------------------------------------------
                ljmp    code_FE59       ; R0 = 0x1c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1d
; ---------------------------------------------------------------------------
                ljmp    code_FE5F       ; R0 = 0x1e
; ---------------------------------------------------------------------------
                ljmp    code_FE65       ; R0 = 0x1f
; ---------------------------------------------------------------------------
                ljmp    code_FE6B       ; R0 = 0x20
; ---------------------------------------------------------------------------
                ljmp    code_FE71       ; R0 = 0x21
; ---------------------------------------------------------------------------
                ljmp    code_FE76       ; R0 = 0x22
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x23
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x24
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x25
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x26
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x27
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x28
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x29
; ---------------------------------------------------------------------------
                ljmp    code_FE7B       ; R0 = 0x2a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2c
; ---------------------------------------------------------------------------
                ljmp    code_FE80       ; R0 = 0x2d
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2e
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2f
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x30
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x31
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x32
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x33
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x34
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x35
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x36
; ---------------------------------------------------------------------------

secondary_jump_table_1_01:              ; R0 = 0
                ljmp    code_FE86
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 1
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 2
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 3
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 4
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 5
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 6
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 7
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 8
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 9
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0d
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0e
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x0f
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x10
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x11
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x12
; ---------------------------------------------------------------------------
                ljmp    code_FE8B       ; R0 = 0x13
; ---------------------------------------------------------------------------
                ljmp    code_FE90       ; R0 = 0x14
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x15
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x16
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x17
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x18
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x19
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1d
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1e
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x1f
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x20
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x21
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x22
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x23
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x24
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x25
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x26
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x27
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x28
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x29
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2a
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2b
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2c
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2d
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2e
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x2f
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x30
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x31
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x32
; ---------------------------------------------------------------------------
                ljmp    code_FE95       ; R0 = 0x33
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x34
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x35
; ---------------------------------------------------------------------------
                ljmp    select_next_jump_table_trampoline ; R0 = 0x36
; ---------------------------------------------------------------------------

select_next_jump_table_trampoline:      ; CODE XREF: code:FBBD↑j
                                        ; code:FBC9↑j ...
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_on_ignition_coil_1_4:              ; CODE XREF: code:secondary_jump_table_0_0↑j
                clr     P5.1            ; "!IN2" @ TPS2814 #1, Ignition coil for cylinders 1/4,
                                        ; power on for Ignition Coil 1/4
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDB1:                              ; CODE XREF: code:FBC0↑j
                orl     RAM_7E, #8
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

enqueue_bypass_air_open:                ; CODE XREF: code:FBC3↑j
                clr     P1.0            ; Port 1 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

ventilate_adsorber:                     ; CODE XREF: code:FBC6↑j
                clr     P4.4            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDC1:                              ; CODE XREF: code:FBE4↑j
                orl     P9, #4          ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_off_injector_2:                    ; CODE XREF: code:FBE7↑j
                clr     P4.1            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_off_injector_1:                    ; CODE XREF: code:FBEA↑j
                clr     P4.0            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_on_ignition_coil_2_3:              ; CODE XREF: code:FBF3↑j
                clr     P5.0            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDD6:                              ; CODE XREF: code:FBF6↑j
                clr     P5.3            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDDB:                              ; CODE XREF: code:FBF9↑j
                orl     RAM_7E, #80h
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

close_egr_valve:                        ; CODE XREF: code:FBFC↑j
                clr     P4.5            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDE6:                              ; CODE XREF: code:FC02↑j
                orl     RAM_7E, #20h
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

enqueue_bypass_air_close:               ; CODE XREF: code:FC05↑j
                clr     P1.1            ; Port 1 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDF1:                              ; CODE XREF: code:FC0E↑j
                orl     P9, #8          ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDF7:                              ; CODE XREF: code:FC14↑j
                anl     RAM_7E, #0BFh
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FDFD:                              ; CODE XREF: code:FC17↑j
                anl     P9, #0FDh       ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE03:                              ; CODE XREF: code:FC1A↑j
                orl     RAM_7E, #2
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_off_injector_4:                    ; CODE XREF: code:FC1D↑j
                clr     P4.3            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

turn_off_injector_3:                    ; CODE XREF: code:FC20↑j
                clr     P4.2            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE13:                              ; CODE XREF: code:FC38↑j
                clr     P5.4            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE18:                              ; CODE XREF: code:FC41↑j
                orl     RAM_7E, #4
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE1E:                              ; CODE XREF: code:FC53↑j
                clr     P5.2            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE23:                              ; CODE XREF: code:FC65↑j
                anl     RAM_7E, #0F7h
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE29:                              ; CODE XREF: code:FC68↑j
                setb    P1.0            ; Port 1 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE2E:                              ; CODE XREF: code:FC6B↑j
                setb    P4.4            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE33:                              ; CODE XREF: code:FC89↑j
                anl     P9, #0FBh       ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE39:                              ; CODE XREF: code:FC8C↑j
                setb    P4.1            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE3E:                              ; CODE XREF: code:FC8F↑j
                setb    P4.0            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE43:                              ; CODE XREF: code:FC9E↑j
                anl     RAM_7E, #7Fh
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE49:                              ; CODE XREF: code:FCA1↑j
                setb    P4.5            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE4E:                              ; CODE XREF: code:FCA7↑j
                anl     RAM_7E, #0DFh
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE54:                              ; CODE XREF: code:FCAA↑j
                setb    P1.1            ; Port 1 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE59:                              ; CODE XREF: code:FCB3↑j
                anl     P9, #0F7h       ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE5F:                              ; CODE XREF: code:FCB9↑j
                orl     RAM_7E, #40h
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE65:                              ; CODE XREF: code:FCBC↑j
                orl     P9, #2          ; Port 9 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE6B:                              ; CODE XREF: code:FCBF↑j
                anl     RAM_7E, #0FDh
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE71:                              ; CODE XREF: code:FCC2↑j
                setb    P4.3            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE76:                              ; CODE XREF: code:FCC5↑j
                setb    P4.2            ; Port 4 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE7B:                              ; CODE XREF: code:FCDD↑j
                setb    P5.4            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE80:                              ; CODE XREF: code:FCE6↑j
                anl     RAM_7E, #0FBh
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE86:                              ; CODE XREF: code:secondary_jump_table_1_01↑j
                setb    P5.1            ; turn off Ignition Coil 1/4, IGNITE!
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE8B:                              ; CODE XREF: code:FD3D↑j
                setb    P5.0            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE90:                              ; CODE XREF: code:FD40↑j
                setb    P5.3            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

code_FE95:                              ; CODE XREF: code:FD9D↑j
                setb    P5.2            ; Port 5 (PDIR=0)
                ljmp    select_next_jump_table
; ---------------------------------------------------------------------------

select_next_jump_table:                 ; CODE XREF: code:FB5A↑j
                                        ; code:FB63↑j ...
                mov     A, R0
                push    ACC             ; push R0
                mov     R0, #7Eh ; '~'  ; R0 = 0x7E, RAM ptr
                anl     P6, #0BFh       ; P6 &= 1011 1111,
                                        ;
                                        ; set low @ "!CE" @ HIP0045
                                        ;
                                        ; gonna talk to HIP0045

send_RAM_7E__over_SPI_to_HIP0045_once_2:
                                        ; CODE XREF: code:FEB6↓j
                mov     A, @R0          ; A = RAM[R0] = RAM[0x7E]
                inc     R0
                mov     @R0, A          ; RAM[R0 + 1] = RAM[R0]
                                        ; ++R0
                                        ;
                                        ; // RAM[0x7F] = RAM[0x7E]
                mov     B, #8           ; B = 8

send_8_bits_over_spi_to_hip0045_2:      ; CODE XREF: code:FEB1↓j
                rrc     A
                mov     P5.5, C         ; Port 5 (PDIR=0)
                setb    P5.6            ; Port 5 (PDIR=0)
                mov     C, P5.7         ; Port 5 (PDIR=0)
                clr     P5.6            ; Port 5 (PDIR=0)
                djnz    B, send_8_bits_over_spi_to_hip0045_2 ; B-Register
                rrc     A
                inc     R0
                cjne    R0, #80h, send_RAM_7E__over_SPI_to_HIP0045_once_2
                orl     P6, #40h        ; turn off SPI of HIP0045
                pop     ACC             ; Accumulator
                mov     R0, A           ; restore R0
                setb    IEN0.6          ; Interrupt Enable Register 0
                setb    IEN1.6          ; refresh watchdog timer
                cpl     PSW.5           ; switch jump tables set selector
                jb      PSW.5, done_with_this_part ; PSW.5 ~= PSW.5;
                                        ; if (PSW.5) jump ...
F0 was 1
                inc     R0              ; increment R0, secondary jump table selector
                mov     A, R0
                cjne    A, #37h, done_with_this_part ; '7' ; if (++R0 < 0x37) jump ...
                mov     R0, #0          ; R0 = 0, reset offset for secondary jump tables
                inc     R1              ; increment primary jump table selector
                mov     A, R1           ; A = R1 + 1
                cjne    A, #5, done_with_this_part ; if (++R1 < 0x05) jump ...
                mov     R1, #0          ; R1 = 0, reset offset for primary jump tables
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h         ; test P9, bit 5, LO @ MC33199
                jz      got_to_reset    ; if (LO @ MC33199 is low) jump ...
                clr     P3.1            ; Port 3 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

wait_1c_cycles_1:                       ; CODE XREF: code:wait_1c_cycles_1↓j
                djnz    ACC, wait_1c_cycles_1 ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h
                jnz     got_to_reset
                setb    P3.1            ; Port 3 (PDIR=0)
                push    ACC             ; Accumulator
                mov     A, #0Eh

wait_1c_cycles_2:                       ; CODE XREF: code:wait_1c_cycles_2↓j
                djnz    ACC, wait_1c_cycles_2 ; Accumulator
                pop     ACC             ; Accumulator
                mov     A, P9           ; Port 9 (PDIR=0)
                anl     A, #20h
                jnz     done_with_this_part

got_to_reset:                           ; CODE XREF: code:FEDA↑j
                                        ; code:FEEB↑j
                orl     IP0, #80h       ; set oscillator watchdog timer status flag (OWDS)
                ljmp    power_on__ignition_key_turned_ ; RESET!
; ---------------------------------------------------------------------------

done_with_this_part:                    ; CODE XREF: code:FEC5↑j
                                        ; code:FECA↑j ...
                ljmp    wait_until_timer0_overflows
; ---------------------------------------------------------------------------
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
                db 0FFh
; end of 'code'

; ===========================================================================

; Segment type: Internal processor memory & SFR
                ;.segment XRAM
                DSEG
; org 0F400h
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































; end of 'XRAM'

; ===========================================================================

; Segment type: Internal processor memory & SFR
                ;.segment RAM
                DSEG
RAM_0 equ 0                             ; DATA XREF: power_on__ignition_key_turned_+D31↑r
                                        ; power_on__ignition_key_turned_+F22↑r ...
RAM_1 equ 1                             ; DATA XREF: power_on__ignition_key_turned_:code_2BA9↑r
                                        ; power_on__ignition_key_turned_+8EF↑r ...
RAM_2 equ 2                             ; DATA XREF: power_on__ignition_key_turned_:high_word_of_quot_is_zero↑r
                                        ; power_on__ignition_key_turned_:code_3269↑r ...
RAM_3 equ 3                             ; DATA XREF: power_on__ignition_key_turned_+727↑r
                                        ; power_on__ignition_key_turned_+ED9↑r ...
RAM_4 equ 4                             ; DATA XREF: power_on__ignition_key_turned_+FE7↑r
                                        ; power_on__ignition_key_turned_+10B7↑r ...



RAM_8 equ 8                             ; DATA XREF: IE0_0+4CD↑r
                                        ; IE0_0+64B↑r
RAM_9 equ 9                             ; DATA XREF: IE0_0+4CF↑r
                                        ; IE0_0+64D↑r
RAM_A equ 0Ah                           ; DATA XREF: IE0_0+64F↑r
RAM_B equ 0Bh                           ; DATA XREF: IE0_0+F5↑r
                                        ; IE0_0+651↑r

RAM_D equ 0Dh                           ; DATA XREF: IEX2_0+1F↑w
                                        ; IE0_0+4A↑r ...
RAM_E equ 0Eh                           ; DATA XREF: power_on__ignition_key_turned_+440↑w
RAM_F equ 0Fh                           ; DATA XREF: IEX6_0:code_B58↑r
                                        ; IEX6_0+2F8↑w ...
RAM_10 equ 10h                          ; DATA XREF: IEX6_0+10C↑r
                                        ; IEX6_0+26D↑w ...
RAM_11 equ 11h                          ; DATA XREF: IEX6_0+116↑r
                                        ; IEX6_0+125↑r ...
RAM_12 equ 12h                          ; DATA XREF: IEX6_0:code_AC5↑r
                                        ; IEX6_0+27A↑w ...
RAM_13 equ 13h                          ; DATA XREF: IEX6_0+1F7↑r
                                        ; IEX6_0+206↑r ...
RAM_14 equ 14h                          ; DATA XREF: IEX6_0+28B↑r
                                        ; IEX6_0+29A↑r ...
RAM_15 equ 15h                          ; DATA XREF: IEX6_0+13F↑r
                                        ; IEX6_0+220↑r ...
RAM_16 equ 16h                          ; DATA XREF: IEX6_0:code_B15↑w
                                        ; IEX6_0+2C9↑r ...

RAM_18 equ 18h                          ; DATA XREF: IEX6_0:code_823↑r
                                        ; IEX6_0+47↑r ...
RAM_19 equ 19h                          ; DATA XREF: IEX6_0-B3↑r
                                        ; IEX6_0+49↑r ...


RAM_1C equ 1Ch                          ; DATA XREF: power_on__ignition_key_turned_+6B0↑r
                                        ; power_on__ignition_key_turned_+21B2↑r
RAM_1D equ 1Dh                          ; DATA XREF: power_on__ignition_key_turned_+6B2↑r
                                        ; power_on__ignition_key_turned_+21B4↑r


RAM_20 equ 20h                          ; DATA XREF: IEX6_0:code_866↑w
                                        ; IEX6_0:code_86A↑w ...
RAM_21 equ 21h                          ; DATA XREF: IE0_0+A1↑w
                                        ; power_on__ignition_key_turned_:failed_to_read_from_eeprom_1↑w ...
RAM_22 equ 22h                          ; DATA XREF: IE0_0+701↑r
                                        ; power_on__ignition_key_turned_:code_2F08↑w ...
RAM_23 equ 23h                          ; DATA XREF: IE0_0+298↑w
                                        ; IE0_0+29A↑w ...
RAM_24 equ 24h                          ; DATA XREF: IE0_0+2AF↑r
                                        ; IE0_0+2B1↑r ...
RAM_25 equ 25h                          ; DATA XREF: IEX6_0-58↑w
                                        ; IEX6_0-56↑w ...
RAM_26 equ 26h                          ; DATA XREF: IEX6_0-BF↑w
                                        ; IEX6_0-BD↑w ...
RAM_27 equ 27h                          ; DATA XREF: IEX6_0+FF↑w
                                        ; IEX6_0+2D3↑w ...
RAM_28 equ 28h                          ; DATA XREF: TF0_0+28↑w
                                        ; IE0_0+35D↑r ...
RAM_29 equ 29h                          ; DATA XREF: IEX6_0:code_980↑r
                                        ; ICR_0+20↑w ...
RAM_2A equ 2Ah                          ; DATA XREF: ICR_0+4A↑r
                                        ; ICR_0+7E↑r ...
RAM_2B equ 2Bh                          ; DATA XREF: TF0_0:code_1269↑r
                                        ; IE0_0+40F↑w ...
RAM_2C equ 2Ch                          ; DATA XREF: power_on__ignition_key_turned_:code_3720↑w
                                        ; power_on__ignition_key_turned_+1536↑w ...
RAM_2D equ 2Dh                          ; DATA XREF: IEX6_0+95↑r
                                        ; IEX6_0+98↑w ...
RAM_2E equ 2Eh                          ; DATA XREF: IEX6_0:code_974↑r
                                        ; IEX6_0+197↑w ...
RAM_2F equ 2Fh                          ; DATA XREF: TF0_0+47↑r
                                        ; TF0_0+E2↑r ...
RAM_30 equ 30h                          ; DATA XREF: IEX6_0-CF↑w
                                        ; IEX6_0:code_80E↑r ...
RAM_31 equ 31h                          ; DATA XREF: IEX6_0-144↑w
                                        ; IEX6_0-137↑r ...
RAM_32 equ 32h                          ; DATA XREF: IEX6_0:code_79D↑w
                                        ; IEX6_0-132↑r ...
RAM_33 equ 33h                          ; DATA XREF: IEX6_0+71↑w
                                        ; IEX6_0:code_98F↑r ...
RAM_34 equ 34h                          ; DATA XREF: IEX6_0:code_9D5↑w
                                        ; IE0_0+B05↑r ...
RAM_35 equ 35h                          ; DATA XREF: TF0_0+22↑w
                                        ; TF0_0+25↑w ...
RAM_36 equ 36h                          ; DATA XREF: IEX6_0+F1↑r
                                        ; IEX6_0+103↑w ...
RAM_37 equ 37h                          ; DATA XREF: IEX6_0+F7↑r
                                        ; IEX6_0+106↑w ...
RAM_38 equ 38h                          ; DATA XREF: IEX6_0+103↑r
                                        ; power_on__ignition_key_turned_+212C↑w ...
RAM_39 equ 39h                          ; DATA XREF: IEX6_0+106↑r
                                        ; power_on__ignition_key_turned_+2132↑w ...
RAM_3A equ 3Ah                          ; DATA XREF: power_on__ignition_key_turned_+488↑r
                                        ; power_on__ignition_key_turned_+4E3↑r ...
RAM_3B equ 3Bh                          ; DATA XREF: power_on__ignition_key_turned_+981↑w
                                        ; power_on__ignition_key_turned_+994↑w ...
RAM_3C equ 3Ch                          ; DATA XREF: power_on__ignition_key_turned_+B83↑w
                                        ; power_on__ignition_key_turned_+B85↑r ...
RAM_3D equ 3Dh                          ; DATA XREF: IE0_0+5A9↑r
                                        ; IE0_0+5D6↑r ...
RAM_3E equ 3Eh                          ; DATA XREF: IE0_0+761↑r
                                        ; IE0_0+7B8↑r ...
RAM_3F equ 3Fh                          ; DATA XREF: TF0_0+527↑r
                                        ; power_on__ignition_key_turned_:code_2F2C↑w ...
RAM_40 equ 40h                          ; DATA XREF: power_on__ignition_key_turned_+D51↑w
                                        ; power_on__ignition_key_turned_:code_30FB↑w ...
RAM_41 equ 41h                          ; DATA XREF: IE0_0+61F↑r
                                        ; power_on__ignition_key_turned_+DB3↑w ...
RAM_42 equ 42h                          ; DATA XREF: IE0_0+420↑r
                                        ; IE0_0+438↑r ...
RAM_43 equ 43h                          ; DATA XREF: IE0_0+470↑r
                                        ; power_on__ignition_key_turned_+DA0↑w ...
RAM_44 equ 44h                          ; DATA XREF: IEX6_0-54↑w
                                        ; IEX6_0+88↑w ...
RAM_45 equ 45h                          ; DATA XREF: IEX6_0-51↑w
                                        ; IEX6_0+8D↑w ...
RAM_46 equ 46h                          ; DATA XREF: IEX6_0+86↑r
                                        ; IEX6_0:code_967↑w
RAM_47 equ 47h                          ; DATA XREF: IEX6_0+8B↑r
                                        ; IEX6_0+91↑w
RAM_48 equ 48h                          ; DATA XREF: power_on__ignition_key_turned_+653↑w
                                        ; power_on__ignition_key_turned_+73A↑w ...
RAM_49 equ 49h                          ; DATA XREF: IE0_0+8D↑r
                                        ; IE0_0+36A↑r ...
RAM_4A equ 4Ah                          ; DATA XREF: IE0_0+2EC↑r
                                        ; IE0_0:code_174C↑r ...
RAM_4B equ 4Bh                          ; DATA XREF: IE0_0+26↑r
                                        ; IE0_0+1A4↑r ...
RAM_4C equ 4Ch                          ; DATA XREF: IEX2_0+29↑r
                                        ; IE0_0+32E↑r ...
RAM_4D equ 4Dh                          ; DATA XREF: ICR_0+22↑w
                                        ; TF0_0:code_126F↑r ...
RAM_4E equ 4Eh                          ; DATA XREF: TF0_0:code_12A0↑w
                                        ; TF0_0:code_12E6↑w ...
RAM_4F equ 4Fh                          ; DATA XREF: TF0_0:code_1299↑r
                                        ; TF0_0:code_12C9↑w ...
RAM_50 equ 50h                          ; DATA XREF: IE0_0+3C0↑r
                                        ; IE0_0+522↑w ...
RAM_51 equ 51h                          ; DATA XREF: IE0_0+52A↑w
                                        ; power_on__ignition_key_turned_+17D6↑r ...
RAM_52 equ 52h                          ; DATA XREF: IE0_0+535↑w
                                        ; power_on__ignition_key_turned_+2700↑r ...
RAM_53 equ 53h                          ; DATA XREF: IE0_0+540↑w
                                        ; power_on__ignition_key_turned_+1742↑r ...
RAM_54 equ 54h                          ; DATA XREF: IE0_0+56F↑w
                                        ; IE0_0+579↑r
RAM_55 equ 55h                          ; DATA XREF: IE0_0+577↑w
                                        ; code_59B9+3↑r ...
RAM_56 equ 56h                          ; DATA XREF: IE0_0+580↑w
RAM_57 equ 57h                          ; DATA XREF: power_on__ignition_key_turned_+3EF↑w
                                        ; power_on__ignition_key_turned_:code_3B79↑w ...
RAM_58 equ 58h                          ; DATA XREF: IE0_0+6C8↑r
                                        ; power_on__ignition_key_turned_+3F1↑w ...
RAM_59 equ 59h                          ; DATA XREF: power_on__ignition_key_turned_+3D4↑w
                                        ; power_on__ignition_key_turned_+E1F↑r ...
RAM_5A equ 5Ah                          ; DATA XREF: power_on__ignition_key_turned_+15FF↑w
                                        ; power_on__ignition_key_turned_+1703↑w ...
RAM_5B equ 5Bh                          ; DATA XREF: power_on__ignition_key_turned_+1925↑w
                                        ; power_on__ignition_key_turned_+1932↑r ...
RAM_5C equ 5Ch                          ; DATA XREF: IEX6_0:code_A20↑w
                                        ; ICR_0+22↑r ...
RAM_5D equ 5Dh                          ; DATA XREF: power_on__ignition_key_turned_+253C↑r
                                        ; power_on__ignition_key_turned_+254F↑r ...
RAM_5E equ 5Eh                          ; DATA XREF: power_on__ignition_key_turned_:code_48CB↑r
                                        ; power_on__ignition_key_turned_+2547↑r ...
RAM_5F equ 5Fh                          ; DATA XREF: IEX4_0+6↑r
                                        ; power_on__ignition_key_turned_+342↑w ...
RAM_60 equ 60h                          ; DATA XREF: IEX4_0+C↑r
                                        ; power_on__ignition_key_turned_+345↑w ...
RAM_61 equ 61h                          ; DATA XREF: IEX3_0+6↑r
                                        ; power_on__ignition_key_turned_+348↑w ...
RAM_62 equ 62h                          ; DATA XREF: IEX3_0+C↑r
                                        ; power_on__ignition_key_turned_+34B↑w ...
RAM_63 equ 63h                          ; DATA XREF: power_on__ignition_key_turned_+19AA↑r
                                        ; power_on__ignition_key_turned_:code_3D48↑w ...
RAM_64 equ 64h                          ; DATA XREF: init_flags_and_values+6↑w
                                        ; power_on__ignition_key_turned_:code_3EC5↑r ...
RAM_65 equ 65h                          ; DATA XREF: power_on__ignition_key_turned_+1C06↑w
                                        ; power_on__ignition_key_turned_+1C4C↑w ...
RAM_66 equ 66h                          ; DATA XREF: power_on__ignition_key_turned_+411↑w
                                        ; power_on__ignition_key_turned_+208C↑r ...
RAM_67 equ 67h                          ; DATA XREF: power_on__ignition_key_turned_+419↑w
                                        ; power_on__ignition_key_turned_+20DF↑w ...
RAM_68 equ 68h                          ; DATA XREF: TF0_0+559↑w
                                        ; TF0_0+55B↑r ...
RAM_69 equ 69h                          ; DATA XREF: TF0_0+55D↑r
                                        ; power_on__ignition_key_turned_+269D↑w
RAM_6A equ 6Ah                          ; DATA XREF: TF0_0:code_12FF↑w
                                        ; TF0_0+54B↑r ...
RAM_6B equ 6Bh                          ; DATA XREF: TF0_0:code_1309↑r
                                        ; power_on__ignition_key_turned_+25D8↑w
RAM_6C equ 6Ch                          ; DATA XREF: IEX2_0:code_D34↑w
                                        ; IEX2_0+51↑r
RAM_6D equ 6Dh                          ; DATA XREF: IEX6_0+2CD↑w
                                        ; IEX2_0+55↑w ...
RAM_6E equ 6Eh                          ; DATA XREF: IE0_0+103↑w
                                        ; IE0_0+10B↑r ...
RAM_6F equ 6Fh                          ; DATA XREF: IEX2_0-13↑r
                                        ; IE0_0+1B4↑w ...
RAM_70 equ 70h                          ; DATA XREF: IEX2_0-D↑r
                                        ; IE0_0+1B6↑w ...
RAM_71 equ 71h                          ; DATA XREF: IE0_0:code_1604↑r
                                        ; IE0_0+2C6↑r ...
RAM_72 equ 72h                          ; DATA XREF: power_on__ignition_key_turned_+879↑r
                                        ; power_on__ignition_key_turned_+1567↑r ...
RAM_73 equ 73h                          ; DATA XREF: IE0_0+15C↑r
                                        ; power_on__ignition_key_turned_+449↑r ...
RAM_74 equ 74h                          ; DATA XREF: IE0_0+F44↑r
                                        ; IE0_0:code_22FD↑r ...
RAM_75 equ 75h                          ; DATA XREF: power_on__ignition_key_turned_:code_3ABE↑r
                                        ; power_on__ignition_key_turned_+1F3C↑r ...
RAM_76 equ 76h                          ; DATA XREF: power_on__ignition_key_turned_:code_4301↑r
                                        ; code_6783+61↑r ...
RAM_77 equ 77h                          ; DATA XREF: TF0_0:code_DF8↑r
                                        ; TF0_0+106↑w ...






RAM_7E equ 7Eh                          ; DATA XREF: power_on__ignition_key_turned_+8D↑w
                                        ; power_on__ignition_key_turned_+AD↑w ...
RAM_7F equ 7Fh                          ; DATA XREF: power_on__ignition_key_turned_+90↑w
                                        ; power_on__ignition_key_turned_+B0↑w ...
; end of 'RAM'

; ===========================================================================

; Segment type: Internal processor memory & SFR
                ;.segment FSR
                DSEG
; org 80h
P0 equ 80h                              ; DATA XREF: power_on__ignition_key_turned_+45↑w
                                        ; power_on__ignition_key_turned_+75↑w ...
                                        ; Port 0 (PDIR=0)
SP equ 81h                              ; DATA XREF: power_on__ignition_key_turned_+5↑w
                                        ; Stack Pointer
DPL equ 82h                             ; DATA XREF: IEX6_0:code_B9A↑r
                                        ; IEX6_0+2D1↑w ...
                                        ; Data Pointer, Low Byte
DPH equ 83h                             ; DATA XREF: IEX6_0+2C4↑r
                                        ; IEX6_0+2CF↑w ...
                                        ; Data Pointer, High Byte
WDTL equ 84h                            ; Watchdog Timer Register, Low Byte
WDTH equ 85h                            ; Watchdog Timer Register, High Byte
WDTREL equ 86h                          ; DATA XREF: power_on__ignition_key_turned_+586↑w
                                        ; power_on__ignition_key_turned_+1486↑w ...
                                        ; Watchdog Timer Reload Register
PCON equ 87h                            ; DATA XREF: power_on__ignition_key_turned_+9↑w
                                        ; power_on__ignition_key_turned_:done_reading_eeprom↑w ...
                                        ; Power Control Register
TCON equ 88h                            ; DATA XREF: IEX6_0+101↑w
                                        ; IEX6_0+2D5↑w ...
                                        ; Timer Control Register
TMOD equ 89h                            ; DATA XREF: power_on__ignition_key_turned_+2D↑w
                                        ; power_on__ignition_key_turned_+54B↑w ...
                                        ; Timer Mode Register
TL0 equ 8Ah                             ; DATA XREF: TF0_0+C↑r
                                        ; TF0_0+10↑w ...
                                        ; Timer 0, Low Byte
TL1 equ 8Bh                             ; DATA XREF: power_on__ignition_key_turned_+550↑w
                                        ; power_on__ignition_key_turned_+26B5↑r ...
                                        ; Timer 1, Low Byte
TH0 equ 8Ch                             ; DATA XREF: TF0_0+12↑r
                                        ; TF0_0+16↑w ...
                                        ; Timer 0, High Byte
TH1 equ 8Dh                             ; DATA XREF: power_on__ignition_key_turned_+553↑w
                                        ; power_on__ignition_key_turned_+26B8↑r ...
                                        ; Timer 1, High Byte
RESERVED008E equ 8Eh                    ; RESERVED
RESERVED008F equ 8Fh                    ; RESERVED
P1 equ 90h                              ; DATA XREF: IEX6_0+3↑r
                                        ; IEX6_0+53↑w ...
                                        ; Port 1 (PDIR=0)
XPAGE equ 91h                           ; Page Address Register for XRAM
DPSEL equ 92h                           ; DATA XREF: TF0_0+31A↑w
                                        ; TF0_0+320↑w ...
                                        ; Data Pointer Select Register
RESERVED0093 equ 93h                    ; RESERVED
RESERVED0094 equ 94h                    ; RESERVED
RESERVED0095 equ 95h                    ; RESERVED
RESERVED0096 equ 96h                    ; RESERVED
RESERVED0097 equ 97h                    ; RESERVED
S0CON equ 98h                           ; DATA XREF: TF0_0:code_E3C↑r
                                        ; TF0_0:code_EAC↑w ...
                                        ; Serial Channel 0 Control Register
S0BUF equ 99h                           ; DATA XREF: RI0_TI0_0:code_C23F↑r
                                        ; RI0_TI0_0:code_C2A0↑r ...
                                        ; Serial Channel 0 Buffer Register
IEN2 equ 9Ah                            ; DATA XREF: IEX6_0-5E↑w
                                        ; IEX6_0+194↑w ...
                                        ; Interrupt Enable Register 2
S1CON equ 9Bh                           ; Serial Channel 1 Control Register
S1BUF equ 9Ch                           ; Serial Channel 1 Buffer Register
S1RELL equ 9Dh                          ; Serial Channel 1 Reload Reg., Low Byte
RESERVED009E equ 9Eh                    ; RESERVED
RESERVED009F equ 9Fh                    ; RESERVED
P2 equ 0A0h                             ; DATA XREF: power_on__ignition_key_turned_+51↑w
                                        ; power_on__ignition_key_turned_+7B↑w ...
                                        ; Port 2 (PDIR=0)
COMSETL equ 0A1h                        ; DATA XREF: IEX6_0+22E↑w
                                        ; IEX6_0+238↑w
                                        ; Compare Set Register, Low Byte
COMSETH equ 0A2h                        ; DATA XREF: IEX6_0+22C↑w
                                        ; IEX6_0+236↑w
                                        ; Compare Set Register, High Byte
COMCLRL equ 0A3h                        ; DATA XREF: IEX6_0+189↑w
                                        ; IEX6_0+1DA↑w ...
                                        ; Compare Clear Register, Low Byte
COMCLRH equ 0A4h                        ; DATA XREF: IEX6_0+187↑w
                                        ; IEX6_0+1D8↑w ...
                                        ; Compare Clear Register, High Byte
SETMSK equ 0A5h                         ; DATA XREF: IEX6_0:code_870↑w
                                        ; IEX6_0+18E↑w ...
                                        ; Compare Set Mask Register
CLRMSK equ 0A6h                         ; DATA XREF: IEX6_0-65↑w
                                        ; IEX6_0+18B↑w ...
                                        ; Compare Clear Mask Register
RESERVED00A7 equ 0A7h                   ; RESERVED
IEN0 equ 0A8h                           ; DATA XREF: TF0_0+103↑w
                                        ; TF0_0:code_F1C↑w ...
                                        ; Interrupt Enable Register 0
IP0 equ 0A9h                            ; DATA XREF: power_on__ignition_key_turned_+229↑r
                                        ; power_on__ignition_key_turned_:continue_initializing↑w ...
                                        ; Interrupt Priority Register 0
S0RELL equ 0AAh                         ; DATA XREF: TF0_0+F0↑w
                                        ; TF0_0+3F7↑w ...
                                        ; Serial Channel 0 Reload Reg., Low Byte
RESERVED00AB equ 0ABh                   ; RESERVED
RESERVED00AC equ 0ACh                   ; RESERVED
RESERVED00AD equ 0ADh                   ; RESERVED
RESERVED00AE equ 0AEh                   ; RESERVED
RESERVED00AF equ 0AFh                   ; RESERVED
P3 equ 0B0h                             ; DATA XREF: TF0_0+8B↑r
                                        ; TF0_0+275↑r ...
                                        ; Port 3 (PDIR=0)
SYSCON equ 0B1h                         ; DATA XREF: power_on__ignition_key_turned_+B↑w
                                        ; power_on__ignition_key_turned_+13↑w ...
                                        ; System Control Register
SYSCON1 equ 0B2h                        ; DATA XREF: power_on__ignition_key_turned_+E↑w
                                        ; power_on__ignition_key_turned_+D761↑w
                                        ; System Control Register 1
RESERVED00B3 equ 0B3h                   ; RESERVED
PRSC equ 0B4h                           ; DATA XREF: power_on__ignition_key_turned_+10↑w
                                        ; power_on__ignition_key_turned_+211↑w ...
                                        ; Prescaler Control Register
RESERVED00B5 equ 0B5h                   ; RESERVED
RESERVED00B6 equ 0B6h                   ; RESERVED
RESERVED00B7 equ 0B7h                   ; RESERVED
IEN1 equ 0B8h                           ; DATA XREF: IEX6_0+2BA↑w
                                        ; IEX2_0-17↑w ...
                                        ; Interrupt Enable Register 1
IP1 equ 0B9h                            ; DATA XREF: power_on__ignition_key_turned_+42↑w
                                        ; power_on__ignition_key_turned_+48↑w ...
                                        ; Interrupt Priority Register 1
S0RELH equ 0BAh                         ; DATA XREF: TF0_0+ED↑w
                                        ; TF0_0+3F4↑w ...
                                        ; Serial Channel 0 Reload Reg., High Byte
S1RELH equ 0BBh                         ; Serial Channel 1 Reload Reg., High Byte
CT1CON equ 0BCh                         ; DATA XREF: power_on__ignition_key_turned_+34↑w
                                        ; power_on__ignition_key_turned_+D787↑w
                                        ; Compare Timer 1 Control Register
RESERVED00BD equ 0BDh                   ; RESERVED
IEN3 equ 0BEh                           ; DATA XREF: power_on__ignition_key_turned_+37↑w
                                        ; power_on__ignition_key_turned_+D78A↑w
                                        ; Interrupt Enable Register 3
IRCON2 equ 0BFh                         ; DATA XREF: power_on__ignition_key_turned_+39↑w
                                        ; power_on__ignition_key_turned_+D78C↑w
                                        ; Interrupt Request Control Register 2 (PDIR=0)
IRCON0 equ 0C0h                         ; DATA XREF: IEX6_0-26↑w
                                        ; IEX6_0+5D↑w ...
                                        ; Interrupt Request Control Register 0
CCEN equ 0C1h                           ; DATA XREF: IEX6_0-49↑w
                                        ; IEX6_0-46↑w ...
                                        ; Compare/Capture Enable Register
CCL1 equ 0C2h                           ; DATA XREF: IEX3_0+16↑w
                                        ; IEX4_0+4↑r ...
                                        ; Compare/Capture Register 1, Low Byte
CCH1 equ 0C3h                           ; DATA XREF: IEX3_0+1C↑w
                                        ; IEX4_0+A↑r ...
                                        ; Compare/Capture Register 1, High Byte
CCL2 equ 0C4h                           ; DATA XREF: IE0_0+F5B↑w
                                        ; IE0_0+F5F↑r ...
                                        ; Compare/Capture Register 2, Low Byte
CCH2 equ 0C5h                           ; DATA XREF: IE0_0+F63↑r
                                        ; IE0_0+F8E↑r ...
                                        ; Compare/Capture Register 2, High Byte
CCL3 equ 0C6h                           ; DATA XREF: IEX6_0-C5↑r
                                        ; IEX6_0-B1↑r ...
                                        ; Compare/Capture Register 3, Low Byte
CCH3 equ 0C7h                           ; DATA XREF: IEX6_0-C3↑r
                                        ; IEX6_0-AF↑r ...
                                        ; Compare/Capture Register 3, High Byte
T2CON equ 0C8h                          ; DATA XREF: power_on__ignition_key_turned_+2F↑w
                                        ; power_on__ignition_key_turned_+214↑w ...
                                        ; Timer 2 Control Register
CC4EN equ 0C9h                          ; DATA XREF: power_on__ignition_key_turned_+1D↑w
                                        ; power_on__ignition_key_turned_+14C2↑w ...
                                        ; Compare/Capture 4 Enable Register
CRCL equ 0CAh                           ; DATA XREF: IEX3_0+4↑r
                                        ; IEX3_0+8↑w ...
                                        ; Comp./Rel./Capt. Reg. Low Byte
CRCH equ 0CBh                           ; DATA XREF: IEX3_0+A↑r
                                        ; IEX3_0+E↑w ...
                                        ; Comp./Rel./Capt. Reg. High Byte
TL2 equ 0CCh                            ; DATA XREF: power_on__ignition_key_turned_+220↑w
                                        ; Timer 2, Low Byte
TH2 equ 0CDh                            ; DATA XREF: power_on__ignition_key_turned_+223↑w
                                        ; Timer 2, High Byte
CCL4 equ 0CEh                           ; DATA XREF: IEX6_0+2B4↑w
                                        ; IEX2_0-15↑r ...
                                        ; Compare/Capture Register 4, Low Byte
CCH4 equ 0CFh                           ; DATA XREF: IEX6_0+2B6↑w
                                        ; IEX2_0-F↑r ...
                                        ; Compare/Capture Register 4, High Byte
PSW equ 0D0h                            ; DATA XREF: IEX6_0-12E↑w
                                        ; IEX6_0-12A↑w ...
                                        ; Program Status Word
IRCON1 equ 0D1h                         ; DATA XREF: power_on__ignition_key_turned_+23↑w
                                        ; power_on__ignition_key_turned_+D776↑w
                                        ; Interrupt Request Control Register 1
CML0 equ 0D2h                           ; DATA XREF: IE0_0+F68↑w
                                        ; Compare Register 0, Low Byte (RMAP=0)
CMH0 equ 0D3h                           ; DATA XREF: IE0_0+F66↑w
                                        ; Compare Register 0, High Byte (RMAP=0)
CML1 equ 0D4h                           ; DATA XREF: IE0_0+FE9↑w
                                        ; Compare Register 1, Low Byte (RMAP=0)
CMH1 equ 0D5h                           ; DATA XREF: IE0_0+FE7↑w
                                        ; Compare Register 1, High Byte (RMAP=0)
CML2 equ 0D6h                           ; DATA XREF: IE0_0+F93↑w
                                        ; Compare Register 2, Low Byte (RMAP=0)
CMH2 equ 0D7h                           ; DATA XREF: IE0_0+F91↑w
                                        ; Compare Register 2, High Byte (RMAP=0)
ADCON0 equ 0D8h                         ; DATA XREF: IEX6_0:code_A30↑r
                                        ; IEX6_0:code_A81↑r ...
                                        ; A/D Converter Control Register 0
ADDATH equ 0D9h                         ; DATA XREF: IEX6_0+15B↑r
                                        ; IEX6_0+1AC↑r ...
                                        ; A/D Converter Data Register, High Byte
ADDATL equ 0DAh                         ; DATA XREF: IEX6_0+155↑w
                                        ; IEX6_0+1A6↑w ...
                                        ; A/D Converter Data Register, Low Byte
P7 equ 0DBh                             ; DATA XREF: power_on__ignition_key_turned_:code_3C36↑r
                                        ; power_on__ignition_key_turned_+24B2↑r ...
                                        ; Port 7, Analog/Digital Input
ADCON1 equ 0DCh                         ; DATA XREF: IEX6_0+14F↑w
                                        ; IEX6_0+152↑w ...
                                        ; A/D Converter Control Register 1
P8 equ 0DDh                             ; DATA XREF: power_on__ignition_key_turned_+2F8D↑r
                                        ; Port 8, Analog/Digital Input
CTRELL equ 0DEh                         ; DATA XREF: power_on__ignition_key_turned_+21A↑w
                                        ; Compare Timer Rel. Reg., Low Byte (RMAP=0)
CTRELH equ 0DFh                         ; DATA XREF: power_on__ignition_key_turned_+21D↑w
                                        ; Compare Timer Rel. Reg., High Byte (RMAP=0)
ACC equ 0E0h                            ; DATA XREF: IEX6_0-3F↑r
                                        ; IEX6_0+B↑r ...
                                        ; Accumulator
CTCON equ 0E1h                          ; DATA XREF: IEX6_0+191↑w
                                        ; IEX6_0+1E2↑w ...
                                        ; Compare Timer Control Register
CML3 equ 0E2h                           ; DATA XREF: IE0_0+FBE↑w
                                        ; Compare Register 3, Low Byte (RMAP=0)
CMH3 equ 0E3h                           ; DATA XREF: IE0_0+FBC↑w
                                        ; Compare Register 3, High Byte (RMAP=0)
CML4 equ 0E4h                           ; Compare Register 4, Low Byte (RMAP=0)
CMH4 equ 0E5h                           ; Compare Register 4, High Byte (RMAP=0)
CML5 equ 0E6h                           ; DATA XREF: power_on__ignition_key_turned_+25C8↑w
                                        ; Compare Register 5, Low Byte (RMAP=0)
CMH5 equ 0E7h                           ; DATA XREF: power_on__ignition_key_turned_+25C6↑w
                                        ; Compare Register 5, High Byte (RMAP=0)
P4 equ 0E8h                             ; DATA XREF: TF0_0+557↑w
                                        ; IE0_0+F59↑w ...
                                        ; Port 4 (PDIR=0)
MD0 equ 0E9h                            ; DATA XREF: IE0_0+53↑w
                                        ; IE0_0+69↑r ...
                                        ; Multiplication/Division Register 0
MD1 equ 0EAh                            ; DATA XREF: IE0_0+56↑w
                                        ; IE0_0+6B↑r ...
                                        ; Multiplication/Division Register 1
MD2 equ 0EBh                            ; DATA XREF: IE0_0+58↑w
                                        ; IE0_0+6D↑r ...
                                        ; Multiplication/Division Register 2
MD3 equ 0ECh                            ; DATA XREF: IE0_0+5B↑w
                                        ; IE0_0+6F↑r ...
                                        ; Multiplication/Division Register 3
MD4 equ 0EDh                            ; DATA XREF: IE0_0+5E↑w
                                        ; IE0_0+71↑r ...
                                        ; Multiplication/Division Register 4
MD5 equ 0EEh                            ; DATA XREF: IE0_0+60↑w
                                        ; IE0_0+73↑r ...
                                        ; Multiplication/Division Register 5
ARCON equ 0EFh                          ; Arithmetic Control Register
B equ 0F0h                              ; DATA XREF: IEX6_0-108↑w
                                        ; IEX6_0-102↑r ...
                                        ; B-Register
RESERVED00F1 equ 0F1h                   ; RESERVED
CML6 equ 0F2h                           ; Compare Register 6, Low Byte (RMAP=0)
CMH6 equ 0F3h                           ; Compare Register 6, High Byte (RMAP=0)
CML7 equ 0F4h                           ; Compare Register 7, Low Byte (RMAP=0)
CMH7 equ 0F5h                           ; Compare Register 7, High Byte (RMAP=0)
CMEN equ 0F6h                           ; DATA XREF: IE0_0:code_22E2↑w
                                        ; IE0_0+F6A↑w ...
                                        ; Compare Enable Register (RMAP=0)
CMSEL equ 0F7h                          ; DATA XREF: power_on__ignition_key_turned_+226↑w
                                        ; Compare Input Select (RMAP=0)
P5 equ 0F8h                             ; DATA XREF: IEX6_0-62↑w
                                        ; IEX6_0-60↑w ...
                                        ; Port 5 (PDIR=0)
P9 equ 0F9h                             ; DATA XREF: IEX2_0+34↑w
                                        ; IEX2_0+3D↑w ...
                                        ; Port 9 (PDIR=0)
P6 equ 0FAh                             ; DATA XREF: power_on__ignition_key_turned_+69↑w
                                        ; power_on__ignition_key_turned_+87↑w ...
                                        ; Port 6 (PDIR=0)
RESERVED00FB equ 0FBh                   ; RESERVED
RESERVED00FC equ 0FCh                   ; RESERVED
RESERVED00FD equ 0FDh                   ; RESERVED
RESERVED00FE equ 0FEh                   ; RESERVED
RESERVED00FF equ 0FFh                   ; RESERVED
; end of 'FSR'


                end ;RESET
